<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.willfun.mapper.MemberMapper">
<insert id="insertUser">
INSERT INTO MEMBER(MEM_NO, EMAIL, MEM_PWD, MEM_NAME, TEL , ENABLED)
VALUES (SEQ_MEM_NO.NEXTVAL, #{email}, #{mem_pwd}, #{mem_name}, #{tel}, 1)
</insert>

<insert id="insertAuthority">
INSERT INTO MEMBER_AUTH(EMAIL, AUTH)
VALUES (#{email}, #{auth})
</insert>

<delete id="deleteAuthority">
DELETE FROM MEMBER_AUTH WHERE email = #{email} AND auth = #{role}
</delete>

<!-- 전체 정보 -->
<select id="information" parameterType="String" resultType="org.willfun.domain.MemberDTO">
select * from MEMBER where mem_id = #{mem_id}
</select>

<select id="getMember" resultType="org.willfun.domain.MemberDTO">
SELECT * FROM MEMBER
</select>

<!-- 회원 아이디 중복 체크 -->
 <select id="idCheck" resultType="org.willfun.domain.MemberDTO">
 SELECT mem_id
 FROM MEMBER
 WHERE mem_id = #{mem_id} 
 </select> 

<!-- 아이디 찾기 -->
<select id="findId" parameterType="String" resultType="String">
		select mem_id from MEMBER where mem_email = #{mem_email}
</select>

<!-- 이메일로 변경된 비밀번호 전송 -->
<update id="findPassword" parameterType="org.willfun.domain.MemberDTO">
		update MEMBER set mem_pwd = #{mem_pwd} where mem_id = #{mem_id}
</update>

<!-- 회원정보 수정 -->
<update id="modify" parameterType="org.willfun.domain.MemberDTO">
        UPDATE MEMBER SET mem_name = #{mem_name} , mem_email = #{mem_email}, mem_phone = #{mem_phone}
        WHERE mem_id = #{mem_id}
</update>

<!-- 비밀번호 변경 -->
<update id="changePassword" parameterType="org.willfun.domain.MemberDTO">
update MEMBER set mem_pwd = #{mem_pwd} where mem_id = #{mem_id}
</update>

<resultMap type="org.willfun.domain.MemberDTO" id="userMap">
<id property="email" column="email"/>
<result property="mem_pwd" column="mem_pwd"/>
<result property="mem_name" column="mem_name"/>
<result property="tel" column="tel"/>
<collection property="authList" resultMap="authMap">
</collection>
</resultMap>

<resultMap type="org.willfun.domain.AuthDTO" id="authMap">
<result property="email" column="email"/>
<result property="auth" column="auth"/>
</resultMap>

<select id="read" resultMap="userMap">
SELECT member.email, mem_pwd, mem_name, tel, regdate, enabled, auth
FROM MEMBER member LEFT OUTER JOIN MEMBER_AUTH auth on member.email = auth.email
WHERE member.email = #{email}
</select>

<select id="selectAuth" resultType="org.willfun.domain.AuthDTO">
SELECT email, auth 
FROM MEMBER_AUTH
WHERE email = #{email}
</select>

<resultMap id="getUserById" type="org.willfun.domain.MemberDTO">
    <result property="mem_id" column="mem_id"/>
    <collection property="authList" column="mem_id" javaType="java.util.List" ofType="org.willfun.domain.AuthDTO" select="selectAuth"/>
</resultMap>

<select id="selectUserById" resultMap="getUserById">
SELECT mem_id, mem_name, mem_email, mem_phone FROM MEMBER WHERE mem_id = #{mem_id}
</select>

<select id="allUserById" resultMap="getUserById">
SELECT * FROM MEMBER WHERE mem_id = #{mem_id}
</select>

<select id="selectUser" resultMap="getUserById">
SELECT mem_id FROM MEMBER
</select>

<select id="findAdmin" resultType="org.willfun.domain.MemberDTO">
SELECT * FROM MEMBER where mem_stat = #{mem_stat}
</select>
</mapper>

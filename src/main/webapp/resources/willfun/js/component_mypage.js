! function(e) {
    function t(a) {
        if (n[a]) return n[a].exports;
        var i = n[a] = {
            i: a,
            l: !1,
            exports: {}
        };
        return e[a].call(i.exports, i, i.exports, t), i.l = !0, i.exports
    }
    var n = {};
    t.m = e, t.c = n, t.i = function(e) {
        return e
    }, t.d = function(e, n, a) {
        t.o(e, n) || Object.defineProperty(e, n, {
            configurable: !1,
            enumerable: !0,
            get: a
        })
    }, t.n = function(e) {
        var n = e && e.__esModule ? function() {
            return e.default
        } : function() {
            return e
        };
        return t.d(n, "a", n), n
    }, t.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }, t.p = "", t(t.s = 40)
}([function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n                <input :type="type" :value="num" @input="updateNum($event.target.value)" autocomplete="new-password" pattern="[0-9]*" inputmode="numeric" ref="input"/>\n            ',
                        props: {
                            num: {
                                default: ""
                            },
                            length: {
                                default: 0
                            },
                            type: {
                                default: "text"
                            }
                        },
                        methods: {
                            updateNum: function(e) {
                                var t = e.replace(/^\s+|\s+$/g, "");
                                this.$refs.input.value = t.replace(/[^0-9]/g, ""), this.$emit("input", t.replace(/[^0-9]/g, "")), this.$emit("send-number-value", t.replace(/[^0-9]/g, ""))
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: "\n\t\t\t\t<select>\n\t\t\t\t\t<slot></slot>\n\t\t\t\t</select>\n\t\t\t",
                        props: ["options", "value", "placeholderText"],
                        mounted: function() {
                            var e = this,
                                t = {
                                    data: this.options,
                                    minimumResultsForSearch: -1
                                };
                            void 0 != this.placeholderText && (t.placeholder = this.placeholderText), $(this.$el).select2(t).val(this.value).trigger("change").on("change", function() {
                                e.$emit("input", this.value), e.$emit("change", this.value)
                            })
                        },
                        watch: {
                            value: function(e) {
                                $(this.$el).val(e).trigger("change")
                            }
                        },
                        destroyed: function() {
                            $(this.$el).off().select2("destroy")
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n\t\t\t\t<input type="file" class="dropify" v-on:change="read" :data-allowed-file-extensions="defaultFileExt" :data-max-file-size-preview="defaultFileMaxSize"/>\n\t\t\t',
                        props: {
                            defaultMessage: {
                                default: "이미지 추가하기"
                            },
                            defaultImg: {
                                default: ""
                            },
                            defaultFileExt: {
                                default: "png jpg jpeg"
                            },
                            defaultFileMaxSize: {
                                default: "5M"
                            },
                            defaultIndex: {
                                default: 0
                            }
                        },
                        data: function() {
                            return {
                                file: {
                                    fileData: "",
                                    fileName: this.defaultImg,
                                    state: !0
                                },
                                tag: ""
                            }
                        },
                        computed: {
                            img: function() {
                                return "" != this.defaultImg ? "//" + this.defaultImg : this.defaultImg
                            }
                        },
                        beforeDestroy: function() {
                            this.tag.destroy()
                        },
                        mounted: function() {
                            var e = this,
                                t = $(this.$el).dropify({
                                    defaultFile: e.img,
                                    messages: {
                                        default: e.defaultMessage,
                                        replace: "터치 하여 이미지를 교체 합니다",
                                        remove: "삭제",
                                        error: "오류가 발생하였습니다."
                                    }
                                });
                            t.on("dropify.afterClear", function(t, n) {
                                e.file.fileData = "", e.file.fileName = "", e.$emit("input", e.file), e.$emit("clear", e.defaultIndex), e.$emit("remove-img")
                            }), this.tag = t.data("dropify")
                        },
                        methods: {
                            read: function(e) {
                                var t = this,
                                    n = e.target.files || e.dataTransfer.files;
                                if (n.length) {
                                    var a = new FileReader;
                                    a.onload = function(e) {
                                        n[0] && (t.file.fileData = e.target.result, t.file.fileName = n[0].name, t.$emit("input", t.file))
                                    }, a.readAsDataURL(n[0])
                                }
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n                \x3c!-- 본인인증 모달  --\x3e\n                <div id="authModal" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">\n                    <div class="modal-dialog" role="document">\n                        <div class="modal-content">\n                        \t<div class="modal-header">\n                                <button type="button" class="close" v-on:click="modalHide" aria-label="Close" class="xButton"></button>\n\t\t\t\t\t\t\t</div>\n                            <div class="modal-body"  :style="\'height:\' + (winHei - 200) + \'px;\'">\n                                <div class="agree-body">\n                                    <template v-if="agreeIdx == 0">\n                                        <div class="agree-subtitle">제1조 (목적)</div>\n                                        본 약관은 NICE평가정보(주) (이하 "회사"라 한다)이 제공하는 본인확인서비스(이하 "서비스"라 한다)에 관한 이용조건 및 절차 등 기본적인 사항을 규정함을 목적으로 합니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제2조 (약관의 효력 및 변경)</div>\n                                        1. 본 약관은 "이용자"에게 "서비스" 화면에 게시하거나, 기타의 방법으로 공지하는 것으로 효력이 발생합니다.<br/>\n                                        2. "회사"는 약관의 규제에 관한 법률 및 기타 관련 법령에 위배되지 않는 범위에서 본 약관의 내용을 개정할 수 있으며, 변경된 경우에는 제1항과 같은 방법으로 공지합니다. 다만 "이용자"의 권리와 의무에 관한 중요한 사항은 변경된 내용의 시행 15일 이전에 공지합니다.<br/>\n                                        3. "이용자"는 변경된 약관에 대한 내용을 알지 못하여 발생하는 손해 및 피해에 대해서는 "회사"가 책임을 지지 않습니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제3조 (약관 외 준칙)</div>\n                                        본 약관에 명시되지 아니한 사항에 대해서는 정보통신망 이용 촉진 및 정보보호 등에 관한 법률등 기타 관련 법령 또는 상관례에 따릅니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제4조 (용어의 정의)</div>\n                                        본 약관에서 사용하는 용어의 정의는 다음과 같습니다.<br/>\n                                        1. "본인확인서비스"라 함은 "이용자"가 인터넷상에서 휴대폰 등의 인증수단을 이용하여, 본인임을 안전하게 식별 및 확인해 주는 서비스를 말합니다.<br/>\n                                        2. "이용자"라 함은 "회사"에서 제공하는 "서비스"의 이용을 위해 자신의 "본인확인정보"를 "회사" 및 "본인확인기관" 등에게 제공하고, 본인임을 확인 받고자 하는 자를 말합니다.<br/>\n                                        3. "본인확인정보"라 함은 "이용자"가 입력한 생년월일, 성별, 성명, 내/외국인, 휴대폰번호, 통신사 등 본인 식별에 필요한 "이용자"의 정보를 말합니다.<br/>\n                                        4. "본인확인기관"이라 함은 주민등록번호를 사용하지 아니하고 본인을 확인하는 방법 또는 서비스를 제공하는 자로 방송통신위원회로부터 본인확인기관으로 지정을 받은 자를 의미합니다.<br/>\n                                        5. "인터넷사업자"라 함은 인터넷을 이용하여 정보를 제공하거나, 정보의 제공을 매개하는 일을 업으로 하는 자로 "회사"와 계약을 통해 운영하며, 인터넷 웹사이트의 "이용자"에 대한 "본인확인정보"를 제공 받는 사업체를 말합니다.<br/>\n                                        6. "중복가입확인정보"라 함은 웹사이트에 가입하고자 하는 이용자의 중복 확인을 위해 제공되는 정보를 말합니다.<br/>\n                                        7. "연계정보" 라 함은 "인터넷사업자"의 온ㆍ오프라인 서비스 연계 등의 목적으로 "이용자"를 식별하기 위해 제공되는 정보를 말합니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제5조 (회사의 의무)</div>\n                                        1. "회사"는 "서비스" 제공과 관련하여 인지한 "이용자"의 "본인확인정보"를 본인의 승낙 없이 제3자에게 누설하거나 배포하지 않습니다. 단, 국가기관의 요구가 있는 경우, 범죄에 대한 수사상의 목적이 있는 경우 등 기타 관계법령에서 정한 절차에 따른 요청이 있는 경우에는 그러하지 않습니다.<br/>\n                                        2. "회사"는 "이용자"에게 안전한 "서비스" 제공을 위하여 지속적으로 "서비스"의 예방점검, 유지보수 등을 이행하며, "서비스"의 장애가 발생하는 경우, 이를 지체 없이 수리 및 복구합니다.<br/>\n                                        3. "회사"는 "이용자"가 제기한 의견, 불만이 타당하다고 인정되는 경우 적절한 절차를 거쳐 이를 지체 없이 처리하거나 처리에 관한 일정을 통지하여야 합니다.<br/>\n                                        4. "회사"는 접근매체의 발급 주체가 아닌 경우에는 접근 매체의 위조나 변조로 발생한 사고로 인하여, "이용자"에게 발생한 손해에 대하여 배상책임이 없습니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제6조 (이용자의 의무)</div>\n                                        1. "이용자"는 "서비스"를 이용함에 있어서 다음 각호에 해당하는 행위를 하여서는 안되며, "회사"는 위반 행위에 따르는 일체의 법적 책임을 지지 않습니다.<br/>\n                                        1) 타 "이용자"의 "본인확인정보"를 부정하게 사용 및 도용하는 행위<br/>\n                                        2) "회사"의 저작권, 제3자의 저작원 등 기타 권리를 침해하는 행위<br/>\n                                        3) 범죄 행위<br/>\n                                        4) 기타 관련 법령에 위배되는 행위<br/>\n                                        2. "이용자"는 자신의 접근매체를 제3자에게 누설 또는 노출하거나 방치하여서는 안되며, 접근 매체의 도용이나 위조 또는 변조를 방지하기 위하여 충분한 주의를 기울여야 합니다.<br/>\n                                        3. "이용자"는 본 약관에서 규정하는 사항과 "서비스"에 대한 이용안내 또는 주의사항을 준수하여야 합니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제7조 (서비스의 내용)</div>\n                                        1. "서비스"는 "이용자"가 주민등록번호의 입력 없이, 본인명의로 된 인증수단(휴대폰 등)을 이용하여 본인 확인이 가능한 인증 서비스 입니다.<br/>\n                                        2. "인터넷사업자"는 회원가입, ID/PW찾기, 성인인증, 기타 본인확인이 필요한 컨텐츠 요청 시 "이용자"에게 "서비스"를 제공 합니다.<br/>\n                                        3. "이용자"는 자신의 생년월일, 성명, 성별, 내/외국인, 휴대폰번호, 통신사 등의 정보를 입력 후, 입력한 정보가 일치한 경우 해당 휴대폰번호로 1회성 비밀번호(승인번호)가 발송되며, 수신된 승인번호를 정확하게 입력하는 것으로 본인 확인이 이루어 집니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제8조 (서비스 제공시간)</div>\n                                        1. "서비스"의 이용은 연중무휴 1일 24시간을 원칙으로 합니다. 다만, 정기 점검 및 기타 기술상의 이유로 "서비스"가 일시 중지될 수 있고 또한, 운영상의 목적으로 "회사"가 정한 기간에도 일시 중지될 수 있습니다.<br/>\n                                        2. "회사"는 효율적인 업무 수행을 위하여 필요하다고 판단하는 경우 "서비스"를 일정 범위로 분할 하여 각 범위 별로 이용가능 시간을 달리 정할 수 있으며, 이 경우 그 내용을 공지 합니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제9조 (서비스 제공의 중지)</div>\n                                        1."회사"는 다음 각 호에 해당하는 사유가 있는 경우 "서비스" 제공의 전부 또는 일부를 중지할 수 있습니다.<br/>\n                                        1) "서비스"를 위한 설비의 보수 등 공사로 인한 부득이한 경우<br/>\n                                        2) 정전, 제반 설비의 장애 또는 이용량의 폭주 등으로 정상적인 "서비스" 이용에 지장이 있는 경우<br/>\n                                        3) "서비스" 계약종료 등과 같은 "인터넷사업자"의 제반 사정으로 "서비스"를 유지할 수 업는 경우<br/>\n                                        4) 기타 천재지변, 국가비상사태 등 불가항력적 사유가 있는 경우<br/>\n                                        2. "회사"는 "서비스"의 변경, 중지로 발생하는 문제에 대해서는 어떠한 책임도 지지 않습니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제10조 (서비스의 안전성 확보)</div>\n                                        1. "회사"는 "서비스"의 안전성과 신뢰성을 확보하기 위하여 업무처리지침의 제정 및 시행, 정보처리시스템 및 전산자료의 관리 등의 관리적 조치와 모니터링 체계 및 해킹방지시스템 구축 및 운영 등의 기술적 조치를 취하고 있습니다.<br/>\n                                        2. "회사"는 서버 및 통신기기의 정상작동여부 확인을 위하여 정보처리시스템 자원 상태의 감시, 경고 및 제어가 가능한 모니터링 체계를 갖추고 있습니다.<br/>\n                                        3. "회사"는 해킹 침해 방지를 위하여 다음 각 호의 시스템 및 프로그램을 설치하여 운영합니다.<br/>\n                                        1) 침입차단시스템 설치<br/>\n                                        2) 침입탐지시스템 설치<br/>\n                                        3) 그 밖에 필요한 보호장비 또는 암호프로그램 등 정보보호시스템 설치<br/>\n                                        1. "회사"는 컴퓨터바이러스 감염을 방지하기 위하여 다음 각 호를 포함한 대책을 수립, 운영하고 있습니다.<br/>\n                                        1) 출처, 유통경로 및 제작자가 명확하지 아니한 응용프로그램은 사용을 자제하고 불가피할 경우에는 컴퓨터바이러스 검색프로그램으로 진단 및 치료 후 사용할 것<br/>\n                                        2) 컴퓨터바이러스 검색, 치료 프로그램을 설치하고 최신 버전을 유지할 것<br/>\n                                        3) 컴퓨터바이러스 감염에 대비하여 방어, 탐색 및 복구 절차를 마련할 것\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제11조 (이용자의 개인정보보호)</div>\n                                        "회사"는 관련법령이 정하는 바에 따라서 "이용자"의 개인정보를 보호하기 위하여 노력합니다. "이용자"의 개인정보보호에 관한 사항은 관련법령 및 "회사"가 정하는 "개인정보취급방침"에 정한 바에 따릅니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제12조 (개인정보의 위탁)</div>\n                                        "회사"는 수집된 개인정보의 취급 및 관리 등의 업무를 스스로 수행함을 원칙으로 하나, 필요한 경우 업무의 일부 또는 전부를 "회사"가 선정한 회사에 위탁할 수 있습니다. 개인정보의 위탁에 관한 사항은 관련법령 및 "회사"가 정하는 "개인정보취급방침"에 정한 바에 따릅니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제13조 (손해배상)</div>\n                                        "회사"는 "서비스"의 이용과 관련하여 "이용자"에게 발생한 "회사"측의 중과실에 의한 손해를 제외한 어떠한 손해에 관하여도 책임을 지지 않습니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제14조 (회사와 인터넷사업자와의 관계)</div>\n                                        1. "회사"는 "인터넷사업자"가 제공하는 서비스 상품 또는 용역 등에 대하여 보증책임을 지지 않습니다.<br/>\n                                        2. "회사"와 "인터넷사업자"는 독자적으로 사이트를 운영하며, "인터넷사업자"와 "이용자"간에 행해진 거래에 대하여 고의 또는 중과실이 있는 경우를 제외하고는 어떠한 책임도 지지 않습니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제15조 (면책)</div>\n                                        1. "회사"의 고의 또는 과실 없이 "서비스"를 제공할 수 없는 경우에는 "서비스" 제공에 관한 책임이 면제됩니다.<br/>\n                                        2. "회사"는 "이용자" 또는 제3자 측의 사정으로 인한 "서비스" 이용의 장애에 대하여 책임을 지지 않습니다.<br/>\n                                        3. "회사"는 고의 또는 중과실이 없는 한 "이용자"가 "서비스"를 이용하여 기대하는 수익을 상실한 것에 대하여 책임을 지지 않으며 그밖에 "서비스"를 통하여 얻은 자료로 인한 손해에 관하여 책임을 지지 않습니다.<br/>\n                                        4. "회사"는 "이용자"가 "서비스"에 게재한 정보, 자료, 사실의 신뢰도, 정확성 등 내용에 관하여는 고의 또는 중과실이 없는 한 일체의 책임을 지지 않습니다.<br/>\n                                        5. 계약만료 또는 요금 미납의 결과로 사용자계정이 정지되거나, 보관 파일이 삭제된 후 이에 따르는 손해에 대하여 책임을 지지 않습니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">제16조 (관할 법원)</div>\n                                        1. "회사"와 "이용자"는 "서비스"와 관련하여 분쟁이 발생한 경우, 원만하게 해결하기 위하여 필요한 모든 노력을 하여야 합니다.<br/>\n                                        2. 제1항의 협의에서도 분쟁이 해결되지 않은 경우 등, 약관과 관련하여 분쟁으로 인한 소송이 제기될 경우 동 소송은 서울중앙지방법원을 관할 법원으로 합니다.\n                                        <br/><br/>\n                                        <div class="agree-subtitle">부칙</div>\n                                        (시행일) 이 약관은 공시한 날로부터 시행합니다.\n\n                                    </template>\n                                   \n                                    <template v-if="agreeIdx == 1">\n    \t                                <template v-if="selectCom == 1 || selectCom == 5">\n                                            \n                                            <div class="agree-subtitle">1조 (목적)</div>\n                                            이 약관은 ‘본인확인서비스’를 제공하는 에스케이텔레콤 주식’회사’(이하 ‘‘회사’’라 합니다)와 ‘본인확인서비스’ 이용자 (이하 ‘이용자’라 합니다)간에 ‘본인확인서비스’ 이용에 관한 ‘회사’와 ‘이용자’의 권리와 의무, 기타 제반 사항을 정함을 목적으로 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">2조 (용어의 정의)</div>\n                                            ① ‘본인확인서비스’라 함은 ‘이용자’가 유무선 인터넷 웹’사이트’ 및 스마트폰 Application 등(이하 ‘사이트’라 합니다)에서 본인 명의로 개통한 휴대폰을 이용하여, 본인확인정보를 입력하고 인증 절차를 통하여 본인 여부와 본인이 등록한 정보의 정확성을 확인하여 주는 서비스를 말합니다.<br/>\n\n                                            ② ‘본인확인정보’라 함은 본인확인을 위하여 ‘이용자’가 입력한 본인의 생년월일, 성별, 성명, 내/외국인 여부, 본인명의로 개통된 이동전화번호, 기타 ‘회사’와 ‘이용자’간에 별도로 설정한 번호 등 ‘이용자’에 대한 ‘본인확인서비스’ 제공을 위해 필요한 정보를 말합니다.<br/>\n\n                                            ③ ‘이용자’라 함은 ‘사이트’에서 ‘회사’가 제공하는 ‘본인확인서비스’를 이용하는 자를 말하며, ‘회사’의 이동전화서비스 가입자와 ‘회사’의 이동전화망을 이용하여 개별적으로 이동전화서비스를 제공하는 별정통신사업자의 가입자중 ‘회사’의 ‘본인확인서비스’를 이용하는 자를 말합니다.<br/>\n\n                                            ④ ‘중복가입확인정보’라 함은 ‘이용자’가 ‘사이트’에 가입하거나 ‘사이트’에서 특정 서비스 이용, 구매 등 어떤 행동을 할 때, 해당 ‘이용자’의 기 가입/이용 여부를 확인하기 위하여 생성되는 정보를 말합니다.<br/>\n\n                                            ⑤ ‘본인확인기관’이라 함은 정보통신망 이용촉진 및 정보보호 등에 관한 법률 등 ‘본인확인서비스’ 관련 법령에 따라 주민등록번호를 수집·이용하고, ‘사이트’에서 주민등록번호를 사용하지 아니하고 본인을 확인할 수 있도록 해주는 방법(이하 ‘대체수단’이라 합니다)을 개발·제공·관리하는 업무를 담당하는 사업자를 말합니다.<br/>\n\n                                            ⑥ ‘연계 식별정보’라 함은 ‘이용자’가 가입/등록한 ‘사이트’들간의 서비스 또는 Contents, point등의 연계, 정산 등의 목적으로 ‘사이트’에 가입/등록한 ‘이용자’를 식별하기 위하여 생성되는 정보를 말합니다.<br/>\n\n                                            ⑦ ‘대행기관’은 ‘이용자’가 ‘사이트’에서 ‘본인확인서비스’를 제공받을 수 있도록, ‘사이트’와 ‘회사’간의 ‘본인확인서비스’를 중계하고 ‘이용자’에게 ‘본인확인서비스’ 이용방법의 안내와 문의 등 지원업무를 담당하는 등, ‘회사’가 위탁한 업무범위내에서 ‘회사’를 대신하여 ‘이용자’에게 ‘본인확인서비스’와 관련된 업무를 제공하는 사업자를 말합니다.<br/>\n\n                                            ⑧ ‘사이트’라 함은 유무선 인터넷 웹’사이트’, 스마트폰 Application 등을 통하여 ‘이용자’에게 상품, 서비스, Contents, Point 등 각종 재화와 용역을 유/무료로 제공하는 개인, 법인, 기관, 단체 등을 말합니다.<br/>\n\n                                            ⑨ ‘접근매체’란 ‘본인확인서비스’ 이용을 위해 ‘이용자’ 및 ‘이용자’가 입력하는 내용 등의진실성과 정확성을 담보하는 수단으로서, ‘이용자’가 입력하는 제2항의 정보, I-PIN ID 및 Password 등 ‘본인확인기관’에서 발급받은 정보, 기타 ‘이용자’가 ‘회사’ 및 ‘사이트’에서 설정한 ID 및 Password 등의 정보, ‘이용자’ 명의의 이동전화 번호 등을 말합니다.<br/>\n\n                                            ⑩ ‘대체수단’이라 함은 ‘중복가입확인정보’ 및 연계식별정보를 포함하여, 주민등록정보를 사용하지 아니하고 본인여부를 식별 및 확인할 수 있는 수단을 말합니다.<br/>\n\n                                            ⑪ ‘부가서비스’라 함은 ‘회사’가 ‘본인확인서비스’와 관련하여 추가적인 보안·인증절차 등을 유료 또는 무료로 제공하는 서비스를 말하여, 유료인 경우에는 ‘이용자’에 대해 ‘회사’의 이동전화서비스 청구서에 합산하여 ‘부가서비스’ 이용요금을 청구하고 이동전화 요금과 함께 수납합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">3조 (약관의 명시 및 변경)</div>\n\n                                            ① ‘회사’는 이 약관을 ‘회사’가 운영하는 ‘사이트’ 등에 게시하거나 ‘이용자’의 ‘본인확인서비스’ 이용시 공개하여 ‘이용자’가 이 약관의 내용을 확인할 수 있도록 합니다. 또한 ‘이용자’의 요청이 있는 경우 전자문서의 형태로 약관 사본을 ‘이용자’에게 교부합니다.<br/>\n\n                                            ② ‘회사’는 필요하다고 인정되는 경우 이 약관을 변경할 수 있으며, ‘회사’가 약관을 변경할 경우에는 적용일자 및 변경사유를 명시하여 ‘회사’가 운영하는 ‘사이트’에서 적용일자 15일 전부터 공지합니다.<br/>\n\n                                            ③ ‘회사’가 전항에 따라 변경 약관을 공지 또는 통지하면서 ‘이용자’에게 약관 변경 적용일 까지 거부의사를 표시하지 않으면 약관의 변경에 동의한 것으로 간주한다는 내용을 명확하게 공지 또는 통지하였음에도 ‘이용자’가 명시적으로 약관 변경에 대한 거부의사를 표시하지 아니하면 ‘이용자’가 변경 약관에 동의한 것으로 간주합니다. ‘이용자’는 변경된 약관 사항에 동의하지 않으면 ‘본인확인서비스’ 이용을 중단하고 이용 계약을 해지할 수 있습니다.<br/>\n\n                                            ④ ‘이용자’ 또는 ‘사이트’가 이 약관의 내용(약관 변경시 변경된 내용 포함)을 알지 못하여 발생하는 손해 및 피해에 대해서는 ‘회사’는 일체 책임을 지지 않습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">4조 (이용 계약의 성립)</div>\n                                            ‘이용자’가 ‘사이트’ 등에 게시되거나 ‘본인확인서비스’ 이용시 공개되는 이 약관의 내용에 “동의” 버튼을 누르거나 체크하면 약관에 동의하고, ‘본인확인서비스’ 이용을 신청한 것으로 간주합니다.\n                                            <br/><br/>\n\n                                            <div class="agree-subtitle">5조 (본인확인정보 및 ‘접근매체’의 관리 등)</div>\n\n                                            ① ‘회사’는 ‘본인확인서비스’ 제공시 ‘이용자’가 사용한 ‘접근매체’와 입력된 본인확인정보, ‘사이트’에서 제공하는 정보 등을 이용하여, ‘이용자’의 신원, 권한 및 ‘본인확인서비스’를 요청한 내역 등을 확인 할 수 있습니다.<br/>\n\n                                            ② ‘이용자’는 자신의 본인확인 정보 및 ‘접근매체’를 제3자에게 대여하거나 사용을 위임하거나 양도 또는 담보 목적으로 제공할 수 없으며, 본인확인정보 및 ‘접근매체’의 도용이나 위조·변조 등을 방지하기 위해 충분한 주의를 기울여야 합니다.<br/>\n\n                                            ③ ‘이용자’는 자신의 본인확인정보 및 ‘접근매체’를 제3자에게 누설 또는 노출하거나 방치하여서는 안됩니다.<br/>\n\n                                            ④ ‘이용자’는 ‘접근매체’의 분실·도난·유출·위조·변조 등 또는 본인확인정보 유출 등의 사실을 인지할 경우 ‘회사’에 즉시 통지하여야 하며, ‘회사’는 ‘이용자’의 통지를 받은 때부터 즉시 ‘본인확인서비스’를 중지합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">6조 (‘본인확인서비스’ 안내)</div>\n\n                                            ① ‘회사’가 제공하는 ‘본인확인서비스’는, ‘이용자’가 입력한 본인확인정보에 대해, ‘이용자’가 본인 명의로 개통하고 사용하고 있는 이동전화 서비스 관련 정보·’중복가입확인정보’·’연계 식별정보’를 이용하여, 본인 식별 또는 본인의 성년·미성년 여부, 중복가입여부 등을 확인하여주는 서비스 입니다. 단, ‘회사’의 이동전화망을 이용하여 개별적으로 이동전화서비스를 제공하는 별정통신사업자의 가입자에 대해서는 개별 별정통신사업자가 ‘회사’에 취급을 위탁한 정보만을 기반으로 본문의 서비스를 제공합니다.<br/>\n\n                                            ② ‘회사’는 직접 또는 ‘대행기관’을 통하여 ‘사이트’에, 서비스 화면 또는 Socket형태로 ‘본인확인서비스’를 제공하며, ‘사이트’는 ‘사이트’ 운영과 관련된 법령과 ‘사이트’ 이용약관에 따라 ‘이용자’에게 ‘본인확인서비스’ 이용 수단을 제공합니다.<br/>\n\n                                            ③ ‘이용자’는 특정 ‘사이트’에서 ‘회사’ 및 ‘대행기관’의 이용약관, ‘사이트’의 이용약관에 동의하는 경우, 해당 ‘사이트’에서 ‘회사’가 제공하는 ‘본인확인서비스’를 이용하실 수 있습니다.<br/>\n\n                                            ④ 제3항에 따라 각 이용약관에 동의한 경우, ‘이용자’가 자신의 생년월일, 성명, 성별, 내/외국인, 본인 명의로 가입한 이동통신사와 이동전화 번호 등의 정보를 입력하고, 입력한 정보가 일치하는 경우에 ‘이용자’의 이동전화 번호로 송신되는 1회성 암호(승인암호)를 정확하게 입력하는 것으로 본인 확인이 이루어 집니다. 단, ‘회사’가 직접 운영하는 ‘사이트’ 또는 관련 법령 등에 따라 주민등록번호의 수집·이용이 허용되는 ‘사이트’에서는 생년월일 대신 주민등록번호를 받을 수 있습니다.<br/>\n\n                                            ⑤ 제4항에 따라 본인확인이 완료된 ‘이용자’에 대해서는 해당 ‘이용자’의 본인확인정보, ‘중복가입확인정보’ 및 ‘연계 식별정보’를 ‘회사’가 보유하고 있는 경우, ‘사이트’의 요청에 따라 ‘사이트’에 제공될 수 있으며, 제공된 정보는 각 ‘사이트’가 ‘이용자’와 체결한 약관, 계약에 따라 운영·관리·폐기됩니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">7조(‘본인확인서비스’의 ‘부가서비스’)</div>\n\n                                            ① ‘회사’는 ‘본인확인서비스’ 이용과 관련하여, 보다 강화된 보안을 필요로 하는 ‘이용자’가 가입을 신청하는 경우에 한하여, 별도의 ‘부가서비스’를 유료 또는 무료로 제공합니다.<br/>\n\n                                            ② ‘회사’가 제공하는 ‘부가서비스’는 다음 각 호와 같으며, 상세 서비스 내용 및 이용 조건은 서비스별 이용약관에 따릅니다.<br/>\n\n                                            1. 휴대폰 인증보호 서비스 (월 1천원, 부가가치세 별도)\n                                            <br/><br/>\n                                            <div class="agree-subtitle">8조 (‘대체수단’의 생성 및 제공)</div>\n\n                                            ① ‘회사’는 ‘이용자’의 이동전화 가입시 수집한 주민등록번호를 토대로 ‘대체수단’을 생성하고 ‘사이트’에 제공할 수 있습니다.<br/>\n\n                                            ② ‘회사’의 ‘대체수단’ 생성 및 제공방법은 다음 각 호와 같습니다.<br/>\n\n                                            1. ‘이용자’의 이동전화 가입시, 제3의 ‘본인확인기관’에 실명 사용여부를 질의하고, 이에 따라 ‘대체수단’을 받아와서 저장하는 방법<br/>\n                                            2. ‘이용자’의 ‘본인확인서비스’ 이용시, 제3의 ‘본인확인기관’간의 합의를 통하여 비밀번호 등 ‘대체수단’ 규격을 정한 후, 이에 따라 ‘회사’가 생성하거나 제3의 ‘본인확인기관’으로부터 제공받는 방법<br/>\n                                            3. ‘이용자’의 ‘본인확인서비스’ 이용시, 해당 ‘이용자’의 이동전화가입시 ‘회사’가 제공받은 주민등록번호와 해당 ‘이용자’가 이용하고 있는 ‘사이트’의 일련번호를 제3의 ‘본인확인기관’에 제공하고, 이에 해당되는 ‘대체수단’을 받아와서 제공하는 방법<br/>\n\n                                            ③ 제1항 제3호에 따라 ‘회사’가 제3의 ‘본인확인기관’으로부터 ‘대체수단’을 제공받은 경우, 해당 ‘대체수단’의 정확성 유무에 대해서는 ‘회사’가 책임지지 않습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">9조 (‘본인확인서비스’ 제공시간)</div>\n\n                                            ① ‘본인확인서비스’의 이용은 연중무휴 1일 24시간을 원칙으로 합니다. 다만, 정기 점검 및 기타 기술상의 이유, 기타 운영상의 사유와 목적에 따라 ‘회사’가 정한 기간에 일시 중지될 수 있으며, 각 ‘사이트’의 기술상, 운영상의 사유와 목적에 따라 일시 중지될 수 있습니다.<br/>\n\n                                            ② ‘회사’는 ‘본인확인서비스’ 중지에 따라 ‘이용자’에게 별도의 보상은 하지 않습니다. 단 ‘본인확인서비스’를 이용기간에 따라 정액제 형태로 유료 판매하는 경우, 정액제 유료 ‘이용자’에게는 중지시간이 24시간을 초과한 경우에 한하여, 월 이용금액을 해당월의 날짜 수로 일할 계산하여 환불 또는 차감하며, 이용금액의 과금 당사자가 ‘회사’인 경우에는 ‘회사’가, ‘대행기관’인 경우에는 ‘대행기관’이 환불 또는 차감하여 드립니다.<br/>\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제10조 (‘회사’의 권리와 의무)</div>\n\n                                            ① ‘회사’가 ‘접근매체’의 발급주체가 아닌 경우에는 ‘접근매체’의 위조·변조·누설 등으로 인해 ‘이용자’에게 발생한 손해에 대하여 배상책임이 없습니다.<br/>\n\n                                            ② ‘이용자’가 제5조 제2항 내지 제4항의 내용을 준수하지 아니하거나, ‘회사’가 부정사용 여부를 확인할 수 없는 ‘접근매체’ 또는 본인확인정보의 이용으로 인해 발생한 ‘이용자’의 손해에 대하여 ‘회사’는 배상책임이 없습니다.<br/>\n\n                                            ③ ‘회사’는 ‘본인확인서비스’ 제공과 관련하여 인지한 ‘이용자’의 본인확인정보를 본인의 승낙 없이 제3자에게 누설하거나 배포하지 않습니다. 단, 국가기관의 요구가 있는 경우, 범죄에 대한 수사상의 목적이 있는 경우 등 관계 법령에서 정한 절차에 따른 요청이 있는 경우에는 그러하지 않습니다.<br/>\n\n                                            ④ ‘회사’는 ‘이용자’에게 안정적인 ‘본인확인서비스’ 제공을 위하여 지속적으로 관련 시스템이나 절차, 기능 등의 예방점검, 유지보수 등을 이행하며, ‘본인확인서비스’의 장애가 발생하는 경우, 이를 지체 없이 수리 및 복구합니다.<br/>\n\n                                            ⑤ ‘회사’는 복제폰, 대포폰, 휴대폰 소액대출(일명 휴대폰깡) 등 시장 질서를 교란시키는 불법행위에 의한 피해 방지를 위하여 불법행위가 의심되는 ‘이용자’ 또는 회선에 대한 ‘본인확인서비스’ 이용을 제한하거나 중지하는 것은 물론, 관계 법령에 따라 행정 및 사법기관에 수사를 의뢰할 수 있습니다.<br/>\n\n                                            ⑥ ‘회사’는 ‘회사’가 제공하는 이동전화 등 통신역무의 요금을 정상적으로 납부하지 않거나 일부 특수 요금제에 가입한 ‘이용자’에 대하여 ‘본인확인서비스’ 이용을 제한할 수 있습니다.<br/>\n\n                                            ⑦ ‘회사’는 ‘이용자’가 ‘회사’의 이동전화 등 통신역무 이용을 위해 제출한 가입신청서 또는 이와 관련된 본인확인 절차가, 명의도용, 관련 서류 위·변조 등 위법 행위가 개입된 사실을 확인하는 즉시 해당 ‘이용자’ 및 회선에 대한 ‘본인확인서비스’ 제공을 중지하며, 해당 ‘이용자’와 회선에 대해 관련 법령 및 통신역무 이용약관에 따른 조치를 취할 수 있습니다.<br/>\n\n                                            ⑧ ‘이용자’중 ‘회사’의 이동전화망을 이용하여 개별적으로 이동전화서비스를 제공하는 별정통신사업자의 가입자에 대해서는, 개별 별정통신사업자의 본인확인절차 미비, 명의도용, 관련 서류 위·변조, 본인확인정보의 오류 등에 대해 ‘회사’는 일절 책임을 부담하지 않고, 개별 별정통신사업자가 일체의 책임을 부담합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">11조 (‘이용자’의 권리와 의무)</div>\n\n                                            ① ‘이용자’는 ‘본인확인서비스’를 이용함에 있어서 다음 각 호에 해당하는 행위를 하여서는 안되며, ‘회사’는 ‘이용자’의 다음 각 호의 행위에 대해 일체의 법적 책임을 지지 않습니다.<br/>\n\n                                            1. 본인이 아닌 타인의 본인확인정보를 부정하게 사용 및 도용하는 행위<br/>\n                                            2. ‘회사’ 및 ‘대행기관’, ‘사이트’의 저작권, 제3자의 저작권 등 기타 권리를 침해하는 행위<br/>\n                                            3. 법령에 규정하는 제반 범죄 및 위법 행위<br/>\n                                            4. 이 약관에 규정된 ‘이용자’의 의무 또는 준수사항을 위반하는 행위<br/>\n\n                                            ② ‘이용자’는 이 약관에서 규정하는 사항과 ‘본인확인서비스’에 대한 이용안내 또는 주의사항 등을 준수하여야 합니다.<br/>\n\n                                            ③ ‘이용자’는 제5조의 의무를 이행하여야 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">12조 (‘이용자’ 정보의 제공 범위)</div>\n\n                                            ① ‘회사’는 ‘본인확인서비스’를 제공함에 있어 취득한 ‘이용자’의 정보를 ‘이용자’의 동의 없이 제3자에게 제공, 누설하거나 업무상 목적 외에 사용하지 않습니다.<br/>\n\n                                            ② ‘이용자’가 개인정보의 수집·이용·제공에 동의하고 이용하는 ‘사이트’ 또는 신용카드사 등 제3자가, ‘이용자’의 이동전화 번호 및 해당 ‘사이트’·신용카드사 등 제3자가 보유한 ‘대체수단’의 진실성 여부를 ‘회사’에 대해 확인할 경우, ‘회사’는 해당 이동전화 번호 및 ‘대체수단’의 진실성 여부를, 확인을 요청한 ‘사이트’ 또는 신용카드사 등 제3자에게 회신할 수 있습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">13조 (‘본인확인서비스’의 안정성 확보)</div>\n\n                                            ① ‘회사’는 ‘본인확인서비스’의 안전성과 신뢰성, 보안성을 확보하기 위하여 해킹방지시스템 및 보안관리 체계 구성, 접근제한 등 기술적, 관리적 조치를 취합니다.<br/>\n\n                                            ② ‘회사’는 ‘본인확인서비스’ 관련 서버 및 통신기기의 정상작동여부 확인을 위하여 정보처리시스템 자원 상태의 감시, 경고 및 제어가 가능한 모니터링 체계를 갖춥니다.<br/>\n\n                                            ③ ‘회사’는 해킹 침해 방지를 위하여 다음 각 호의 시스템 및 프로그램을 설치하여 운영합니다.<br/>\n\n                                            1. 침입 차단 및 탐지시스템 설치<br/>\n                                            2. 그 밖에 필요한 보호장비 또는 암호프로그램 등 정보보호시스템 설치<br/>\n\n                                            ④ ‘회사’는 컴퓨터바이러스 감염을 방지하기 위하여 바이러스 방지를 위한 방어, 탐색, 복구 절차를 자체적으로 운영합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">14조 (‘이용자’의 개인정보보호)</div>\n\n                                            ① ‘이용자’의 개인정보 보호는 ‘회사’가 관련 법령과 ‘회사’가 수립하여 운영하는 개인정보 취급방침 등에 따릅니다. 자세한 ‘회사’의 개인정보 수집·이용 범위 등은 이동전화 가입신청서와 ‘회사’ 대표 ‘사이트’(www.sktelecom.com)에서 제공되는 개인정보 취급방침을 참조하시기 바랍니다.<br/>\n\n                                            ② ‘이용자’중 ‘회사’의 이동전화망을 이용하여 개별적으로 이동전화서비스를 제공하는 별정통신사업자의 가입자에 대해서는, 해당 가입자가 속한 개별 별정통신사업자가 개인정보보호 및 수집·이용·제공 등에 대한 법적 절차 준수와 관련된 일체의 책임을 부담하며, 해당 가입자에 대한 개인정보 수집·이용 범위 등은 개별 별정통신사업자의 개인정보 취급방침을 참조하시기 바랍니다.<br/>\n\n                                            ③ 제1항과 제2항의 개인정보 취급방침에서 정한 바 이외에, ‘회사’는 ‘본인확인서비스’를 위하여 다음 각 호의 경우에 ‘이용자’ 개인정보의 일부를 ‘회사’가 선정한 사업자에게 제공할 수 있습니다.<br/>\n\n                                            1. ‘이용자’의 ‘본인확인서비스’ 이용시 ‘사이트’가 필요로 하는 ‘이용자’ 식별정보(‘중복가입확인정보’, ‘대체수단’)의 생성 및 관리, 제공을 위하여 ‘이용자’의 주민등록정보를 제3의 ‘본인확인기관’에게 제공할 수 있습니다.<br/>\n                                            2. ‘회사’가 수집 또는 제공받은 개인정보(‘중복가입확인정보’, ‘대체수단’)는 ‘회사’ 또는 ‘대행기관’을 통해 ‘사이트’에게 제공합니다.<br/>\n                                            3. ‘본인확인서비스’를 위한 ‘회사’의 개인정보의 수집·이용·제공범위 및 개인정보의 취급을 위탁하는 수탁자와 위탁업무내용 등은 이 약관이 게시되는 화면에 별도로 링크하여 제공합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">15조 (약관 외 준칙)</div>\n\n                                            이 약관에 명시되지 아니한 사항에 대해서는 정보통신망 이용 촉진 및 정보보호 등에 관한 법률 등 기타 관련 법령 또는 상관례에 따릅니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">16조 (관할법원)</div>\n\n                                            ① ‘본인확인서비스’ 이용과 관련하여 ‘회사’와 ‘이용자’ 사이에 분쟁이 발생한 경우, ‘회사’와 ‘이용자’는 분쟁의 해결을 위해 성실히 협의합니다.<br/>\n\n                                            ② 제1항의 협의에서도 분쟁이 해결되지 않을 경우 양 당사자는 민사소송법상의 관할 법원에 소를 제기할 수 있습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">부칙</div>\n\n                                            (시행일) 이 약관은 공지한 날로부터 시행합니다.\n\n                                        </template>\n                                        \n                                        <template v-if="selectCom == 2 || selectCom == 6">\n                                            \n                                            <div class="agree-subtitle">[㈜케이티 이용약관]</div>\n\n                                            <div class="agree-subtitle">제1조 (목적)</div>\n                                            \n                                            본 약관은 주민등록번호 대체 본인확인서비스를 제공하는 주식회사 케이티(이하 “회사”)와 이용 고객(이하 “이용자”)간에 서비스 제공에 관한 이용조건 및 절차 등 기타 필요한 사항을 규정함을 목적으로 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제2조 (용어의 정의)</div>\n\n                                            본 약관에서 사용하는 용어의 정의는 다음과 같습니다.<br/>\n\n                                            ① “본인확인서비스”라 함은 이용자가 인터넷상에서 본인명의의 휴대폰(이용자 개인 명의 휴대폰 또는 법인 명의 휴대폰으로서 이용자가 본인확인서비스에 가입한 휴대폰)을 이용하여, 주민등록번호 입력 없이도 본인임을 안전하게 식별 및 확인해 주는 서비스를 말합니다.<br/>\n\n                                            ② “간편본인확인서비스”라 함은 본인확인서비스를 이용함에 있어 입력하는 본인확인정보를 성명과 휴대폰번호로 간소화하고 “PASS” 애플리케이션을 이용하는 방식을 의미합니다.<br/>\n\n                                            ③ “PASS”이라 함은 회사가 제공하는 애플리케이션(Application, 이하 ‘PASS 앱’)으로서 이용자가 PASS 앱에 등록한 인증수단을 확인하는 행위(예. 비밀번호 입력, 지문인식, 화자인식 등)를 통해 이용자 본인임을 안전하게 식별 및 확인하고 단말기의 점유를 확인하는 서비스를 말합니다.<br/>\n\n                                            ④ “이용자”라 함은 회사 또는 대행기관에서 제공하는 본인확인서비스의 이용을 위해 자신의 본인확인정보를 회사, 대행기관, 본인확인기관 등에게 제공하고, 본인임을 확인 받고자 하는 자로서 다음 각호의 자를 말합니다.<br/>\n\n                                            1. 회사의 개인 명의 이동전화서비스 가입자<br/>\n                                            2. 회사의 이동전화망을 이용하여 자체적으로 이동전화서비스를 제공하는 별정통신사업자의 가입자 중 개인 명의 가입자<br/>\n                                            3. 회사의 법인 명의 이동전화서비스 가입자의 휴대폰을 실제 사용하는 자로서 명의인의 법인으로부터 필요한 서류를 발급 받아 이를 회사에 제출하고 본인확인서비스에 가입한 자<br/>\n\n                                            ⑤ “본인확인정보”라 함은 이용자가 입력한 생년월일, 성별, 성명, 내/외국인, 휴대폰번호, 통신사 등 본인 식별에 필요한 이용자의 정보를 말합니다.<br/>\n\n                                            ⑥ “중복가입확인정보”라 함은 웹사이트에 가입하고자 하는 이용자의 중복확인을 위해 제공되는 정보를 말 합니다.<br/>\n\n                                            ⑦ “연계정보”라 함은 인터넷사업자의 온ㆍ오프라인 서비스 연계 등의 목적으로 이용자를 식별하기 위해 제공되는 정보를 말합니다.<br/>\n\n                                            ⑧ “본인확인기관”이라 함은 주민등록번호를 사용하지 아니하고 본인을 확인하는 방법 또는 본인확인서비스를 제공 하는 자로 방송통신위원회로부터 본인확인기관으로 지정을 받은 자를 의미합니다.<br/>\n\n                                            ⑨ “대행기관”이라 함은 회사를 대신하여 본인확인서비스의 제공 및 지원 등의 중계 업무를 담당하는 곳으로 회사와 업무지원에 대한 계약이 완료되어 인터넷사업자에 본인확인서비스를 제공하는 사업체를 말합니다.<br/>\n\n                                            ⑩ “인터넷사업자”라 함은 인터넷을 이용하여 정보를 제공하거나, 정보의 제공을 매개하는 일을 업으로 하는 자로 회사 또는 대행기관과의 서비스 계약을 통해, 인터넷 웹사이트에서 이용자에 대한 본인확인정보를 제공받는 사업체를 말합니다.<br/>\n\n                                            ⑪ “접근매체”라 함은 본인확인을 함에 있어 이용자 본인확인의 진실성과 정확성을 확보하기 위하여 사용 되는 수단 또는 정보로서 회사에 등록된 이용자의 전화번호, 이용자의 생체정보, 이상의 수단이나 정보를 사용하는데 필요한 비밀번호 등을 말합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제3조 (약관의 명시 및 변경)</div>\n\n                                            ① 회사는 본 약관을 회사가 운영하는 사이트에 게시하거나 본인확인서비스 이용시 이용자가 내용을 확인할 수 있도록 공개합니다.<br/>\n\n                                            ② 회사는 약관의 규제에 관한 법률 및 기타 관련 법령에 위배되지 않는 범위에서 본 약관의 내용을 개정 할 수 있으며, 변경된 경우에는 회사가 운영하는 사이트에서 공지합니다. 다만 “이용자”의 권리와 의무에 관한 중요한 사항은 변경된 내용의 시행 15일 이전에 공지합니다.<br/>\n\n                                            ③ 이용자는 개정된 약관 사항에 동의하지 않을 권리가 있으며, 개정된 약관에 동의하지 않는 경우, 본 서비스의 이용을 중단하고 이용 계약을 해지할 수 있습니다. 이용자가 회사의 전항 단서에 따른 약관의 불리한 변경에 대하여 적용예정일까지 회사에게 부동의 의사를 표시하지 않거나 이용계약을 해지하지 않은 경우 변경된 약관을 승인한 것으로 봅니다.<br/>\n\n                                            ④ 이용자가 변경된 약관에 대한 내용을 알지 못하여 발생하는 손해 및 피해에 대해서는 회사가 책임을 지지 않습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제4조 (접근매체의 관리 등)</div>\n\n                                            ⑤ 회사는 서비스 제공 시 접근매체를 이용하여 이용자의 신원, 권한 및 거래지시의 내용 등을 확인 할 수 있습니다.<br/>\n\n                                            ⑥ 이용자는 접근매체를 제3자에게 대여하거나 사용을 위임하거나 양도 또는 담보 목적으로 제공할 수 없습니다.<br/>\n\n                                            ⑦ 이용자는 자신의 접근매체를 제3자에게 누설 또는 노출하거나 방치하여서는 안되며, 접근매체의 도용 이나 위조 또는 변조를 방지하기 위해 충분한 주의를 기울여야 합니다.<br/>\n\n                                            ⑧ 회사가 접근매체의 발급주체가 아닌 경우에는 접근매체의 위조나 변조로 발생한 사고로 인하여 이용자에게 발생한 손해에 대하여 배상책임이 없습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제5조 (본인확인서비스 안내)</div>\n\n                                            ① 본인확인서비스는 이용자가 주민등록번호의 입력 없이, 본인명의로 된 개통된 휴대폰정보(이용자 개인 명의로 개통된 휴대폰 정보 또는 법인 명의로 개통된 휴대폰으로서 이용자가 본인확인서비스에 가입한 정보)를 이용하여 본인 식별 또는 본인 확인이 가능한 생년월일 기반의 주민등록번호 대체 휴대폰인증 서비스 입니다.<br/>\n\n                                            ② 회사는 대행기관을 통해 인터넷사업자에게 본인확인서비스를 제공하며, 인터넷사업자는 회원가입, ID/PW 찾기, 성인인증, 기타 본인확인이 필요한 경우 이용자에게 본인확인서비스를 제공 합니다.<br/>\n\n                                            ③ 이용자는 자신의 생년월일, 성명, 성별, 내/외국인, 휴대폰번호, 통신사 등의 정보를 입력하며(법인 명의로 개통된 휴대폰으로서 이용자가 본인확인서비스에 가입한 경우에는 본인확인서비스 가입 시 등록한 비밀번호를 추가로 입력하며), 입력한 정보가 일치한 경우에는 해당 휴대폰번호로 수신된 1회성 비밀번호(승인번호)를 정확하게 입력하는 것으로 본인 식별 또는 본인 확인이 이루어집니다. 단, 이용자가 간편본인확인서비스를 선택한 경우에는 자신의 통신사, 휴대폰번호, 이름만 입력하며, 입력한 정보가 일치한 경우에 해당 휴대폰에 설치 및 가입된 PASS 앱을 통해 이용자가 사전에 등록해둔 인증수단(비밀번호, 지문, 화자 정보 등)을 정확하게 입력하는 것으로 본인 식별 또는 본인 확인이 이루어집니다. 이 때, PASS 앱에 미 가입된 상태로 간편본인확인서비스 이용을 시도하는 경우 회사는 영속적인 서비스 제공을 위해 해당 이용자에게 PASS 앱 설치를 안내합니다.<br/>\n\n                                            ④ 본인확인서비스는 본인 명의로 개통된 휴대폰 정보(이용자 개인 명의로 개통된 휴대폰 정보 또는 법인 명의로 개통된 휴대폰으로서 이용자가 본인확인서비스에 가입한 정보)로 본인확인이 이루어집니다. 단, 휴대폰 일시정지 또는 이용정지 시 해당 정지기간 동안에는 본인확인서비스도 정지됩니다. <br/>\n\n                                            ⑤ 본인 확인이 완료 된 이용자에 대해서는 본인확인정보와 중복가입확인정보 및 연계정보가 인터넷사업 자에게 제공되며, 인터넷사업자는 중복가입확인정보 또는 연계정보 등을 이용하여 이용자 관리 및 컨텐츠를 제공ㆍ운영 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제6조 (본인확인서비스 제공시간)</div>\n\n                                            ① 본인확인서비스의 이용은 연중무휴 1일 24시간을 원칙으로 합니다. 다만, 정기 점검 및 기타 기술상의 이유로 본인확인서비스가 일시 중지될 수 있고 또한, 운영상의 목적으로 회사가 정한 기간에도 일시 중지될 수 있습니다.<br/>\n\n                                            ② 회사는 효율적인 업무 수행을 위하여 필요하다고 판단하는 경우 본인확인서비스를 일정 범위로 분할하여 각 범위 별로 이용가능 시간을 달리 정할 수 있으며, 이 경우 그 내용을 공지 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제7조 (회사의 권리와 의무)</div>\n\n                                            ① 회사는 이용자가 본인확인서비스 이용시 본 이용약관이나 안내사항 등을 확인하지 않아 발생한 손해, 또는 접근매체를 통해 알 수 있었음에도 불구하고, 이용자가 자신의 접근매체를 누설 또는 노출하거나 방치한 손해 등 이용자의 부주의에 기인한 손해에 대하여 배상책임이 없습니다.<br/>\n\n                                            ② 회사는 본인확인서비스 제공과 관련하여 인지한 이용자의 본인확인정보를 본인의 승낙 없이 제3자에게 누설하거나 배포하지 않습니다. 단, 국가기관의 요구가 있는 경우, 범죄에 대한 수사상의 목적이 있는 경우 등 기타 관계 법령에서 정한 절차에 따른 요청이 있는 경우에는 그러하지 않습니다.<br/>\n\n                                            ③ 회사는 이용자에게 안정적인 본인확인서비스 제공을 위하여 지속적으로 본인확인서비스의 예방점검, 유지보수 등을 이행하며, 본인확인서비스의 장애가 발생하는 경우, 이를 지체 없이 수리 및 복구합니다.<br/>\n\n                                            ④ 회사는 아래와 같은 사유가 발생하는 경우 이용자에 대하여 본인확인서비스를 제한할 수 있습니다.<br/>\n\n                                            1. 다른 사람의 명의사용 등 이용자 등록 시 허위로 신청하는 경우<br/>\n                                            2. 이용자 등록 사항을 누락하거나 오기하여 신청하는 경우<br/>\n                                            3. 대포폰(이동전화 서비스 본래의 목적과는 달리 불법대출 등 부정사용을 목적으로 타인 명의 무단 개통 또는 명의자를 교사하여 개통하는 휴대전화)을 이용하는 경우<br/>\n                                            4. 타인의 명의를 도용한 사실이 있거나 명의 도용을 이유로 처벌받은 경우<br/>\n                                            5. 불법 복제와 관련된 사실이 있거나 처벌 받은 경우<br/>\n                                            6. 기타 시장질서를 교란시키는 불법행위에 해당하는 경우<br/>\n\n                                            ⑤ 회사는 다음 각 호에 해당하는 경우 서비스의 전부 또는 일부를 중지할 수 있습니다. 회사는 회사의 고의 또는 과실이 없는 한 이로 인하여 발생한 손해에 대하여 배상책임이 없습니다.<br/>\n\n                                            1. 컴퓨터 등 정보통신설비의 보수점검 교체 및 고장, 통신의 두절 등의 사유가 발생한 경우<br/>\n                                            2. 서비스를 위한 설비의 보수 등 공사로 인해 부득이한 경우<br/>\n                                            3. 서비스 업그레이드 및 시스템 유지보수 등을 위해 필요한 경우<br/>\n                                            4. 정전, 제반 설비의 장애 또는 이용량의 폭주 등으로 정상적인 서비스 이용에 지장이 있는 경우<br/>\n                                            5. 이용자가 회사의 본인확인서비스 운영을 방해하는 경우<br/>\n                                            6. 기타 천재지변, 국가비상사태 등 불가항력적 사유가 있는 경우<br/>\n                                            7. 규제기관이 마련한 본인확인서비스 가이드를 준수하지 않고 임의로 변형 적용한 사이트에서 본인확인서비스를 요청하는 경우<br/>\n\n                                            ⑥ 전 항에 의하여 본인확인서비스를 중지하는 경우에는 회사가 이를 공지합니다. 다만, 회사가 통제할 수 없는 사유로 인한 본 서비스의 중단(회사 또는 운영자의 고의 및 과실이 없는 디스크 장애, 시스템 다운 등)으로 인하여 사전 공지가 불가능한 경우에는 그러하지 아니합니다.<br/>\n\n                                            ⑦ 이용자 중 회사의 이동전화망을 이용하여 자체적으로 이동전화서비스를 제공하는 별정통신사업자의 개인 명의 가입자에 대하여는 해당 별정통신사업자의 본인확인절차 미비, 명의도용, 관련 서류 위·변조, 본인확인정보의 오류 등에 대해 회사는 일체 책임을 부담하지 않고 해당 별정통신사업자가 일체의 책임을 부담합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제8조 (이용자의 의무)</div>\n\n                                            ① 이용자는 본인확인서비스를 이용함에 있어서 다음 각호에 해당하는 행위를 하여서는 안되며, 회사는 위반 행위에 따르는 일체의 법적 책임을 지지 않습니다.<br/>\n\n                                            1. 타 이용자의 본인확인정보를 부정하게 사용 및 도용하는 행위<br/>\n                                            2. 회사의 저작권, 제3자의 저작 권 등 기타 권리를 침해하는 행위<br/>\n                                            3. 범죄 행위<br/>\n                                            4. 기타 관련 법령에 위배되는 행위<br/>\n\n                                            ② 이용자는 본 약관에서 규정하는 사항과 본인확인서비스에 대한 이용안내 또는 주의사항 등을 준수하여야 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제9조 (본인확인정보의 제공금지)</div>\n\n                                            회사는 서비스를 제공함에 있어 취득한 이용자의 정보 또는 자료를 이용자의 동의 없이 제3자에게 제공, 누설하거나 업무상 목적 외에 사용하지 않습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제10조 (본인확인서비스의 안정성 확보)</div>\n\n                                            ① 회사는 본인확인서비스의 안전성과 신뢰성을 확보하기 위하여 업무처리지침의 제정 및 시행, 정보 처리시스템 및 전산자료의 관리 등의 관리적 조치와 모니터링 체계 및 해킹방지시스템 구축 및 운영 등의 기술적 조치를 취해야 합니다.<br/>\n\n                                            ② 회사는 서버 및 통신기기의 정상작동여부 확인을 위하여 정보처리시스템 자원 상태의 감시, 경고 및 제어가 가능한 모니터링 체계를 갖추어야 합니다.<br/>\n\n                                            ③ “회사”는 해킹 침해 방지를 위하여 정보보호시스템 및 프로그램을 설치하여 운영합니다.<br/>\n\n                                            ④ “회사”는 컴퓨터바이러스 감염을 방지하기 위하여 다음 각 호를 포함한 대책을 수립, 운영하고 있습니다.<br/>\n\n                                            1. 출처, 유통경로 및 제작자가 명확하지 아니한 응용프로그램은 사용을 자제하고 불가피할 경우에는 컴퓨터바이러스 검색프로그램으로 진단 및 치료 후 사용할 것<br/>\n                                            2. 컴퓨터바이러스 검색, 치료 프로그램을 설치하고 최신 버전을 유지할 것<br/>\n                                            3. 컴퓨터바이러스 감염에 대비하여 방어, 탐색 및 복구 절차를 마련할 것\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제11조 (이용자의 개인정보보호)</div>\n\n                                            회사는 관련법령이 정하는 방에 따라서 이용자의 개인정보를 보호하기 위하여 노력하며, 이용자의 개인정보에 관한 사항은 관련 법령 및 회사가 정하는 개인정보처리방침에 정한 바에 따릅니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제12조 (개인정보의 처리)</div>\n\n                                            ① 회사는 수집된 개인정보의 처리 및 관리 등의 업무를 스스로 수행함을 원칙으로 하나, 필요한 경우 업무의 일부 또는 전부를 회사가 선정한 사업자에게 위탁할 수 있습니다.<br/>\n\n                                            ② 본인확인서비스 이용 시 이용자의 개인정보 수집 및 이용 동의에 따라 인터넷사업자가 필요로 하는 이용자 식별정보(중복가입확인정보, 연계정보)의 생성 및 제공을 위하여 관련 정보를 타 본인확인기관에게 제공할 수 있으며, 수집된 식별정보(중복가입확인정보, 연계정보)는 본인 식별 및 확인 위한 목적으로 회사 또는 대행기관을 통해 인터넷사업자에게 제공할 수 있습니다.<br/>\n\n                                            ③ 개인정보 처리 및 위탁 등에 관한 사항은 관련법령 및 회사가 정하는 개인정보처리방침에 정한 바에 따릅니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제13조 (약관 외 준칙)</div>\n\n                                            본 약관에 명시되지 아니한 사항에 대해서는 정보통신망 이용 촉진 및 정보보호 등에 관한 법률, 개인정 보보호법 등 기타 관련법령 또는 상관례에 따릅니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">부칙</div>\n\n                                            (시행일) 이 약관은 공시한 날로부터 시행합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">부칙</div>\n\n                                            (시행일) 이 약관은 2015년 4월 29일부터 시행합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">부칙</div>\n\n                                            (시행일) 이 약관은 2016년 8월 2일부터 시행합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">부칙</div>\n\n                                            (시행일) 이 약관은 2018년 8월 2일부터 시행합니다.\n\n                                        </template>\n\n                                        <template v-if="selectCom == 3 || selectCom == 7">\n                                            \n                                            <div class="agree-subtitle">[LG유플러스(주) 이용약관]</div>\n\n                                            <div class="agree-subtitle">제 1조 (목적)</div>\n\n                                            본 약관은 주민번호를 대체한 휴대폰 본인확인서비스(이하 “서비스”)를 제공하는 LG유플러스(이하 “회사”)와 이용 고객(이하 “이용자”)간에 서비스 제공에 관한 이용조건 및 절차 등 기타 필요한 사항을 정함을 목적으로 합니다.\n                                            <br/><br/>\n\n                                            <div class="agree-subtitle">제 2조 (용어의 정리)</div>\n\n                                            본 약관에서 사용하는 용어의 정의는 다음과 같습니다.<br/>\n\n                                            1. “휴대폰 본인확인서비스”라 함은 이용자가 인터넷상에서 본인명의의 휴대폰을 이용하여 주민번호를 입력하지 않고 본인임을 안전하게 식별 및 확인하는 방법을 제공하는 서비스를 말합니다.<br/>\n\n                                            2. “이용자”라 함은 서비스의 이용을 위해 자신의 본인확인정보를 회사, 인증대행사 및 타 본인확인기관 등에게 제공하고, 본인임을 확인 받고자 하는 자를 말합니다. <br/>\n\n                                            3. “본인확인정보”라 함은 이용자가 입력한 생년월일, 성별, 성명, 내/외국인, 휴대폰번호, 통신사 등 본인 식별에 필요한 이용자의 정보를 말합니다. <br/>\n\n                                            4. “접근매체”라 함은 모바일 통신 단말기(피쳐폰, 스마트폰)를 지칭한다.<br/>\n\n                                            5. “중복가입확인정보(DI)”라 함은 웹사이트에 가입하고자 하는 이용자의 중복확인을 위해 제공되는 정보를 말합니다.<br/>\n\n                                            6. “연계정보(CI)”라 함은 인터넷사업자의 온ㆍ오프라인 서비스 연계 등의 목적으로 이용자를 식별하기 위해 제공되는 정보를 말합니다.<br/>\n\n                                            7. “본인확인기관”이라 함은 주민등록번호를 사용하지 아니하고 본인을 확인하는 방법 또는 서비스를 제공하는 자로 방송통신위원회로부터 본인확인기관으로 지정을 받은 자를 의미합니다.<br/>\n\n                                            8. “인증대행사”이라 함은 회사를 대신하여 서비스의 제공 및 지원 등의 중계 업무를 담당하는 곳으로 회사와 업무지원에 대한 계약이 완료되어 인터넷사업자에게 서비스를 제공하는 사업자를 말합니다.<br/>\n\n                                            9. “인터넷사업자”라 함은 인터넷을 이용하여 정보를 제공하거나, 정보의 제공을 매개하는 일을 업으로 하는 자로 회사 또는 인증 대행사와의 서비스 계약을 통해 운영하며, 인터넷 웹사이트의 이용자에 대한 본인확인정보를 제공받는 사업자를 말합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제 3조 (약관의 효력 및 변경)</div>\n\n                                            1. 본 약관은 이용자에게 서비스 화면에 게시하거나, 회사 홈페이지(www.uplus.co.kr)에 게시하여 공지함으로써 효력이 발생합니다. <br/>\n\n                                            2. 회사는 약관의 규제에 관한 법률 및 기타 관련 법령에 위배되지 않는 범위에서 본 약관의 내용을 개정할 수 있으며, 변경된 경우에는 제1항과 같은 방법으로 공지합니다. 다만 “이용자”의 권리와\n                                            의무에 관한 중요한 사항은 변경된 내용의 시행 15일 이전에 공지합니다. <br/>\n\n                                            3. 이용자는 변경된 약관에 대한 내용을 알지 못하여 발생하는 손해 및 피해에 대해서는 회사가 책임을 지지 않습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제 4조 (접근매체의 관리 등)</div>\n\n                                            1. 이용자는 접근매체를 제3자에게 대여하거나 사용을 위임하거나 양도 또는 담보 목적으로 제공할 수 없습니다. <br/>\n\n                                            2. 이용자는 자신의 접근매체를 제3자에게 제공 또는 노출하거나 방치하여서는 안되며, 접근매체의 도용이나 위·변조를 방지하기 위해 충분한 주의를 기울여야 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제 5조 (서비스 이용방법)</div>\n\n                                            1. 서비스는 이용자가 주민등록번호를 입력하지 아니하고 본인의 생년월일과 본인 명의로 된 휴대폰정보를 이용하여 본인 식별 또는 본인 확인이 가능하도록 하는 휴대폰인증 서비스 입니다.<br/>\n\n                                            2. 회사는 인증대행사를 통해 인터넷사업자에게 서비스를 제공하며, 인터넷사업자는 회원가입, ID/PW찾기, 성인인증 등 이용자의 본인확인이 필요한 경우 이용자에게 서비스를 제공 합니다.<br/>\n\n                                            3. 제2항의 경우 이용자가 자신의 생년월일, 성명, 성별, 내/외국인, 휴대폰번호, 통신사 등의 정보를 입력한 후 입력한 정보가 이용자 본인의 정보와 일치한 경우에는 이용자 본인 명의의 휴대폰번호로 수신된 1회성 비밀번호(이하 “승인번호”)를 정확하게 입력하면 본인 식별 또는 본인 확인이 이루어 집니다.<br/>\n\n                                            4. 제3항과 같이 본인확인이 완료 된 이용자에 대해서는 본인확인정보와 중복가입확인정보 및 연계정보가 인터넷사업자에게 제공되며, 인터넷사업자가 중복가입확인정보 또는 연계정보 등을 이용하여 이용자 관리 및 컨텐츠를 제공 운영 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제 6조 (서비스 제공시간)</div>\n\n                                            1. 회사는 연중무휴 1일 24시간 서비스를 제공함을 원칙으로 합니다. 다만, 회사는 서비스 설비의 장애, 서비스 이용의 폭주 등 기술상의 이유로 서비스를 일시 정지할 수 있고, 서비스 설비 정기 점검 등 운영상의 목적으로 시간을 정하고 공지한 후 서비스를 일시 정지할 수 있습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제 7조 (회사의 권리와 의무)</div>\n\n                                            1. 회사가 접근매체의 발급주체가 아닌 경우에는 접근매체의 위조나 변조로 발생한 사고로 인하여 이용자에게 발생한 손해에 대하여 배상책임이 없습니다.<br/>\n\n                                            2. 회사는 이용자가 서비스 이용약관이나 안내사항 등을 확인하지 않아 발생한 손해, 이용자에게 책임있는 사유로 접근매체를 누설 또는 노출하거나 방치한 손해 등 이용자의 부주의에 기인한 손해에\n                                            대하여 배상책임이 없습니다.<br/>\n\n                                            3. 회사는 서비스 제공시 접근매체를 이용하여 이용자의 신원, 권한 및 거래지시의 내용 등을 확인할 수 있습니다.<br/>\n\n                                            4. 회사는 서비스 제공과 관련하여 인지한 이용자의 본인확인정보를 본인의 승낙 없이 제3자에게 누설하거나 제공하지 않습니다. 단, 국가기관의 요구가 있는 경우, 범죄에 대한 수사상의 목적이 있는\n                                            경우 등 기타 관계 법령에서 정한 절차에 따른 요청이 있는 경우에는 그러하지 않습니다.<br/>\n\n                                            5. 회사는 이용자에게 안정적으로 서비스를 제공하기 위하여 지속적으로 서비스의 예방점검, 유지보수 등을 이행하며 서비스 장애가 발생하는 경우 지체없이 서비스를 복구합니다.<br/>\n\n                                            6. 회사는 복제폰, 대포폰, 불법 휴대폰 대출(일명 휴대폰깡) 등 시장질서를 교란시키는 불법행위로 의한 피해를 방지하기 위하여 사전통지 없이 서비스를 제한하거나 중지할 수 있습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제 8조 (이용자의 의무)</div>\n\n                                            1. 이용자는 서비스를 이용함에 있어서 다음 각호에 해당하는 행위를 하여서는 안되며, 회사는 위반 행위에 따르는 일체의 법적 책임을 지지 않습니다.<br/>\n\n                                            1) 타 이용자의 본인확인정보 및 승인번호를 부정하게 사용 및 도용하는 행위<br/>\n\n                                            2) 회사 또는 제3자의 지식재산권 등 기타 권리를 침해하는 행위<br/>\n\n                                            3) 범죄 행위 및 범죄적 행위와 관련있는 행위<br/>\n\n                                            4) 관련 법령에 위배되는 행위<br/>\n\n                                            5) 기타 서비스의 정상적 운영, 유지 등을 방해하거나 지연시키는 행위<br/>\n\n                                            2. 이용자는 본 약관에서 규정하는 사항과 서비스에 대한 이용안내 또는 주의사항 등을 준수하여야 합니다.<br/>\n\n                                            3. 이용자가 본 약관을 위반하여 회사에 손해가 발생한 경우에는 이용자가 모든 손해를 배상하여야 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제 9조 (본인인증 정보의 제공금지)</div>\n\n                                            회사는 서비스를 제공함에 있어 취득한 이용자의 정보 또는 자료를 이용자의 동의 없이 제3자에게 공, 누설하거나 서비스 목적 외에 사용하지 않습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제 10조 (서비스의 안정성 확보)</div>\n\n                                            1. 회사는 서비스의 안전성과 신뢰성을 확보하기 위하여 업무처리지침의 제정 및 시행, 정보 처리시스템 및 전산자료의 관리 등의 관리적 조치와 모니터링 체계 및 해킹방지시스템 구축 및 운영 등의\n                                            기술적 조치를 취해야 합니다. <br/>\n\n                                            2. 회사는 서버 및 통신기기의 정상작동여부 확인을 위하여 정보처리시스템 자원 상태의 감시, 경고 및 제어가 가능한 모니터링 체계를 갖추어야 합니다.<br/>\n\n                                            3. “회사”는 해킹 침해 방지를 위하여 다음 각 호의 시스템 및 프로그램을 설치하여 운영합니다.<br/>\n\n                                            1) 침입차단시스템 설치<br/>\n\n                                            2) 침입탐지시스템 설치<br/>\n\n                                            3) 그 밖에 필요한 보호장비 또는 암호프로그램 등 정보보호시스템 설치<br/>\n\n                                            4. “회사”는 컴퓨터바이러스 감염을 방지하기 위하여 다음 각 호를 포함한 대책을 수립, 운영하고 있습니다.<br/>\n\n                                            1) 출처, 유통경로 및 제작자가 명확하지 아니한 응용프로그램은 사용을 자제하고 불가피할 경우에는 컴퓨터바이러스 검색프로그램으로 진단 및 치료 후 사용할 것<br/>\n\n                                            2) 컴퓨터바이러스 검색, 치료 프로그램을 설치하고 최신 버전을 유지할 것\n\n                                        </template>\n\n                                    </template>\n\n                                    <template v-if="agreeIdx == 2">\n\n    \t                                <template v-if="selectCom == 1 || selectCom == 5">\n                                            \n                                            <div class="agree-subtitle">[SK텔레콤 귀중]</div>\n\n                                            본인은 SK텔레콤(주)(이하 ‘회사’라 합니다)가 제공하는 본인확인서비스(이하 ‘서비스’라 합니다)를 이용하기 위해, 다음과 같이 ‘회사’가 본인의 개인정보를 수집/이용하고, 개인정보의 취급을 위탁하는 것에 동의합니다.<br/>\n\n                                            <div class="agree-subtitle">1. 수집항목</div>\n\n                                            - 이용자의 성명, 이동전화번호, 가입한 이동전화 회사, 생년월일, 성별<br/>\n\n                                            - 연계정보(CI), 중복가입확인정보(DI)<br/>\n\n                                            - 이용자가 이용하는 웹사이트 또는 Application 정보, 이용일시<br/>\n\n                                            - 내외국인 여부<br/>\n\n                                            - 가입한 이동전화회사 및 이동전화브랜드\n                                            <br/><br/>\n                                            <div class="agree-subtitle">2. 이용목적</div>\n\n                                            - 이용자가 웹사이트 또는 Application에 입력한 본인확인정보의 정확성 여부 확인(본인확인서비스 제공)<br/>\n\n                                            - 해당 웹사이트 또는 Application에 연계정보(CI)/중복가입확인정보(DI) 전송<br/>\n\n                                            - 서비스 관련 상담 및 불만 처리 등<br/>\n\n                                            - 이용 웹사이트/Application 정보 등에 대한 분석 및 세분화를 통한, 이용자의 서비스 이용 선호도 분석\n                                            <br/><br/>\n                                            <div class="agree-subtitle">3. 개인정보의 보유기간 및 이용기간</div>\n\n                                            - 이용자가 서비스를 이용하는 기간에 한하여 보유 및 이용. 다만, 아래의 경우는 제외<br/>\n\n                                            - 법령에서 정하는 경우 해당 기간까지 보유(상세 사항은 회사의 개인정보취급방침에 기재된 바에 따름)\n                                            <br/><br/>\n                                            <div class="agree-subtitle">4. 본인확인서비스 제공을 위한 개인정보의 취급위탁</div>\n\n                                            수탁자 : (주)다날, (주)드림시큐리티, (주)케이지모빌리언스, (주)한국사이버결제, 한국모바일인증(주), 씨앤케이소프트(주), 수미온(주), SK플래닛(주), 엠드림커뮤니케이션(주), NICE평가정보(주), 서울신용평가정보(주)\n                                            <br/>\n                                            취급위탁 업무 : 본인확인정보의 정확성 여부 확인(본인확인서비스 제공), 연계정보(CI)/중복가입확인정보(DI) 생성 및 전송, 서비스 관련 상담 및 불만 처리, 휴대폰인증보호 서비스, 이용자의 서비스 이용 선호도 분석정보 제공관련 시스템 구축·광고매체 연동 및 위탁영업 등\n                                            <br/>\n                                            ※ 수탁자의 상세 개인정보 취급 위탁 내용은 각 수탁자가 정하는 절차와 방법에 따라 수탁자 홈페이지 등에 게시된 수탁자의 개인정보 취급방침 및 제3자 제공 동의 방침 등에 따릅니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">5. 위 개인정보 수집·이용 및 취급위탁에 동의하지 않으실 경우, 서비스를 이용하실 수 없습니다.</div>\n\n                                            ※ 회사가 제공하는 서비스와 관련된 개인정보의 취급과 관련된 사항은, 회사의 개인정보취급방침(회사 홈페이지 www.sktelecom.com )에 따릅니다.\n                                            <br/><br/>\n\n                                            <div class="agree-subtitle">NICE평가정보(주) 귀중</div>\n\n                                            NICE평가정보(주)(이하 ‘회사’)는 SK텔레콤(주)의 업무를 대행하여 휴대폰본인확인서비스를 제공함에 있어 고객으로부터 개인정보를 수집하고 이용하기 위해 ‘정보통신망 이용촉진 및 정보보호에 관한 법률’에 따라서 다음과 같이 본인의 동의를 받습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">1. 개인정보의 내용</div>\n\n                                            가. 정보항목<br/>\n\n                                            - 생년월일, 성명, 성별, 내/외국인 구분, 휴대폰번호, 가입한 이동통신사, IP주소<br/>\n\n                                            나. 수집방법<br/>\n\n                                            - 본인인증 요청시 회원사 서비스 페이지 또는 본인인증 팝업창 페이지에서 이용자가 직접 입력<br/>\n\n                                            - 본인인증 과정에서 시스템에서 생성되는 정보 수집(Ex. IP주소)\n                                            <br/><br/>\n                                            <div class="agree-subtitle">2. 개인정보의 이용목적과 제공정보</div>\n\n                                            가. 이용 목적<br/>\n\n                                            - 고객의 회원가입, ID/PW찾기, 거래동의 등을 위한 휴대폰 본인확인 결과**<br/>\n\n                                            - 휴대폰 소지 확인을 위한 SMS 인증번호 전송<br/>\n\n                                            - 부정 이용 방지 및 수사의뢰**<br/>\n\n                                            - 휴대폰번호보호서비스 해제(서비스 가입자에 한함)<br/>\n\n                                            - 기타 법률에서 정한 목적<br/>\n\n                                            나. 제공하는 개인정보<br/>\n\n                                            - 성명, 성별, 생년월일, 내/외국인, 휴대폰번호, 이동통신사, IP주소 [제공사 : 서비스 회원사]<br/>\n\n                                            - 성명, 성별, 생년월일, 휴대폰번호, 이동통신사 [제공사 : SKT, KT, LGU+,모빌리언스, 다날]<br/>\n\n                                            - 휴대폰번호 [제공사 : SKT, KT, LGU+, 삼성SDS, 모빌리언스, SK네트웍스, 다날]\n                                            <br/><br/>\n                                            <div class="agree-subtitle">3. 개인정보의 보유 및 이용기간</div>\n\n                                            이용자의 개인정보는 원칙적으로 개인정보의 수집 및 이용목적이 달성되면 지체없이 파기합니다. 단, 다음의 정보에 대해서는 아래의 이유로 명기한 기간 동안 보유합니다.<br/>\n\n                                            가. 회사 내부 방침에 의한 정보보유 사유 - 본인확인 발생 및 차단기록, 휴대폰번호<br/>\n\n                                            보유 이유: 부정 이용 방지 및 민원 처리<br/>\n\n                                            보유 기간: 5년<br/>\n\n                                            나. 관계법령에 의한 정보보유 사유<br/>\n\n                                            - 이용자 불만 또는 분쟁 처리에 관한 기록<br/>\n\n                                            보유 이유: 전자상거래 등에서의 소비자보호에 관한 법률<br/>\n\n                                            보유 기간: 3년\n                                        </template>\n\n                                        <template v-if="selectCom == 2 || selectCom == 6">\n\n                                            <div class="agree-subtitle">[(주)케이티 귀중]</div>\n\n                                            (주)케이티(이하 ‘회사’라 함)가 제공하는 본인확인서비스를 이용하기 위해, 다음과 같이 ‘회사’가 본인의 개인정보를 수집 및 이용하고, 개인정보의 취급을 위탁하는 것에 동의합니다.<br/>\n\n                                            <div class="agree-subtitle">1. 수집항목</div>\n\n                                            -고객의 생년월일, 이동전화번호, 성명, 성별, 내/외국인 구분<br/>\n\n                                            -연계정보(CI), 중복가입확인정보(DI)<br/>\n\n                                            -고객이 이용하는 웹사이트 등\n                                            <br/><br/>\n                                            <div class="agree-subtitle">2. 이용목적</div>\n\n                                            -고객이 웹사이트 또는 Application 등에 입력한 본인확인정보의 정확성 여부 확인<br/>\n\n                                            -해당 웹사이트 또는 Application 등에 연계정보(CI)와 중복가입확인정보)DI) 전송<br/>\n\n                                            -서비스 관련 상담 및 불만 처리<br/>\n\n                                            -기타 법룰에서 정한 목적\n                                            <br/><br/>\n                                            <div class="agree-subtitle">3.개인정보의 보유 및 이용기간</div>\n\n                                            "회사"는 이용자의 개인정보를 이용목적이 달성되거나 보유 및 보존기간이 종료하면 해당 정보를 지체없이 파기 하며 별도의 보관을 하지 않습니다. 단, 관련 법령 및 회사방침에 따라 보존하는 목적과 기간은 아래와 같습니다.<br/>\n\n                                            - 소비자의 불만 또는 분쟁처리에 관한 기록 : 3년(전자상거래등에서의 소비자보호에 관한 법률)\n                                            <br/><br/>\n                                            <div class="agree-subtitle">4.본인확인서비스 제공을 위한 개인정보의 취급 위탁</div>\n\n                                            -수탁자 : NICE평가정보<br/>\n\n                                            -취급위탁 업무 : 본인확인정보의 정확성 여부 확인, 연계정보(CI) 및 중복가입확인정보(DI) 전송, 서비스 관련 상담 및 불만 처리 등<br/>\n\n                                            1. 상기 개인정보 수집 및 이용과 취급위탁에 동의하지 않는 경우, 서비스를 이용할 수 없습니다.<br/>\n\n                                            ‘회사’가 제공하는 서비스의 개인정보 취급과 관련된 사항은 아래의 ‘회사’ 홈페이지에 기재된 개인정보취급방침에 따릅니다.<br/>\n\n                                            -(주)케이티 : www.kt.com<br/>\n\n                                            본인은 상기 내용을 숙지하였으며 이에 동의합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">[NICE평가정보(주) 귀중]</div>\n\n                                            NICE평가정보(주)(이하 ‘회사’)는 (주)케이티의 업무를 대행하여 휴대폰본인확인서비스를 제공함에 있어 고객으로부터 개인정보를 수집하고 이용하기 위해 ‘정보통신망 이용촉진 및 정보보호에 관한 법률’에 따라서 다음과 같이 본인의 동의를 받습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">1. 개인정보의 내용</div>\n\n                                            가. 정보항목<br/>\n\n                                            - 생년월일, 성명, 성별, 내/외국인 구분, 휴대폰번호, 가입한 이동통신사, IP주소<br/>\n\n                                            나. 수집방법<br/>\n\n                                            - 본인인증 요청시 회원사 서비스 페이지 또는 본인인증 팝업창 페이지에서 이용자가 직접 입력<br/>\n\n                                            - 본인인증 과정에서 시스템에서 생성되는 정보 수집(Ex. IP주소)\n                                            <br/><br/>\n                                            <div class="agree-subtitle">2. 개인정보의 이용목적과 제공정보</div>\n\n                                            가. 이용 목적<br/>\n\n                                            - 고객의 회원가입, ID/PW찾기, 거래동의 등을 위한 휴대폰 본인확인 결과<br/>\n\n                                            - 휴대폰 소지 확인을 위한 SMS 인증번호 전송<br/>\n\n                                            - 부정 이용 방지 및 수사의뢰<br/>\n\n                                            - 휴대폰번호보호서비스 해제(서비스 가입자에 한함)<br/>\n\n                                            - 기타 법률에서 정한 목적<br/>\n\n                                            나. 제공하는 개인정보<br/>\n\n                                            - 성명, 성별, 생년월일, 내/외국인, 휴대폰번호, 이동통신사, IP주소 [**제공사 : 서비스 회원사]<br/>\n\n                                            - 성명, 성별, 생년월일, 휴대폰번호, 이동통신사 [제공사 : SKT, KT, LGU+,모빌리언스, 다날]<br/>\n\n                                            - 휴대폰번호 [제공사 : SKT, KT, LGU+, 삼성SDS, 모빌리언스, SK네트웍스, 다날]\n                                            <br/><br/>\n                                            <div class="agree-subtitle">3. 개인정보의 보유 및 이용기간</div>\n\n                                            이용자의 개인정보는 원칙적으로 개인정보의 수집 및 이용목적이 달성되면 지체없이 파기합니다. 단, 다음의 정보에 대해서는 아래의 이유로 명기한 기간 동안 보유합니다.<br/>\n\n                                            가. 회사 내부 방침에 의한 정보보유 사유 - 본인확인 발생 및 차단기록, 휴대폰번호<br/>\n\n                                            보유 이유: 부정 이용 방지 및 민원 처리<br/>\n\n                                            보유 기간: 5년<br/>\n\n                                            나. 관계법령에 의한 정보보유 사유<br/>\n\n                                            - 이용자 불만 또는 분쟁 처리에 관한 기록<br/>\n\n                                            보유 이유: 전자상거래 등에서의 소비자보호에 관한 법률<br/>\n\n                                            보유 기간: 3년\n                                        </template>\n\n                                        <template v-if="selectCom == 3 || selectCom == 7">\n                                            \n                                            <div class="agree-subtitle">[LG유플러스(주) 귀중]</div>\n\n                                            LG유플러스(주) (이하 ‘회사’라 함)가 제공하는 본인확인서비스를 이용하기 위해, 다음과 같이 ‘회사’가 본인의 개인정보를 수집 및 이용하고, 개인정보의 취급을 위탁하는 것에 동의합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">1. 수집항목</div>\n\n                                            -고객의 생년월일, 이동전화번호, 성명, 성별, 내/외국인 구분<br/>\n\n                                            -연계정보(CI), 중복가입확인정보(DI)<br/>\n\n                                            -고객이 이용하는 웹사이트 등\n                                            <br/><br/>\n                                            <div class="agree-subtitle">2. 이용목적</div>\n\n                                            -고객이 웹사이트 또는 Application 등에 입력한 본인확인정보의 정확성 여부 확인<br/>\n\n                                            -해당 웹사이트 또는 Application 등에 연계정보(CI)와 중복가입확인정보)DI) 전송<br/>\n\n                                            -서비스 관련 상담 및 불만 처리<br/>\n\n                                            -기타 법룰에서 정한 목적\n                                            <br/><br/>\n                                            <div class="agree-subtitle">3. 개인정보의 보유 및 이용기간</div>\n\n                                            -고객이 서비스를 이용하는 기간에 한하여 보유 및 이용을 원칙으로 하되, 법률에서 정하는 경우 해당 기간까지 보유 및 이용(세부사항은 ‘회사’의 개인정보취급방침에 따름)\n                                            <br/><br/>\n                                            <div class="agree-subtitle">4.본인확인서비스 제공을 위한 개인정보의 취급 위탁</div>\n\n                                            -수탁자 : NICE평가정보<br/>\n\n                                            -취급위탁 업무 : 본인확인정보의 정확성 여부 확인, 연계정보(CI) 및 중복가입확인정보(DI) 전송, 서비스 관련 상담 및 불만 처리 등\n                                            <br/><br/>\n                                            <div class="agree-subtitle">5. 상기 개인정보 수집 및 이용과 취급위탁에 동의하지 않는 경우, 서비스를 이용할 수 없습니다.</div>\n\n                                            ‘회사’가 제공하는 서비스의 개인정보 취급과 관련된 사항은 아래의 ‘회사’ 홈페이지에 기재된 개인정보취급방침에 따릅니다.<br/>\n\n                                            -LG유플러스(주) : www.lguplus.co.kr<br/>\n\n                                            본인은 상기 내용을 숙지하였으며 이에 동의합니다.\n\n                                            <br/><br/>\n\n                                            <div class="agree-subtitle">[NICE평가정보(주) 귀중]</div>\n\n                                            NICE평가정보(주)(이하 ‘회사’)는 LG유플러스(주) 의 업무를 대행하여 휴대폰본인확인서비스를 제공함에 있어 고객으로부터 개인정보를 수집하고 이용하기 위해 ‘정보통신망 이용촉진 및 정보보호에 관한 법률’에 따라서 다음과 같이 본인의 동의를 받습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">1. 개인정보의 내용</div>\n\n                                            가. 정보항목<br/>\n\n                                            - 생년월일, 성명, 성별, 내/외국인 구분, 휴대폰번호, 가입한 이동통신사, IP주소<br/>\n\n                                            나. 수집방법<br/>\n\n                                            - 본인인증 요청시 회원사 서비스 페이지 또는 본인인증 팝업창 페이지에서 이용자가 직접 입력<br/>\n\n                                            - 본인인증 과정에서 시스템에서 생성되는 정보 수집(Ex. IP주소)\n                                            <br/><br/>\n                                            <div class="agree-subtitle">2. 개인정보의 이용목적과 제공정보</div>\n\n                                            가. 이용 목적<br/>\n\n                                            - 고객의 회원가입, ID/PW찾기, 거래동의 등을 위한 휴대폰 본인확인 결과<br/>\n\n                                            - 휴대폰 소지 확인을 위한 SMS 인증번호 전송<br/>\n\n                                            - 부정 이용 방지 및 수사의뢰<br/>\n\n                                            - 휴대폰번호보호서비스 해제(서비스 가입자에 한함)<br/>\n\n                                            - 기타 법률에서 정한 목적<br/>\n\n                                            나. 제공하는 개인정보<br/>\n\n                                            - 성명, 성별, 생년월일, 내/외국인, 휴대폰번호, 이동통신사, IP주소 [제공사 : 서비스 회원사]<br/>\n\n                                            - 성명, 성별, 생년월일, 휴대폰번호, 이동통신사 [*제공사 : SKT, KT, LGU+]*\n\n                                            - 휴대폰번호 [제공사 : SKT, KT, LGU+]*\n\n                                            - IP주소 [제공사 : 서비스 회원사]\n                                            <br/><br/>\n                                            <div class="agree-subtitle">3. 개인정보의 보유 및 이용기간</div>\n\n                                            이용자의 개인정보는 원칙적으로 개인정보의 수집 및 이용목적이 달성되면 지체없이 파기합니다. 단, 다음의 정보에 대해서는 아래의 이유로 명기한 기간 동안 보유합니다.<br/>\n\n                                            가. 회사 내부 방침에 의한 정보보유 사유 - 본인확인 발생 및 차단기록, 휴대폰번호<br/>\n\n                                            보유 이유: 부정 이용 방지 및 민원 처리<br/>\n\n                                            보유 기간: 5년<br/>\n\n                                            나. 관계법령에 의한 정보보유 사유<br/>\n\n                                            - 이용자 불만 또는 분쟁 처리에 관한 기록<br/>\n\n                                            보유 이유: 전자상거래 등에서의 소비자보호에 관한 법률<br/>\n\n                                            보유 기간: 3년\n                                        </template>\n\n                                    </template>\n\n                                    <template v-if="agreeIdx == 3">\n\n    \t                                <template v-if="selectCom == 1 || selectCom == 5">\n                                            <div class="agree-subtitle">[SK텔레콤 귀중]</div>\n\n                                            본인은 SK텔레콤(주)(이하 ‘회사’라 합니다)가 제공하는 본인확인서비스(이하 ‘서비스’라 합니다)를 이용하기 위해, 다음과 같이 본인의 개인정보를 회사가 아래 기재된 제3자에게 제공하는 것에 동의합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">1. 개인정보를 제공받는 자</div>\n\n                                            - NICE평가정보(주), SCI평가정보(주)\n                                            <br/><br/>\n                                            <div class="agree-subtitle">2. 개인정보를 제공받는 자의 개인정보 이용목적</div>\n\n                                            - 연계정보(CI)/중복가입확인정보(DI) 생성 및 회사에 제공\n                                            <br/><br/>\n                                            <div class="agree-subtitle">3. 제공하는 개인정보 항목</div>\n\n                                            - 회사가 보유하고 있는 이용자의 주민등록번호\n                                            <br/><br/>\n                                            <div class="agree-subtitle">4. 개인정보를 제공받는 자의 개인정보 보유 및 이용기간</div>\n\n                                            - 연계정보(CI)/중복가입확인정보(DI) 생성 후 즉시 폐기\n                                            <br/><br/>\n                                            <div class="agree-subtitle">*5. 위 개인정보 제공에 동의하지 않으실 경우, 서비스를 이용할 수 없습니다</div>\n                                            <br/><br/>\n                                            <div class="agree-subtitle">[NICE평가정보 귀중]</div>\n\n                                            NICE평가정보(주) (이하 “회사”)가 에스케이텔레콤(주), (주)케이티, LG유플러스(주)의 업무 대행을 통해 제공하는 휴대폰본인확인서비스와 관련하여 고객으로부터 수집한 고유식별정보를 이용 및 처리하거나 제3자에게 제공하고자 할 때에는 ‘정보통신망 이용촉진 및 정보보호 등에 관한 법률’에 따라서 고객으로 부터 동의를 받아야 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제1조 [고유식별정보의 이용 및 처리 목적]</div>\n\n                                            “회사”는 고객의 고유식별정보를 아래의 목적으로 이용 및 처리할 수 있습니다.<br/>\n\n                                            1. 정보통신망법 제23조에서 정한 본인확인서비스 제공<br/>\n                                            2. 부정 이용 방지 및 수사의뢰<br/>\n                                            3. 휴대폰번호보호서비스 해제 (서비스 가입자에 한함)\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제 2조 [고유식별정보의 이용 및 처리 내용]</div>\n\n                                            에스케이텔레콤(주), (주)케이티, LG유플러스(주)의 통신사 또는 통신사의 대행업무를 수행하는 사업자에 정보를 전송하여 방송통신위원회에서 고시로 지정한 휴대폰본인확인기관을 통해 본인여부를 확인하고 결과를 제공받기 위해 고유식별정보가 이용 및 처리됩니다.<br/>\n\n                                            - 이용 및 처리되는 고유식별정보 : 주민등록번호(내국인), 외국인등록번호(외국인)<br/>\n\n                                            상기와 같이 고유식별정보 이용 및 처리에 동의합니다.\n                                        </template>\n\n                                        <template v-if="selectCom == 2 || selectCom == 6">\n\n                                            <div class="agree-subtitle">[(주)케이티 귀중]</div>\n\n                                            주)케이티 (이하 "본인확인기관")가 NICE평가정보(주) (이하 "회사")을 통해 제공하는 휴대폰 본인확인 서비스 관련하여 이용자로부터 수집한 고유식별정보를 이용하거나 타인에게 제공할 때에는 \'정보통신망 이용촉진 및 정보보호 등에 관한 법률\'(이하 "정보통신망법")에 따라 이용자의 동의를 얻어야 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">■ 제 1 조[고유식별정보의 처리 동의]</div>\n\n                                            "본인확인기관"은 정보통신망법 제23조의2 제2항에 따라 인터넷상에서 주민등록번호를 입력하지 않고도 본인임을 확인할 수 있는 휴대폰 본인확인서비스를 제공하기 위해 고유식별정보를 처리합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">■ 제 2 조[고유식별정보의 제공 동의]</div>\n\n                                            "본인확인기관 지정 등에 관한 기준(방송통신위원회 고시)"에 따라 "회사"와 계약한 정보통신서비스 제공자 의 연계서비스 및 중복가입확인을 위해 아래와 같이 본인의 고유식별정보를 \'다른 본인확인기관\'에 제공하는 것에 동의합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">[고유식별정보 제공 동의]</div>\n\n                                            1. 제공자(본인확인기관)<br/>\n\n                                            (주)케이티<br/>\n\n                                            2. 제공 받는자(본인확인기관)<br/>\n\n                                            NICE평가정보(주)<br/>\n\n                                            3. 제공하는 항목<br/>\n\n                                            주민등록번호(내국인), 외국인등록번호(국내거주외국인)<br/>\n\n                                            4. 제공 목적<br/>\n\n                                            CI(연계정보), DI(중복가입확인정보)의 생성 및 전달<br/>\n\n                                            5. 보유 및 이용기간<br/>\n\n                                            CI(연계정보), DI(중복가입확인정보) 생성 후 즉시 폐기<br/>\n\n                                            <br/><br/>\n\n                                            <div class="agree-subtitle">[NICE평가정보 귀중]</div>\n\n                                            NICE평가정보(주) (이하 “회사”)가 에스케이텔레콤(주), (주)케이티, LG유플러스(주)의 업무 대행을 통해 제공하는 휴대폰본인확인서비스와 관련하여 고객으로부터 수집한 고유식별정보를 이용 및 처리하거나 제3자에게 제공하고자 할 때에는 ‘정보통신망 이용촉진 및 정보보호 등에 관한 법률’에 따라서 고객으로 부터 동의를 받아야 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제1조 [고유식별정보의 이용 및 처리 목적]</div>\n\n                                            “회사”는 고객의 고유식별정보를 아래의 목적으로 이용 및 처리할 수 있습니다.<br/>\n\n                                            1. 정보통신망법 제23조에서 정한 본인확인서비스 제공<br/>\n                                            2. 부정 이용 방지 및 수사의뢰<br/>\n                                            3. 휴대폰번호보호서비스 해제 (서비스 가입자에 한함)\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제 2조 [고유식별정보의 이용 및 처리 내용]</div>\n\n                                            에스케이텔레콤(주), (주)케이티, LG유플러스(주)의 통신사 또는 통신사의 대행업무를 수행하는 사업자에 정보를 전송하여 방송통신위원회에서 고시로 지정한 휴대폰본인확인기관을 통해 본인여부를 확인하고 결과를 제공받기 위해 고유식별정보가 이용 및 처리됩니다.<br/>\n\n                                            -이용 및 처리되는 고유식별정보 : 주민등록번호(내국인), 외국인등록번호(외국인)<br/>\n\n                                            상기와 같이 고유식별정보 이용 및 처리에 동의합니다.\n\n                                        </template>\n\n                                        <template v-if="selectCom == 3 || selectCom == 7">\n                                            <div class="agree-subtitle">[LG유플러스(주) 귀중]</div>\n\n                                            LG유플러스(주)(이하 ‘회사’)가 휴대폰본인확인서비스(이하 ‘서비스’)를 제공하기 위해 고유식별정보를 다음과 같이 제3자에게 제공 및 처리 하는 데에 동의합니다.<br/>\n\n                                            1. 고유식별정보를 제공받는자- NICE평가정보㈜, SCI평가정보㈜<br/>\n                                            2. 고유식별정보를 제공받는자의 목적- 연계정보(CI)와 중복가입확인정보(DI)의 생성 및 ‘회사’ 제공- 부정 이용 방지 및 민원 처리<br/>\n                                            3. 고유식별정보 제공 항목: ‘회사’가 보유하고 있는 고객의 주민등록번호와 외국인등록번호<br/>\n                                            4. 고유식별정보를 제공받는 자의 보유 및 이용기간: 연계정보(CI) 및 중복가입확인정보(DI) 생성후 6개월<br/>\n                                            5. 상기 고유식별정보 처리에 대한 내용에 동의하지 않으실 경우, ‘서비스’를 이용할 수 없습니다.상기와 같이 고유식별정보 이용 및 처리에 동의합니다.\n\n                                            <br/><br/>\n\n                                            <div class="agree-subtitle">[NICE평가정보 귀중]</div>\n\n                                            NICE평가정보(주) (이하 “회사”)가 에스케이텔레콤(주), (주)케이티, LG유플러스(주)의 업무 대행을 통해 제공하는 휴대폰본인확인서비스와 관련하여 고객으로부터 수집한 고유식별정보를 이용 및 처리하거나 제3자에게 제공하고자 할 때에는 ‘정보통신망 이용촉진 및 정보보호 등에 관한 법률’에 따라서 고객으로 부터 동의를 받아야 합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제1조 [고유식별정보의 이용 및 처리 목적]</div>\n\n                                            “회사”는 고객의 고유식별정보를 아래의 목적으로 이용 및 처리할 수 있습니다.<br/>\n\n                                            1. 정보통신망법 제23조에서 정한 본인확인서비스 제공<br/>\n                                            2. 부정 이용 방지 및 수사의뢰<br/>\n                                            3. 휴대폰번호보호서비스 해제 (서비스 가입자에 한함)\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제 2조 [고유식별정보의 이용 및 처리 내용]</div>\n\n                                            에스케이텔레콤(주), (주)케이티, LG유플러스(주)의 통신사 또는 통신사의 대행업무를 수행하는 사업자에 정보를 전송하여 방송통신위원회에서 고시로 지정한 휴대폰본인확인기관을 통해 본인여부를 확인하고 결과를 제공받기 위해 고유식별정보가 이용 및 처리됩니다.\n\n                                            -이용 및 처리되는 고유식별정보 : 주민등록번호(내국인), 외국인등록번호(외국인)상기와 같이 고유식별정보 이용 및 처리에 동의합니다.\n                                        </template>\n\n                                    </template>\n\n                                    <template v-if="agreeIdx == 4">\n\n                                        <template v-if="selectCom == 6">\n\n                                            "알뜰폰(MVNO)"사업자는 다음과 같이 개인정보를 제3자에게 제공하고 있습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제1조 (알뜰폰(MVNO) 사업자)</div>\n\n                                            (주)케이티의 알뜰폰(MVNO) 사업자는 (주)CJ헬로비전(헬로모바일), KT파워텔(주)(더블비), 홈플러스(주)(플러스모바일), (주)씨엔커뮤니케이션(WMVNO), (주)에넥스텔레콤(WHOM), (주)에스원(안심폰), (주)위너스텔(Well), 에이씨앤코리아(Flash모바일), (주)세종텔레콤(스노우맨), (주)KT텔레캅(KT텔레캅), (주)프리텔레콤(freeT), (주)EG모바일(EG제로), (주)KT M모바일(M모바일), (주)앤알커뮤니케이션(앤텔레콤), (주)아이즈비전(아이즈모바일), (주)제이씨티(제이씨티), (주)머천드코리아(마이월드), 장성모바일(장성모바일), (주)유니컴즈(Mobing), 아이원(아이플러스유), (주)파인디지털, (주)미니게이트, (주)핀플레이, 드림라인(주) 입니다.\n\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제2조 (제공목적)</div>\n\n                                            본 동의는 본인확인서비스를 제공하기 위하여 본인확인기관인 (주)케이티와 본인확인서비스 이용자간 본인확인서비스 이용에 필요한 고객정보를 위탁하여 본인확인서비스를 제공 하는 것에 대해 동의합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제3조 (제공정보)</div>\n\n                                            휴대폰 본인확인서비스 제공에 필요한 개인정보로 성명, 휴대폰번호, 생년월일, 내·외국인구분, 성별 정보입니다. \n                                            <br/><br/>\n                                            <div class="agree-subtitle">제4조 (제공받는자)</div>\n\n                                            (주)케이티 \n                                            <br/><br/>\n                                            <div class="agree-subtitle">제5조 (제공기간)</div>\n\n                                            이동통신사에서 보유중인 정보로서 별도 이용기간은 없습니다. \n\n                                            "본인"은 정보제공에 동의하지 않으실 수 있으며, 동의하지 않으실 경우 휴대폰 본인확인서비스를 이용 하실 수 없습니다.\n                                        </template>\n\n                                        <template v-if="selectCom == 7">\n\n                                            "알뜰폰(MVNO)"사업자는 다음과 같이 개인정보를 제3자에게 제공하고 있습니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제1조 (알뜰폰(MVNO) 사업자)</div>\n\n                                            엘지유플러스의 알뜰폰(MVNO) 사업자는 인스코비(프리티), 머천드코리아(마이월드), (주)엠티티텔레콤(메리큐), 홈플러스(주), (주)알뜰폰, (주)미디어로그, 이마트, 서경방송, 울산방송, 푸른방송, 남인천방송, 금강방송, 제주방송, (주)와이엘랜드(여유텔레콤), ACN코리아(플래시모바일) 입니다\n\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제2조 (제공목적)</div>\n\n                                            본 동의는 본인확인 서비스를 제공하기 위하여 본인확인기관인 (주)엘지유플러스와 본인확인서비스 이용자간 본인확인서비스 이용에 필요한 고객정보를 위탁하여 본인확인서비스를 제공 하는 것에 대해 동의합니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제3조 (제공정보)</div>\n\n                                            휴대폰 본인확인 서비스 제공에 필요한 개인정보로 성명, 휴대폰번호, 생년월일, 내.외국인구분, 성별 정보입니다.\n                                            <br/><br/>\n                                            <div class="agree-subtitle">제4조 (제공받는자)</div>\n\n                                            (주)엘지유플러스  \n                                            <br/><br/>\n                                            <div class="agree-subtitle">제5조 (제공기간)</div>\n\n                                            이동통신사에서 보유중인 정보로서 별도 이용기간은 없습니다. \n\n                                            "본인"은 정보제공에 동의하지 않으실 수 있으며, 동의하지 않으실 경우 휴대폰 본인 확인 서비스를 이용 하실 수 없습니다.\n                                        </template>\n\n                                    </template>\n                                </div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="btn btn-block btn-primary-outline" v-on:click="modalHide">확인</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\t\t\t',
                        props: {
                            agreeIdx: 0,
                            selectCom: 0
                        },
                        data: function() {
                            return {
                                winHei: 0
                            }
                        },
                        created: function() {
                            this.winHei = $(window).height()
                        },
                        methods: {
                            load: function() {
                                this.winHei = $(window).height(), $("#authModal").modal("show")
                            },
                            modalHide: function() {
                                $("#authModal").modal("hide")
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n\t\t\t\t<input type="file" v-on:change="read"/>\n\t\t\t',
                        props: {
                            size: {
                                default: 10
                            }
                        },
                        data: function() {
                            return {
                                file: {
                                    fileData: "",
                                    fileName: "",
                                    state: !0
                                }
                            }
                        },
                        methods: {
                            read: function(e) {
                                var t = this,
                                    n = e.target.files || e.dataTransfer.files;
                                if (n.length) {
                                    var a = new FileReader;
                                    a.onload = function(e) {
                                        if (n[0].size / 1024e3 > t.size) return void t.$emit("error", n[0].size);
                                        t.file.fileData = e.target.result, t.file.fileName = n[0].name, t.$emit("input", t.file)
                                    }, a.readAsDataURL(n[0])
                                }
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n                \x3c!-- 투자자별 자격 요건 안내 --\x3e\n                <div id="investModal" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">\n                    <div class="modal-dialog" role="document">\n                        <div class="modal-content">\n                        \t<div class="modal-header">\n\t\t\t\t\t\t\t\t<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n\t\t\t\t\t\t\t</div>\n                            <div class="modal-body">\n                            \t<div v-show="mode == 1">\n\t                                <ul>\n\t                                    <li>\n\t                                        <strong class="grey-800">1. 일반투자자</strong>\n\t                                        <ul>\n\t                                            <li>\n\t                                                적격투자자, 전문투자자에 해당하지 않는 모든 투자자\n\t                                            </li>\n\t                                        </ul>\n\t                                    </li>\n\t                                    <li>\n\t                                        <div class="mt15"><strong class="grey-800">2. 적격투자자</strong></div>\n\t                                        <ul>\n\t                                            <li>\n\t                                            \t1) 금융소득종합과세 대상자\n\t                                            </li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t2) 사업소득+근로소득금액의 합계가 1억 원 이상인 자\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t3) 금융 전문인력이며, 금융투자협회에 3년 이상 금융전문인력으로 등록되어 있는 자\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t4) 최근 2년간 크라우드펀딩(모집)을 통해 5회 이상 투자하고, 누적 투자금이 1,500만 원   이상인 자 (주식, 채권 포함/리워드 불포함)\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t                                        </ul>\n\t                                    </li>\n\t                                    <li>\n\t                                        <div class="mt15"><strong class="grey-800">3. 전문투자자</strong></div>\n\t                                        <ul>\n\t                                        \t<li>\n\t                                        \t\t1) 자본시장법상 지정전문투자자\n\t                                    \t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t2) 벤특법상 개인투자조합 및 전문엔젤투자자 등\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t3) 벤처/창업자에 대한 일정 수준의 투자실적을 보유한 자\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t4) 연고자 (해당 기업 관계자)\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t5) 전문가 그룹 (해당 기업에 회계, 자문 용역 제공)\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t                                        </ul>\n\t                                    </li>\n\t                                </ul>\n                                </div>\n\n                                <div v-show="mode == 2">\n\t                                <ul>\n\t                                    <li>\n\t                                        <strong class="grey-800">1. 일반투자자</strong>\n\t                                        <ul>\n\t                                            <li>\n\t                                                적격투자자, 전문투자자에 해당하지 않는 모든 법인\n\t                                            </li>\n\t                                        </ul>\n\t                                    </li>\n\t                                    <li>\n\t                                        <div class="mt15"><strong class="grey-800">2. 적격투자자</strong></div>\n\t                                        <ul>\n\t                                            <li>\n\t                                            \t직전연도 자기자본 10억 이상의 법인\n\t                                            </li>\n\t                                        </ul>\n\t                                    </li>\n\t                                    <li>\n\t                                        <div class="mt15"><strong class="grey-800">3. 전문투자자</strong></div>\n\t                                        <ul>\n\t                                        \t<li>\n\t                                        \t\t1) 자본시장법 당연전문투자자\n\t                                        \t\t<ul>\n                                    \t\t\t         <li>a. 주권상장법인</li>\n\t\t\t\t\t\t\t\t\t\t\t\t         <li>b. 은행, 금융투자업자</li>\n\t\t\t\t\t\t\t\t\t\t\t\t         <li>c. 집합투자기구 (개별법 펀드 제외)</li>\n\t\t\t\t\t\t\t\t\t\t\t\t         <li>d.  해외주권상장법인, 국제기구 등</li>\n\t                                        \t\t</ul>\n\t                                    \t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t2) 자본시장법상 지정전문투자자 (금융투자협회 등록)\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ul>\n                                    \t\t\t         <li>금융투자잔고 100억원 이상의 국내법인, 단체 <br/>(외감법 대상인 경우 50억원)</li>\n\t                                        \t\t</ul>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t3) 전문성, 위험감수능력을 갖춘 자\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t            <li>a. 중소기업창업투자회사</li>\n\t\t\t\t\t\t\t\t\t\t\t            <li>b. 개별법(창지법, 여전법, 벤특법 등)에 따른 집합투자기구 <br/>(창업투자조합, 신기술사업투자조합, 벤처투자조합 등)</li>\n\t\t\t\t\t\t\t\t\t\t\t            <li>c. 벤특법상 개인투자조합</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t                                        </ul>\n\t                                    </li>\n\t                                </ul>\n                                </div>\n\n                                <table class="table table-condensed">\n                                    <thead>\n                                        <tr>\n                                            <th>투자자 구분</th>\n                                            <th>1개 기업당 투자한도</th>\n                                            <th>연간 총 투자한도</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td class="text-center">일반투자자</td>\n                                            <td class="text-center">500만원</td>\n                                            <td class="text-center">1,000만원</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="text-center">적격투자자</td>\n                                            <td class="text-center">1,000만원</td>\n                                            <td class="text-center">2,000만원</td>\n                                        </tr>\n                                        <tr>\n                                            <td class="text-center">전문투자자</td>\n                                            <td class="text-center">없음</td>\n                                            <td class="text-center">없음</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                \t<a href="https://image-se.ycrowdy.com/file/%5B%E1%84%8F%E1%85%B3%E1%84%85%E1%85%A1%E1%84%8B%E1%85%AE%E1%84%83%E1%85%B5%5D%E1%84%90%E1%85%AE%E1%84%8C%E1%85%A1%E1%84%8C%E1%85%A1_%E1%84%8B%E1%85%B2%E1%84%92%E1%85%A7%E1%86%BC%E1%84%87%E1%85%A7%E1%86%AF_%E1%84%80%E1%85%AE%E1%84%87%E1%85%B5%E1%84%89%E1%85%A5%E1%84%85%E1%85%B2_%E1%84%8B%E1%85%A1%E1%86%AB%E1%84%82%E1%85%A2(2020v02).pdf" target="_blank" class="ml30 blue-800 crowdy-font-bold">구비서류 자세히 보기</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- 투자자별 자격 요건 안내 --\x3e\n\t\t\t',
                        props: {
                            mode: ""
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n                \x3c!-- 반려사유 --\x3e\n\t\t\t\t<div class="modal fade" id="aRejectedModal" role="dialog" tabindex="-1" data-backdrop="static" data-keyboard="false">\n\t\t\t\t\t<div class="modal-dialog modal-sm">\n\t\t\t\t\t\t<div class="modal-content">\n\t\t\t\t\t\t\t<div class="modal-body modal-order">\n\t\t\t\t\t\t\t\t승인이 반려되었습니다.\n\t\t\t\t\t\t\t\t<div class="mt5">\n\t\t\t\t\t\t\t\t\t반려사유 : {{rejectedReason}}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="modal-footer">\n\t\t\t\t\t\t\t\t<div class="row not-space">\n\t\t\t\t\t\t\t\t\t<a class="modalBlueBtn" data-dismiss="modal">확인</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\x3c!-- //반려사유 --\x3e\n\t\t\t',
                        props: {
                            rejectedReason: ""
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n\t\t\t\t<div class="card-info">\t\n                    \x3c!-- 펀딩하기 > PC --\x3e\n                    <template v-if="fundingPageConfirm">\n                        <div class="funding-page-area mt10">\n                            <label for="cardLabel">카드번호</label> \n                            <input type="tel" name="cardLabel" class="funding-page-area-input card hide-card inputs" v-model="cardInfo.cardNoPart[0]" maxlength="4">\n                            <input type="tel" name="cardLabel" class="funding-page-area-input card hide-card inputs" v-model="cardInfo.cardNoPart[1]" maxlength="4">\n                            <input type="tel" name="cardLabel" class="funding-page-area-input card hide-card inputs" v-model="cardInfo.cardNoPart[2]" maxlength="4">\n                            <input type="tel" name="cardLabel" class="funding-page-area-input card inputs" v-model="cardInfo.cardNoPart[3]" maxlength="4">\n                            <p class="noti-word2">크라우디는 카드번호를 저장하지 않고, 카드사에서 제공하는 암호화된 정보만을 저장합니다.</p>\n                        </div>\n                        <div class="funding-page-area mt10">\n                            <label for="cardLabel">카드 비밀번호</label> \n                            <input type="tel" name="cardLabel" class="funding-page-area-input card hide-card" v-model="cardInfo.cardPw" maxlength="2" placeholder="앞두자리">\n                        </div>\n                        <div class="funding-page-area mt20">\n                            <label for="cardLabel">유효기간</label> \n                            <input type="tel" name="cardLabel" class="funding-page-area-input card inputs" v-model="cardInfo.expMonth" maxlength="2" placeholder="MM">\n                            <input type="tel" name="cardLabel" class="funding-page-area-input card inputs" v-model="cardInfo.expYear" maxlength="2" placeholder="YY">\n                        </div>\n                        <div class="funding-page-area mt20">\n                            <label for="cardLabel">생년월일</label> \n                            <input type="tel" name="cardLabel" class="funding-page-area-input" v-model="cardInfo.idNo" maxlength="10" placeholder="법인카드의 경우 사업자등록번호 10자리 숫자">\n                        </div>\n                    </template>\n                    \x3c!-- //펀딩하기 > PC --\x3e\n\n                    \x3c!-- 그 외 카드정보 입력 --\x3e\n                    <template v-if="!fundingPageConfirm">\n                        <div class="card-info-box">\n                            <div class="card card-hide">\n                                <label class="card-label">카드번호</label>\n                                <div class="card-inputs ml15">\n                                    <font class="card-placeholder card-placeholder-num" v-on:click="hidePlaceholder" v-if="cardInfo.cardNoPart.join(\'\').length == 0">-없이 16자리 숫자를 입력해주세요.</font>\n                                    <div class="card-input-box">\n                                        <number-input class="form-control hide-card inputs input-no" :type="\'tel\'" :num="cardInfo.cardNoPart[0]" v-model="cardInfo.cardNoPart[0]" maxlength="4"></number-input>\n                                    </div>\n                                    <div class="card-input-box">\n                                        <number-input class="form-control hide-card inputs input-no" :type="\'tel\'" :num="cardInfo.cardNoPart[1]" v-model="cardInfo.cardNoPart[1]" maxlength="4"></number-input>\n                                    </div>\n                                    <div class="card-input-box">\n                                        <number-input class="form-control hide-card inputs input-no" :type="\'tel\'" :num="cardInfo.cardNoPart[2]" v-model="cardInfo.cardNoPart[2]" maxlength="4"></number-input>\n                                    </div>\n                                    <div class="card-input-box">\n                                        <number-input class="form-control inputs input-no" :type="\'tel\'" :num="cardInfo.cardNoPart[3]" v-model="cardInfo.cardNoPart[3]" maxlength="4"></number-input>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="card card-middle card-hide">\n                                <div class="half-card">\n                                    <label class="card-label">카드 비밀번호</label>\n                                    <font class="card-placeholder card-placeholder-pwd ml15" v-on:click="hidePwdPlaceholder" v-if="cardInfo.cardPw.length == 0">앞2자리</font>\n                                    <div class="card-input-box ml15">\n                                        <number-input class="form-control hide-card inputs input-pwd" :type="\'tel\'" :num="cardInfo.cardPw" v-model="cardInfo.cardPw" maxlength="2"></number-input>\n                                    </div>\n                                </div>\n                                <div>\n                                    <label class="card-label">유효기간</label>\n                                    <div class="card-input-box month ml15">\n                                        <number-input class="form-control inputs input-exp" :type="\'tel\'" :num="cardInfo.expMonth" v-model="cardInfo.expMonth" maxlength="2" placeholder="MM"></number-input>\n                                    </div>\n                                    <div class="card-input-box divider">/</div>\n                                    <div class="card-input-box year">\n                                        <number-input class="form-control inputs input-exp" :type="\'tel\'" :num="cardInfo.expYear" v-model="cardInfo.expYear" maxlength="2" placeholder="YY"></number-input>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="card card-hide">\n                                <label class="card-label">생년월일<font>(6자리)</font></label>\n                                 <div class="card-input-box num ml15">\n                                    <number-input class="form-control inputs" :type="\'tel\'" :num="cardInfo.idNo" v-model="cardInfo.idNo" maxlength="10" placeholder="법인카드의 경우 사업자등록번호 10자리 숫자"></number-input>\n                                </div>\n                            </div>\n                        </div>\n                    </template>\n                    \x3c!-- //그 외 카드정보 입력 --\x3e\n\t\t\t\t</div>\n\t\t\t',
                        props: ["cardInfo", "fundingPageConfirm", "refreshConfirm"],
                        data: function() {
                            return {}
                        },
                        components: {
                            numberInput: n(0).default.component()
                        },
                        created: function() {
                            $(function() {
                                $(".inputs").keydown(function(e) {
                                    var t = $(this).attr("maxlength"),
                                        n = [8, 9, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 144, 145],
                                        a = $(this).attr("class");
                                    if (8 == e.which && 0 == this.value.length) a.indexOf("input-no") > -1 ? $(this).parent().prev().children(".inputs").focus() : a.indexOf("input-exp") > -1 ? $(this).parent().prev().prev().children(".inputs").focus() : a.indexOf("funding-page-area-input") > -1 && $(this).prev(".inputs").focus();
                                    else {
                                        if ($.inArray(e.which, n) >= 0) return !0;
                                        if (this.value.length >= t) return a.indexOf("input-no") > -1 ? $(this).parent().next().children(".inputs").focus() : a.indexOf("input-exp") > -1 ? $(this).parent().next().next().children(".inputs").focus() : a.indexOf("funding-page-area-input") > -1 && $(this).next(".inputs").focus(), !1;
                                        if (e.shiftKey || e.which <= 47 || e.which >= 106) return !1;
                                        if (e.shiftKey || e.which >= 58 && e.which <= 95) return !1
                                    }
                                }).keyup(function() {
                                    var e = $(this).attr("class"),
                                        t = $(this).attr("maxlength");
                                    if (this.value.length >= t) return e.indexOf("input-no") > -1 ? $(this).parent().next().children(".inputs").focus() : e.indexOf("input-exp") > -1 ? $(this).parent().next().next().children(".inputs").focus() : e.indexOf("funding-page-area-input") > -1 && $(this).next(".inputs").focus(), !1
                                })
                            })
                        },
                        watch: {
                            refreshConfirm: function(e) {
                                e && this.$emit("set-refresh-confirm", !1)
                            }
                        },
                        methods: {
                            hidePlaceholder: function() {
                                $(".card-inputs .card-input-box:first .inputs").focus()
                            },
                            hidePwdPlaceholder: function() {
                                $(".input-pwd").focus()
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n                <div id="paymentInfo">   \n                    \x3c!-- 팝업 --\x3e\n                    <div id="paymentModal" :class="{\'payment-modal\' : type == 2, \'modal\' : type == 2, \'fade\' : type == 2, \'funding-page\' : type == 1}" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">\n                        <div :class="{\'modal-dialog\' : type == 2}" role="document">\n                            <div :class="{\'modal-content\' : type == 2, \'payment-content\' : type == 2}">\n                                <div class="modal-header" v-if="type == 2">\n                                    <div class="payment-title">간편결제 카드</div> \n                                    <div class="close-button">\n                                        <div class="icon icon-close" v-on:click="resetData" data-dismiss="modal" aria-label="Close"></div>\n                                    </div>\n                                </div>\n                                <div :class="{\'modal-body\' : type == 2}">\n\n                                    \x3c!-- 결제정보 --\x3e\n                                    <div :class="{\'payment-area\' : type == 3, \'mt30\' : type == 1, \'payment-background-color\' : (type == 1 && isMobile)}">\n                                        \n                                        \x3c!-- 마이페이지 - 설정 - 간편결제 설정에서는 직접입력 없음 --\x3e\n                                        <template v-if="type != 3">\n                                            <div class="mypage-card-type" :class="{\'type2\' : type == 2}">\n                                                <a href="javascript:void(0)" :class="{\'active\' : paymentType == 1}" v-on:click="paymentTypeChange(1)">\n                                                    <span class="card-button">간편결제</span>\n                                                </a>\n                                                <a href="javascript:void(0)" :class="{\'active\' : paymentType == 2}" v-on:click="paymentTypeChange(2)">\n                                                    <span class="card-button">직접입력</span>\n                                                </a>\n                                            </div>\n                                        </template>\n                                        <template v-if="type == 3">\n                                            <div class="hidden-xs mypage-card-title">카드관리</div>\n                                        </template>\n                                        \n                                        <div class="modal-body-content" :class="{\'container\' : (type == 1 && isMobile)}">\n                                            \x3c!-- 간편결제 --\x3e\n                                            <template v-if="paymentType == 1">\n                                                <template v-if="paymentInfoConfirm">\n                                                    <div class="mypage-card mypage-card-blue" :class="{\'mypage-card-center\' : type == 2}">\n                                                        <div class="title">{{paymentInfo.payCodeName}}카드 ({{paymentInfo.payNum}})</div>\n                                                        <div class="date">등록일:{{paymentInfo.wdate}}</div>\n                                                    </div>\n                                                    <template v-if="type == 3">\n                                                        <div class="mypage-card-button">\n                                                            <div v-on:click="deleteCardConfirm">삭제</div>\n                                                            <div v-on:click="changeCardConfirm">변경</div>\n                                                        </div>\n                                                    </template>\n                                                </template>\n                                                <template v-if="!paymentInfoConfirm">\n                                                    \x3c!-- 빈 카드--\x3e\n                                                    <template v-if="!popupCheck">\n                                                        <div class="mypage-card mypage-card-empty" :class="{\'mypage-card-center\' : type == 2}" v-on:click="openCardPopup">\n                                                            <div class="icon icon-plus"></div>\n                                                        </div>\n                                                        <p class="mypage-card-empty-word" :class="{\'mypage-card-empty-center\' : type == 2}">등록된 카드 정보가 없습니다.</p>\n                                                    </template>\n                                                    <template v-if="popupCheck">\n                                                        <simple-card-info :card-info="simple"></simple-card-info>\n                                                        <p class="noti-word2">* 크라우디는 카드번호를 저장하지 않고, 카드사에서 제공하는 암호화된 정보만을 저장합니다.</p>\n                                                    </template>\n                                                </template>\n                                                \n                                                <hr class="hidden-xs mypage-card-hr" :class="{\'hide\' : (type != 3) && !(type == 1 && !isMobile)}"></hr>\n\n                                                <div class="mypage-card-noti" v-if="(type == 3 && !popupCheck) || (type != 3 && !paymentInfoConfirm && paymentType == 1 && !popupCheck)" :class="{\'mb100\' : type == 3 && paymentInfoConfirm}">\n                                                    <p class="title">[간편결제 안내사항]</p>\n                                                    <ul>\n                                                        <li>간편결제를 위한 카드는 1개만 등록할 수 있습니다.</li>\n                                                        <li>크라우디는 카드 번호를 저장하지 않습니다.</li>\n                                                        <li>카드를 변경하면 기존에 등록된 카드는 삭제됩니다.</li>\n                                                        <li>펀딩한 카드 정보는 마이페이지 내 펀딩한 프로젝트에서 변경할 수 있습니다. </li>\n                                                    </ul>\n                                                </div>\n\n                                                <template v-if="type != 2 && !paymentInfoConfirm">\n                                                    <div>\n                                                        <div class="btn btn-lg btn-primary mypage-card-pay-button mt30 not-pop" v-on:click="openCardPopup">등록하기</div>\n                                                    </div>\n                                                </template>\n                                                \n                                            </template>\n                                            \x3c!-- //간편결제 --\x3e\n\n                                            \x3c!-- 직접입력 --\x3e\n                                            <template v-if="paymentType == 2">\n                                                \x3c!-- 결제정보입력 --\x3e\n                                                <div v-if="type == 1 && fundingPageConfirm">\n                                                    <div class="funding-page-subs mt30 mb20">결제정보 입력</div>\n                                                </div>\n                                                \n                                                \x3c!-- 카드정보 --\x3e\n                                                <template v-if="type == 1">\n                                                    \x3c!-- 일반 카드 UI --\x3e\n                                                    <direct-card-info :card-info="direct" :funding-page-confirm="fundingPageConfirm"></direct-card-info>\n                                                </template>\n                                                <template v-if="type != 1">\n                                                    <direct-card-info :card-info="direct"></direct-card-info>\n                                                    <p class="noti-word2">* 크라우디는 카드번호를 저장하지 않고, 카드사에서 제공하는 암호화된 정보만을 저장합니다.</p>\n                                                </template>\n                                                \x3c!-- //카드정보 --\x3e\n                                                \n                                                \x3c!-- //결제정보입력 --\x3e\n                                            </template>\n                                            \x3c!-- //직접입력 --\x3e\n\n                                            \x3c!-- 유의사항 --\x3e\n                                            <template v-if="(type == 1 && ((paymentType == 1 && paymentInfoConfirm) || (paymentType == 2))) || (type == 2 && (paymentType == 1 && paymentInfoConfirm && payNowConfirm && !popupCheck)) || (type == 2 && (paymentType == 2 && payNowConfirm))">\n                                                <div class="mypage-card-noti" v-if="!isMobile && paymentType != 2">\n                                                    <p class="title">[유의사항]</p>\n                                                    <ul>\n                                                        <li>결제실행일에 카드 한도초과, 이용정지, 잔액부족 등의 사유로 <br/> 결제가 실패할 수 있습니다. 결제수단이 유효한지 확인하세요.</li>\n                                                    </ul>\n                                                </div>\n                                                \x3c!-- p v-if="isMobile || paymentType == 2" class="noti-word2">* 결제실행일에 카드 한도초과, 이용정지, 잔액부족 등의 사유로 <br/> 결제가 실패할 수 있습니다. 결제수단이 유효한지 확인하세요.</p --\x3e\n                                                <p v-if="isMobile || paymentType == 2" class="noti-word2">* 결제실행일에 카드 한도초과, 이용정지, 잔액부족 등의 사유로 결제가 실패할 수 있습니다. 결제수단이 유효한지 확인하세요.</p>\n                                            </template>\n                                            \x3c!-- //유의사항 --\x3e\n\n                                            \x3c!-- 결제자 휴대폰 번호 --\x3e\n                                            <member-certi v-if="type == 1 && ((paymentType == 1 && paymentInfoConfirm) || (paymentType == 2))" v-on:set-mobile-no="setMobileNo"></member-certi>\n                                            \x3c!-- //결제자 휴대폰 번호 --\x3e\n\n                                            \x3c!-- 정보동의 --\x3e\n                                            <div v-if="type == 2 && ((paymentType == 1 && paymentInfoConfirm) || paymentType == 2)" class="mypage-card-agree">\n                                                <label for="pay_info_consent" class="agree-title">\n                                                    <div class="agree-text">정보동의</div>\n                                                </label> \n                                                <div class="pay_info_content">\n                                                    <label for="pay_info_content" class="checkbox-inline agree-content">\n                                                        <input type="checkbox" name="pay_info_content" id="pay_info_content" v-model="agree"><span class="label"></span><span class="label-text agree-text">결제에 필요한 정보 제공에 동의합니다.</span>\n                                                    </label> \n                                                    <span class="label-text agree-text agree-popup agree-popup" :class="{\'mt5\' : type == 2}" v-on:click="policy(1)">(보기)</span>\n                                                </div>\n                                            </div>\n                                            \x3c!-- //정보동의 --\x3e\n\n                                            \x3c!-- 간편결제 카드 등록 : 직접입력 + --\x3e\n                                            <div v-if="paymentType == 2 && type != 3" class="mypage-card-agree mt20">\n                                                <label for="pay_add_content" class="agree-title">\n                                                    <div class="agree-text">간편결제 카드 등록 (선택)</div>\n                                                </label> \n                                                <div>\n                                                    <label for="pay_add_content" class="checkbox-inline agree-content">\n                                                        <input type="checkbox" name="pay_add_content" id="pay_add_content" v-model="simpleAgree"><span class="label"></span><span class="label-text agree-text">이 카드를 간편결제 카드로 설정하겠습니다. <br /> &nbsp; 현재 등록된 카드정보는 삭제됩니다.</span>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                            \x3c!-- //간편결제 카드 등록 --\x3e\n\n                                            <template v-if="type == 2">\n                                                <template v-if="paymentType == 1">\n                                                    <template v-if="paymentInfoConfirm">\n                                                        <div class="btn btn-lg btn-block btn-primary mypage-card-pay-button mt30" :class="{\'not-allowed-btn\' : !agree, \'mb50\' : isMobile}" v-on:click="openPinModalFor">{{buttonText}}</div>     \n                                                    </template>\n                                                    <template v-if="!paymentInfoConfirm">\n                                                        <div class="btn btn-lg btn-block btn-primary mypage-card-pay-button" :class="{\'mb50\' : isMobile}" v-on:click="openCardPopup">등록하기</div>\n                                                    </template>\n                                                </template>\n                                                <template v-if="paymentType == 2">\n                                                    <div class="btn btn-lg btn-block btn-primary mypage-card-pay-button mt30" :class="{\'not-allowed-btn\' : !agree, \'mb50\' : isMobile}" v-on:click="openPinModalFor">{{buttonText}}</div>\n                                                </template>\n                                            </template>\n                                        </div>\n                                    </div>\n                                    \x3c!-- //결제정보 --\x3e\n                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <template v-if="type == 1">\n                        <div :class="{\'funding-page\' : type == 1}">\n                            <template v-if="(paymentType == 1 && paymentInfoConfirm) || paymentType == 2">\n                                <template v-if="deliveryCheck">\n                                    <div class="funding-page-title mt60" :class="{\'container\' : isMobile}">\n                                        <div class="funding-page-subs">배송정보 입력</div> \n                                        <div class="mypage-card-agree mt10">\n                                            <label for="pay_same_consent" class="checkbox-inline agree-content">\n                                                <input v-model="phoneCheck" type="checkbox" name="pay_same_consent" id="pay_same_consent"><span class ="label"></span><span class="label-text agree-text">회원 정보와 동일</span>\n                                            </label>\n                                        </div> \n                                        <div class="funding-page-area mt10">\n                                            <label for="sendName">받는 사람</label> \n                                            <input v-model="spsRsName" type="text" id="sendName" name="sendName" class="funding-page-area-input">\n                                        </div>\n\n                                        <div class="funding-page-area mt20">\n                                            <label for="sendMobileNo">받는 사람 번호</label> \n                                            <input v-model="spsRsMobileno" minlength="10" maxlength="11" type="tel" id="sendMobileNo" name="sendMobileNo" class="funding-page-area-input" autocomplete="new-password" pattern="[0-9]*" inputmode="numeric" ref="input">\n                                        </div>\n\n                                        <div class="funding-page-area mt20">\n                                            <label for="zipCode">우편번호</label> \n                                            <div class="funding-zip">\n                                                <input v-on:click="postOpen" v-model="address.postNum" type="tel" id="zipCode" name="zipCode" class="funding-page-area-input funding-page-area-zip" readonly="readonly">\n                                                <span v-on:click="postOpen" class="funding-area-zip-span"></span> \n                                            </div>\n                                        </div>\n\n                                        <div class="funding-page-area mt20">\n                                            <label for="sendAddress" class="">주소</label>\n                                            <input v-on:click="postOpen" v-model="address.address1" type="text" name="sendAddress" class="funding-page-area-input" readonly="readonly" placeholder="주소를 검색해주세요.">\n                                            <input v-model="spsAddr2" type="text" name="sendAddress" class="funding-page-area-input mt10" placeholder="상세 주소를 입력해주세요.">\n                                        </div>\n\n                                        <div class="mypage-card-agree mt10">\n                                            <label for="delivery_post_check" class="checkbox-inline agree-content">\n                                                <input v-model="myAddressSave" type="checkbox" name="delivery_post_check" id="delivery_post_check"><span class="label"></span><span class="label-text agree-text">내 배송지 저장</span>\n                                            </label> \n                                        </div>\n\n                                        <div class="funding-page-area mt10">\n                                            <label for="delivery_person">진행자에게 요청사항(선택사항)</label> \n                                            <textarea v-model="spsMiscinfo" id="delivery_person" class="funding-page-area-input" rows="3" cols="50"></textarea>\n                                        </div>\n                                    </div>\n                                </template>\n                                \x3c!-- //배송정보 입력 --\x3e\n\n                                \x3c!-- 정보동의 --\x3e\n                                <div class="mypage-card-agree mt30" :class="{\'container\' : isMobile}">\n                                    <label for="pay_info_consent" class="agree-title">\n                                        <div class="agree-text">정보동의</div>\n                                    </label> \n                                    <div>\n                                        <label for="pay_info_consent" class="checkbox-inline agree-content">\n                                            <input type="checkbox" name="pay_info_consent" id="pay_info_consent" v-model="agree"><span class="label"></span><span class="label-text agree-text">결제에 필요한 정보 제공에 동의합니다.</span>\n                                        </label>\n                                        <span class="label-text agree-text agree-popup" v-on:click="policy(1)">(보기)</span>\n                                    </div>\n                                     <div>\n                                        <label for="pay_reward_consent" class="checkbox-inline agree-content">\n                                            <input type="checkbox" name="pay_reward_consent" id="pay_reward_consent" v-model="agree2"><span class="label"></span><span class="label-text agree-text">리워드 제공에 필요한 정보제공에 동의합니다.</span>\n                                        </label>\n                                        <span class="label-text agree-text agree-popup" v-on:click="policy(2)">(보기)</span>\n                                    </div>\n                                </div>\n                                \x3c!-- //정보동의 --\x3e\n                                \n                                <div :class="{\'container\' : isMobile}">\n                                    <div class="btn btn-lg btn-primary mypage-card-pay-button mt30 not-pop" v-on:click="openPinModalFor">결제 예약 완료</div>\n                                </div>\n                            </template>\n                        </div>\n                    </template>\n\n                    \x3c!-- 카드정보 입력 팝업 --\x3e\n                    <div id="cardModal" class="payment-modal modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">\n                        <div class="modal-dialog" role="document">\n                            <div class="modal-content payment-content">\n                                <div class="modal-header">\n                                    <div class="payment-title">간편결제 카드{{cardPopupTitle}}</div> \n                                    <div class="close-button">\n                                        <div class="icon icon-close" v-on:click="cardModalHide"></div>\n                                    </div>\n                                </div>\n                                <div class="modal-body">\n                                    <div class="modal-body-content">\n                                        <p class="noti-word1 mt0 mb15">리워드 결제에 사용할 카드를 등록하세요.</p>\n                                        \x3c!-- 카드정보 --\x3e\n                                        <simple-card-info :card-info="simple" :refresh-confirm="refreshConfirm" v-on:set-refresh-confirm="setRefreshConfirm"></simple-card-info>\n                                        \x3c!-- //카드정보 --\x3e\n                                        <p class="noti-word2 mb30">* 크라우디는 카드번호를 저장하지 않고, 카드사에서 제공하는 암호화된 정보만을 저장합니다.</p>\n                                        <a class="mb100 btn btn-lg btn-block btn-primary" :class="{\'not-allowed-btn\' : !cardInfoConfirm}" v-on:click="keepPaymentInfo">카드 {{cardPopupTitle}}</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- //카드정보 입력 팝업 --\x3e\n\n                    \x3c!-- 핀번호 입력 팝업 --\x3e\n                    <pin-modal :type="type" :pin-type="pinType" :pin-step="pinStep" :pin-reset="pinReset" v-on:save-payment-info="savePaymentInfo" v-on:change-payment-info="changePaymentInfo" v-on:pay-reserve-finish="payReserveFinish" v-on:reset-pin="resetPin"></pin-modal>\n                    \x3c!-- //핀번호 입력 팝업 --\x3e\n\n                    \x3c!-- 결제사 정보 제공 약관 --\x3e\n                    <div class="modal fade modal-primary" id="privacyCardPopup" role="dialog" tabindex="-1">\n                        <div class="modal-dialog">\n                            <div class="modal-content">\n                                <div class="modal-header">\n                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                                </div>\n                                <div class="modal-body">\n                                    <h4 class="blue-800 text-center mb20">정보 제공 약관 보기</h4>\n                                    <ol>\n                                        <li>1. 귀하가 신청하신 신용카드 정기과금 결제는 나이스정보통신(주)에서 제공하는 서비스로, 귀하의 신용카드 결제내역에는 이용가맹점이 NICE로 표기됩니다. 또한, 나이스정보통신㈜는 정기과금 결제대행만 제공하므로, 정기과금 결제신청 및 해지 등 모든 업무는 해당 인터넷 상점을 통해 직접 요청하셔야 합니다.</li>\n                                        <li>2. 나이스정보통신㈜는 귀하의 본 신청과 관련한 거래내역을 e-mail로 통보 드리며, 당사 홈페이지 (<a href="https://www.nicepay.co.kr" target="_blank">https://home.nicepay.co.kr</a>)에서도 조회서비스를 제공합니다.</li>\n                                        <li>3. 나이스정보통신㈜는 조회 등의 기본 서비스제공을 위해 필요한 최소 정보(성명, 이메일)만을 보관하고 있습니다.</li>\n                                        <li>4. 회사는 리워드 제공 및 리워드 제공을 위해 필요한 행위를 하는 데에 있어 필요한 개인 정보를 회사가 제공하는 ‘개인정보 수집 및 이용 동의서’에 대한 확인 및 동의를 참여자로부터 받아 진행자에게 제공합니다. (CROWDY 이용약관(리워드) 20조)</li>\n                                    </ol>\n                                </div>\n                                <div class="modal-footer">\n                                    <div class="row row-mobile-n">\n                                        <a class="modalBlueBtn" data-dismiss="modal">확인</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- //결제사 정보 제공 약관 --\x3e\n\n                    \x3c!-- 결제사 정보 제공 약관 --\x3e\n                    <div class="modal fade modal-primary" id="privacyDataPopup" role="dialog" tabindex="-1">\n                        <div class="modal-dialog">\n                            <div class="modal-content">\n                                <div class="modal-header">\n                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                                </div>\n                                <div class="modal-body">\n                                    <h4 class="blue-800 text-center mb20">제공 정보</h4>\n                                    <ol>\n                                        <li>대상 - 프로젝트 참여자</li>\n                                        <li>제공받는 자 - 프로젝트 진행자</li>\n                                        <li>제공 목적 - 리워드 정보 확인 및 배송, 프로젝트와 관련된 공지, 민원처리</li>\n                                        <li>제공 정보 - 참여자 이름, 휴대폰 번호, ID(이메일), 리워드 정보, 배송지 주소(수취인이 다를 경우 수취인의 정보), 수취인의 개인통과고유부호</li>\n                                        <li>보유 및 이용기간 - 재화 또는 서비스의 제공 목적이 달성된 후 파기(단, 관계법령에 정해진 규정에 따라 법정기간동안 보관) / 진행자는 어떠한 경우에도 참여자의 정보를 마케팅 또는 프로모션 목적으로 활용할 수 없음</li>\n                                        <a href="https://www.ycrowdy.com/crowdy/term?menu=4" class="crowdy-color-blue" target="_blank"><li>▶ 개인정보처리방침 바로가기</li></a>\n                                    </ol>\n                                </div>\n                                <div class="modal-footer">\n                                    <div class="row row-mobile-n">\n                                        <a class="modalBlueBtn" data-dismiss="modal">확인</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- //결제사 정보 제공 약관 --\x3e\n                </div>\n            ',
                        props: ["type", "payNowConfirm", "spsIdx", "spsTotAmount", "deliveryCheck", "saveData"],
                        data: function() {
                            return {
                                paymentInfo: {},
                                paymentInfoConfirm: !1,
                                paymentType: 1,
                                popupCheck: !1,
                                agree: !1,
                                agree2: !1,
                                simpleAgree: !1,
                                simple: {
                                    cardNoPart: [],
                                    cardNo: "",
                                    cardPw: "",
                                    expMonth: "",
                                    expYear: "",
                                    idNo: "",
                                    memCode: userInfo.memCode
                                },
                                direct: {
                                    cardNoPart: [],
                                    cardNo: "",
                                    cardPw: "",
                                    expMonth: "",
                                    expYear: "",
                                    idNo: "",
                                    memCode: userInfo.memCode
                                },
                                pinType: 1,
                                pinStep: 1,
                                fundingPageConfirm: !0,
                                refreshConfirm: !1,
                                cardPopupTitle: "등록",
                                buttonText: "결제카드 변경",
                                spsRsMobileno: "",
                                spsRsName: "",
                                spsAddr2: "",
                                spsMbMobileno: "",
                                spsMiscinfo: "",
                                myAddressSave: "",
                                certiCheck: 1,
                                phoneCheck: !1,
                                address: {
                                    postNum: "",
                                    address1: ""
                                },
                                isMobile: !1,
                                pinReset: !1
                            }
                        },
                        created: function() {
                            this.getPaymentInfo(), $(window).width() < 768 && (this.isMobile = !0, 1 == this.type ? ($("div.container").css("padding", "0"), this.fundingPageConfirm = !1) : 3 == this.type && this.$nextTick(function() {
                                $("#my-page > div > div.common_sub_layout > div.container").css("background-color", "#f7f8fa")
                            })), 2 == this.type ? this.payNowConfirm ? this.buttonText = "즉시결제" : this.buttonText = "결제카드 변경" : 1 == this.type && (this.buttonText = "결제예약")
                        },
                        computed: {
                            postNum: function() {
                                return this.address.postNum
                            },
                            spsAddr1: function() {
                                return this.address.address1
                            },
                            cardInfoConfirm: function() {
                                var e = {};
                                return e = 1 == this.paymentType ? _.clone(this.simple) : _.clone(this.direct), e.cardNo = e.cardNoPart.join(""), !(e.cardNo.length < 15) && (!(e.cardPw.length < 2) && (!(e.expMonth.length < 2 || e.expYear.length < 2) && !(e.idNo.length < 6)))
                            }
                        },
                        components: {
                            memberCerti: n(20).default.component(),
                            simpleCardInfo: n(7).default.component(),
                            directCardInfo: n(7).default.component(),
                            pinModal: n(21).default.component()
                        },
                        watch: {
                            paymentType: function() {
                                this.agree = !1, this.agree2 = !1, this.simpleAgree = !1, this.setPaymentInfo()
                            },
                            paymentInfoConfirm: function(e) {
                                this.changeCardPopupTitle(e), this.setPaymentInfo()
                            },
                            phoneCheck: function() {
                                this.sameInfo()
                            },
                            payNowConfirm: function(e) {
                                2 == this.type && (this.buttonText = e ? "즉시결제" : "결제카드 변경")
                            }
                        },
                        methods: {
                            postOpen: function() {
                                post.open(this)
                            },
                            changeCardPopupTitle: function(e) {
                                this.cardPopupTitle = e ? "변경" : "등록"
                            },
                            paymentTypeChange: function(e) {
                                this.paymentType = e
                            },
                            getPaymentInfo: function() {
                                var e = this;
                                $(".page-loader-more").fadeIn(""), axios.post("/data/reward/payment/info", {
                                    memCode: userInfo.memCode
                                }).then(function(t) {
                                    if ($(".page-loader-more").fadeOut(""), "0000" != t.data.rCode) return void noti.open(t.data.rMsg);
                                    var n = t.data.rData;
                                    n.payIdxCount > 0 ? (n.memCode = userInfo.memCode, e.paymentInfo = n, e.paymentInfoConfirm = !0) : e.paymentInfoConfirm = !1, e.agree = !1, e.agree2 = !1, e.changeCardPopupTitle(e.paymentInfoConfirm), 1 == e.type && e.setPaymentInfo()
                                })
                            },
                            savePaymentInfo: function(e) {
                                var t = this;
                                $(".page-loader-more").fadeIn("");
                                var n = "";
                                n = 1 == this.paymentType ? this.simple.cardNoPart[3] : this.direct.cardNoPart[3];
                                var a = {
                                    payPwd: e,
                                    memCode: userInfo.memCode,
                                    payNum: n
                                };
                                axios.post("/data/reward/payment/save", a).then(function(n) {
                                    if ($(".page-loader-more").fadeOut(""), "0000" == n.data.rCode)
                                        if ($("#pinModal").modal("hide"), 2 == t.type && 2 == t.paymentType && t.simpleAgree) t.changePaymentInfo(e);
                                        else if (1 == t.type && (1 == t.paymentType && t.paymentInfoConfirm || 2 == t.paymentType)) t.payReserveFinish(e);
                                    else {
                                        var a = "카드 정보가 정상적으로 등록되었습니다.";
                                        t.paymentInfoConfirm && (a = "카드 정보가 정상적으로 변경되었습니다."), 2 != t.type && ($("html").scrollTop($(".mypage-card").position().top), $("#cardModal").modal("hide")), t.resetData(), noti.open(a, t.getPaymentInfo)
                                    } else {
                                        if (!(n.data.rCode = "4000")) return void noti.open(n.data.rMsg);
                                        noti.open(n.data.rMsg), $("#pinModal").modal("hide")
                                    }
                                })
                            },
                            policy: function(e) {
                                1 == e ? $("#privacyCardPopup").modal("show") : $("#privacyDataPopup").modal("show")
                            },
                            openCardPopup: function() {
                                2 == this.type ? this.popupCheck ? (this.pinType = 1, this.pinStep = 1, this.keepPaymentInfo()) : this.popupCheck = !0 : (this.simple = _.clone({
                                    cardNoPart: [],
                                    cardNo: "",
                                    cardPw: "",
                                    expMonth: "",
                                    expYear: "",
                                    idNo: "",
                                    memCode: userInfo.memCode
                                }), this.refreshConfirm = !0, this.pinType = 1, this.pinStep = 1, $("#cardModal").modal("show"))
                            },
                            keepPaymentInfo: function() {
                                var e = this,
                                    t = {};
                                return t = 1 == this.paymentType ? _.clone(this.simple) : _.clone(this.direct), t.cardNo = t.cardNoPart.join(""), t.cardNo.length < 15 ? void noti.open("카드 번호를 입력해주세요.") : t.cardPw.length < 2 ? void noti.open("카드 비밀번호를 입력해주세요.") : t.expMonth.length < 2 || t.expYear.length < 2 ? void noti.open("유효기간을 입력해주세요.") : t.idNo.length < 6 ? void noti.open("생년월일 또는 사업자등록번호를 입력해주세요.") : ($(".page-loader-more").fadeIn(""), void axios.post("/data/reward/payment/keep", t).then(function(t) {
                                    if ($(".page-loader-more").fadeOut(""), "0000" == t.data.rCode) {
                                        var n = t.data.rData;
                                        if ("F100" != n.resultCode) {
                                            var a = n.resultMsg;
                                            "F112" == n.resultCode ? noti.open("유효하지 않은 카드번호를 입력하셨습니다. <br />카드 번호를 다시 확인해주세요.") : "F113" == n.resultCode ? "비밀번호틀림" == a ? noti.open("카드 비밀번호를 다시 입력해주세요. <br /><br />연속해서 틀릴 경우, <br />카드사에 따라 결제가 되지 않을 수 있습니다.") : "비밀번호 회수초과" == a ? noti.open("카드 비밀번호 오류 횟수가 초과되었습니다. <br />다른 결제 카드(체크, 신용)를 이용해주세요.") : "유효기간오류" == a ? noti.open("잘못된 유효기간을 입력하셨습니다. <br />유효기간을 다시 확인해주세요.") : "주민OR사업자등록번호오류" == a ? noti.open("잘못된 생년월일 또는 사업자등록번호를 입력하셨습니다. <br />다시 확인해주세요.") : noti.open("카드정보를 다시 확인해주세요.<br />" + a) : "3021" == n.resultCode && "유효기간오류" == a ? noti.open("잘못된 유효기간을 입력하셨습니다. <br />유효기간을 다시 확인해주세요.") : noti.open("카드정보를 다시 확인해주세요.<br />" + a)
                                        } else 2 != e.type || 2 != e.paymentType || e.simpleAgree ? 1 != e.type || 2 != e.paymentType || e.simpleAgree ? (e.pinType = 1, e.pinStep = 1, e.openPinModal()) : ($("#cardModal").modal("hide"), e.payReserveFinish()) : ($("#cardModal").modal("hide"), e.changePaymentInfo())
                                    } else noti.open(t.data.rMsg)
                                }))
                            },
                            changeConfirm: function() {
                                this.dataConfirm = !0
                            },
                            openPinModal: function() {
                                this.pinReset && (this.pinReset = !1), $("#pinModal").modal("show")
                            },
                            setPaymentInfo: function() {
                                var e = {
                                    paymentType: this.paymentType
                                };
                                1 == this.paymentType ? e.paymentInfoConfirm = this.paymentInfoConfirm : e.direct = this.direct, this.$emit("set-payment-info", e)
                            },
                            setMobileNo: function(e) {
                                this.certiCheck = e.certiCheck, this.spsMbMobileno = e.mobileNo
                            },
                            deleteCardConfirm: function() {
                                var e = this;
                                noti.open("카드 정보를 삭제하시겠습니까?", e.deleteCard, !0)
                            },
                            deleteCard: function(e) {
                                var t = this;
                                $(".modal-backdrop").remove(), $(".page-loader-more").fadeIn(""), axios.post("/data/reward/payment/delete", this.paymentInfo).then(function(n) {
                                    if ($(".page-loader-more").fadeOut(""), "0000" != n.data.rCode) return void noti.open(n.data.rMsg);
                                    void 0 != e ? t.savePaymentInfo(e) : qst.open("카드 정보가 삭제되었습니다.", function() {
                                        t.getPaymentInfo()
                                    })
                                })
                            },
                            changeCardConfirm: function() {
                                var e = this;
                                noti.open("카드를 변경하시겠습니까?", e.openCardPopup, !0)
                            },
                            openPinModalFor: function() {
                                if (this.deliveryCheck) {
                                    if (_.size(this.spsRsName) < 1) return void noti.open("받는 사람을 입력해 주세요.");
                                    if (_.size(this.spsRsMobileno) < 1) return void noti.open("받는 사람의 휴대폰 번호를 입력해 주세요.");
                                    if (_.size(this.address.postNum) < 1 || _.size(this.address.address1) < 1) return void noti.open("주소를 입력해 주세요.");
                                    if (_.size(this.spsAddr2) < 1) return void noti.open("상세 주소를 입력해 주세요.")
                                }
                                if (!this.agree) return void noti.open("결제에 필요한 정보 제공에 동의해야 " + this.buttonText + " 진행이 가능합니다.");
                                if (1 == this.type && !this.agree2) return void noti.open("리워드 제공에 필요한 정보 제공에 동의해야 " + this.buttonText + " 진행이 가능합니다.");
                                if (1 == this.type && 3 != this.certiCheck) return void noti.open("휴대폰번호를 인증해주세요.");
                                if (1 == this.paymentType) {
                                    if (!this.paymentInfoConfirm) return void noti.open("간편결제 카드를 먼저 등록해주세요.");
                                    if (3 == this.type) noti.open("현재 등록된 카드 정보를 삭제하고 새로운 카드 정보를 등록하시겠습니까?", this.setPinType, !0);
                                    else {
                                        if (1 == this.type && "Y" == this.saveData.sponsorData.cpAdultType && this.isChild(this.paymentInfo.payInfo)) return void noti.open("이 프로젝트는 만 19세 이상의 성인만<br /> 참여하실 수 있습니다.");
                                        this.setPinType()
                                    }
                                } else {
                                    if (1 == this.type && "Y" == this.saveData.sponsorData.cpAdultType && this.isChild(this.direct.idNo)) return void noti.open("이 프로젝트는 만 19세 이상의 성인만<br /> 참여하실 수 있습니다.");
                                    this.keepPaymentInfo()
                                }
                            },
                            isChild: function(e) {
                                if (6 == _.size(e)) {
                                    var t = 1 * e.slice(0, 2),
                                        n = e.slice(-4);
                                    return t < 21 && t > 1 || 1 == t && n > moment().format("MMDD")
                                }
                                return !1
                            },
                            setPinType: function() {
                                this.pinType = 2, this.pinStep = 1, this.openPinModal()
                            },
                            changePaymentInfo: function(e) {
                                var t = this,
                                    n = "N",
                                    a = "결제카드 변경이";
                                this.payNowConfirm && (n = "Y", a = "결제가");
                                var i = "",
                                    s = "N";
                                this.simpleAgree && (s = "Y", i = "간편결제 카드 등록 및 ");
                                var o = "";
                                2 == this.paymentType && (o = this.direct.cardNoPart[3]);
                                var r = {
                                    paymentType: this.paymentType,
                                    memCode: userInfo.memCode,
                                    paymentInfo: {
                                        payPwd: e
                                    },
                                    payConfirm: n,
                                    spsIdx: this.spsIdx,
                                    paymentSaveConfirm: s,
                                    payNum: o,
                                    spsTotAmount: this.spsTotAmount,
                                    memName: userInfo.name
                                };
                                $(".page-loader-more").fadeIn(""), axios.post("/data/reward/funding/change/payment", r).then(function(e) {
                                    $(".page-loader-more").fadeOut(""), "0000" == e.data.rCode ? (noti.open(i + a + " 정상적으로 이루어졌습니다."), $("#pinModal").modal("hide"), t.$emit("reload-funding-list")) : "4004" == e.data.rCode ? ($("#pinModal").modal("hide"), noti.open(e.data.rMsg), t.getPaymentInfo()) : noti.open(e.data.rMsg)
                                })
                            },
                            cardModalHide: function() {
                                $("#cardModal").modal("hide")
                            },
                            setRefreshConfirm: function(e) {
                                this.refreshConfirm = e
                            },
                            payReserveFinish: function(e) {
                                if (3 != this.certiCheck) return void noti.open("휴대폰번호를 인증해주세요.");
                                var t = "N";
                                this.simpleAgree && (t = "Y");
                                var n = "";
                                2 == this.paymentType && (n = this.direct.cardNoPart[3]);
                                var a = {
                                    paymentType: this.paymentType,
                                    memCode: userInfo.memCode,
                                    paymentInfo: {
                                        payPwd: e
                                    },
                                    paymentSaveConfirm: t,
                                    payNum: n,
                                    myAddressSave: this.myAddressSave,
                                    spsPostnum: this.postNum,
                                    spsAddr1: this.spsAddr1,
                                    spsAddr2: this.spsAddr2,
                                    payPwd: e,
                                    spsMbMobileno: this.spsMbMobileno,
                                    spsRsMobileno: this.spsRsMobileno,
                                    spsMiscinfo: this.spsMiscinfo,
                                    spsRsName: this.spsRsName
                                };
                                this.payConfirm(a)
                            },
                            payConfirm: function(e) {
                                var t = this;
                                e.spsAmount = this.saveData.sponsorData.spsAmount, e.spsTotAmount = this.saveData.sponsorData.spsTotAmount, e.benefitList = this.saveData.sponsorData.benefitList, e.cpCode = this.saveData.sponsorData.cpCode, e.payDiv = "1", $(".page-loader-more").fadeIn(""), axios.post("/set/reward/funding/confirm", e).then(function(e) {
                                    var n = e.data;
                                    $(".page-loader-more").fadeOut(""), "0000" == n.rCode ? ($("#pinModal").modal("hide"), t.$emit("pay-reserve-finish", n)) : "3000" == n.rCode ? noti.open(n.rMsg, function() {
                                        window.open("/r/" + t.fundingData.cpAliasUrl, "_self")
                                    }) : "4004" == n.rCode ? (noti.open(n.rMsg), $("#pinModal").modal("hide"), $("html").scrollTop($(".mypage-card").position().top), t.getPaymentInfo()) : noti.open(n.rMsg)
                                })
                            },
                            sameInfo: function() {
                                var e = this;
                                this.phoneCheck ? axios.post("/data/member/info", {
                                    memCode: userInfo.memCode
                                }).then(function(t) {
                                    var n = t.data.rData;
                                    "" != e.spsMbMobileno && (e.spsRsMobileno = e.spsMbMobileno), e.spsRsName = userInfo.name, e.address.postNum = "NULL" == n.memSpsPostNum ? "" : n.memSpsPostNum, e.address.address1 = "NULL" == n.memSpsAddr1 ? "" : n.memSpsAddr1, e.spsAddr2 = "NULL" == n.memSpsAddr2 ? "" : n.memSpsAddr2
                                }) : (e.spsRsMobileno = "", e.spsRsName = "", e.address.postNum = "", e.address.address1 = "", e.spsAddr2 = "")
                            },
                            resetData: function() {
                                var e = {
                                    cardNoPart: [],
                                    cardNo: "",
                                    cardPw: "",
                                    expMonth: "",
                                    expYear: "",
                                    idNo: "",
                                    memCode: userInfo.memCode
                                };
                                this.simple = _.clone(e), this.direct = _.clone(e), this.paymentType = 1, this.popupCheck = !1, this.agree = !1, this.agree2 = !1, this.simpleAgree = !1
                            },
                            resetPin: function(e, t) {
                                e && (this.pinReset = !0), this.pinStep = t
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n\t\t\t\t<div>\n                    \x3c!-- 비밀번호 표기란 --\x3e\n                    <div class="pin-num">\n                        <div class="pin-num-box" v-for="(item, index) in check">\n                            <template v-if="index < pinNum.length">*</template>\n                        </div>\n                    </div>\n\n                    \x3c!-- 비번입력 --\x3e\n                    <div class="pin-keyboard">\n                        <div class="pin-keyword-background">\n                            <div class="pin-keyboard-boxs">\n                                <div class="pin-keyboard-box" v-for="(item, index) in boxData.slice(0, 4)" v-html="item" v-on:click="clickBox(item)"></div>\n                                <div class="pin-keyboard-box pin-keyboard-gray" v-on:click="deleteBox">\n                                    <div class="icon icon-pin-backward"></div>\n                                </div>\n                            </div>\n                            <div class="pin-keyboard-boxs">\n                                <div class="pin-keyboard-box" v-for="(item, index) in boxData.slice(4, 8)" v-html="item" v-on:click="clickBox(item)"></div>\n                                <div class="pin-keyboard-box pin-keyboard-gray pin-refresh" v-on:click="refreshPinNo">재배열</div>\n                            </div>\n                            <div class="pin-keyboard-boxs">\n                                <div class="pin-keyboard-box" v-for="(item, index) in boxData.slice(8, 12)" v-html="item" v-on:click="clickBox(item)"></div>\n                                <div class="pin-keyboard-box pin-keyboard-gray pin-hide"></div>\n                            </div>\n                        </div>\n                    </div>\x3c!--arrow-left--\x3e\n                          \n                    \x3c!-- //핀번호 입력 내용 --\x3e\n\t\t\t\t</div>\n\t\t\t',
                        props: ["pinReset"],
                        data: function() {
                            return {
                                check: [!1, !1, !1, !1, !1, !1],
                                boxData: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "", ""],
                                pinNum: []
                            }
                        },
                        created: function() {
                            this.pinNum = _.clone([]), this.refreshPinNo()
                        },
                        watch: {
                            pinNum: function(e) {
                                6 == e.length && (this.$emit("pin-done", CryptoJS.SHA256(_.join(e)).toString()), this.pinNum = _.clone([]))
                            },
                            pinReset: function(e) {
                                e && (this.pinNum = _.clone([]))
                            }
                        },
                        methods: {
                            refreshPinNo: function() {
                                this.boxData = _.shuffle(this.boxData)
                            },
                            clickBox: function(e) {
                                "" != e && this.pinNum.length < 7 && this.pinNum.push(e)
                            },
                            deleteBox: function() {
                                this.pinNum = _.dropRight(this.pinNum)
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div>\n                <div class="mif-list" v-for="item in fundedList">\n                    <div class="mif-frame" v-on:click="detail(item.pjAliasUrl)" style="cursor: pointer;">\n                        <div class="media">\n                            <div class="media-left media-middle">\n                                <img :src="\'//\' + item.pjCardImg" class="media-object" />\n                            </div>\n                            <div class="media-body media-middle">\n                                <div class="pn_list_frame">\n                                    <div class="pn_summury">{{ ivsStatusCode(item) }}</div>\n                                    <div class="pn_subject">{{ item.pjTitle }}</div>\n                                    <div class="pn_time">\n                                        <span>{{ item.achieveMent }}%</span>\n                                        <span v-if="(parseInt(item.ivsAssQty) > 0)">청약일 {{ item.ivsResPayDt + " " + item.ivsResPayTm }}</span>\n                                        <template>\n                                            <span class="xs-mt5" v-if="item.pjEndStatus == \'1\'">남은기간 {{duration(item)}}일</span>\n                                            <span class="xs-mt5 red-800" v-else>종료</span>\n                                        </template>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    \x3c!-- 증권구분 --\x3e\n                    <div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>증권구분</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-10 text-label">\n                            <span>{{ projectSecureCode(item.pjSecurCode) }}</span>\n                        </div>\n                    </div>\n                    \x3c!-- //증권구분 --\x3e\n\n                    \x3c!-- 투자금액 --\x3e\n                    <div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>투자금액</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-10 text-label">\n                            <span>{{ parseInt((item.ivsAssignQty) * (item.pjContStock)).toLocaleString() }}원</span>\n                        </div>\n                    </div>\n                    \x3c!-- //투자금액 --\x3e\n\n                    \x3c!-- 구좌수 --\x3e\n                    <div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span v-if="item.pjStockType == \'1\'">주식수</span>\n                            <span v-else>구좌수</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-10 text-label">\n                            <span v-if="item.pjStockType == \'1\'">{{ parseInt(item.ivsAssignQty).toLocaleString() }}주</span>\n                            <span v-else>{{ parseInt(item.ivsAssignQty).toLocaleString() }}구좌</span>\n                        </div>\n                    </div>\n                    \x3c!-- //구좌수 --\x3e\n\n                    \x3c!-- 주식배정일  배정 완료된 이후에는 배정 주식수(배정 구좌수) 로 변경 --\x3e\n                    <div class="row not-space row-label" v-if="item.ivsStatus != \'IVSS03\'">\n                        <div class="col-xs-3 col-sm-2">\n                            <span v-if="item.ivsStatus != \'IVSS02\'">배정일</span>\n                            <span v-if="item.pjStockType == \'1\' && item.ivsStatus == \'IVSS02\'">배정 주식수</span>\n                            <span v-if="item.pjStockType == \'2\' && item.ivsStatus == \'IVSS02\'">배정 구좌수</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-10 text-label">\n                            <span v-if="item.ivsStatus != \'IVSS02\'">{{ item.pjPublishSc }}</span>\n                            <span v-if="item.pjStockType == \'1\' && item.ivsStatus == \'IVSS02\'">{{parseInt(item.ivsAssQty).toLocaleString()}}주</span>\n                            <span v-if="item.pjStockType == \'2\' && item.ivsStatus == \'IVSS02\'">{{parseInt(item.ivsAssQty).toLocaleString()}}구좌</span>\n                        </div>\n                    </div>\n                    \x3c!-- //주식배정일 --\x3e\n\n                    \x3c!-- 증권입고일 --\x3e\n                    <div class="row not-space row-label" v-if="item.ivsStatus != \'IVSS03\'">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>증권입고일</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-8 text-label">\n                            <span>\n                                <strong class="blue-800">{{ item.pjWearingData }}</strong>\n                                <div class="xs-text-right hidden-sm hidden-md hidden-lg xs-mt5 xs-mb10"></div>\n                            </span>\n                        </div>\n                        <div class="hidden-xs col-xs-4 col-xs-offset-4 col-sm-2 col-sm-offset-0 text-right">\n                            <span class="pr0"><a class="btn btn-block btn-sm btn-default-outline" v-if="item.pjEndStatus == \'1\' && (item.ivsStatus == \'IVSS00\' || item.ivsStatus == \'IVSS06\')" v-on:click="investCancel(item)">청약 취소</a></span>\n                        </div>\n                    </div>\n                    \x3c!-- //증권입고일 --\x3e\n\n                    <div class="row row-mobile-n hidden-sm hidden-md hidden-lg mt10 mb10">\n                        <div class="col-xs-8"></div>\n                        <div class="col-xs-4">\n                            <a class="btn btn-block btn-sm btn-primary-outline" v-if="item.pjEndStatus == \'1\' && (item.ivsStatus == \'IVSS00\' || item.ivsStatus == \'IVSS06\')" v-on:click="investCancel(item)">청약 취소</a>\n                        </div>\n                    </div>                    \n                    </div>\n                    \x3c!-- 페이징 --\x3e\n                    <nav class="text-center mt30 mb20">\n                        <paginate\n                            :page-count="pageCount"\n                            :class="\'pagination\'"\n                            :click-handler="nextPage"\n                            :force-page="forcePage"\n                            >\n                        </paginate>\n                    </nav>\n                    \x3c!-- //페이징 --\x3e\n\n                \x3c!-- 정말 취소하시겠습니까? --\x3e\n                <div id="cancelModal" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                <div>"{{title}}" 청약을 취소합니다.</div>\n                                <div class="mt5">취소하시겠습니까?</div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="modalBlueBtn" v-on:click="cancelModalNo">아니오</a>\n                                    <a class="ml30 pointerCursor" v-on:click="cancelModalConfirm()">예</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //정말 취소하시겠습니까? --\x3e\n\n                \x3c!-- 청약외시간 안내 --\x3e\n               \x3c!--  <div id="OutsideTime" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog" role="document">\n                        <form class="modal-content form-horizontal" action="javascript:void(0)">\n                            <div class="modal-header">\n                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                            </div>\n                            <div class="modal-body text-center">\n                                <div class="rewards-modal-head rewards-modal-head-big">\n                                    <h3 class="sm">실시간 청약 & 청약취소 가능 시간</h3>\n                                    <h5 class="webfont2">영업일 AM 5:00 - PM 11:00</h5>\n                                </div>\n\n                                <div class="mt20 mb30">\n                                    <button type="button" class="btn btn-lg btn-primary-outline" data-dismiss="modal">청약알림신청</button>\n                                </div>\n\n                                <div class="mb30">\n                                    알림 신청을 하시면 청약 가능한 시간에<br />\n                                    알림톡으로 알려드립니다.\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div> --\x3e\n                \x3c!-- //청약외시간 안내 --\x3e\n\n            </div>\n            ',
                        props: ["code"],
                        data: function() {
                            return {
                                fundedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                title: "",
                                search: {
                                    memCode: userInfo.memCode,
                                    paging: {
                                        page: "1",
                                        count: "4"
                                    }
                                },
                                fundCancelData: {
                                    pjCode: "",
                                    memCode: ""
                                },
                                cancelRequest: {
                                    pjInvestorIdx: "",
                                    memCode: userInfo.memCode,
                                    pjCode: "",
                                    vsCancelType: "1"
                                }
                            }
                        },
                        created: function() {
                            this.load()
                        },
                        components: {
                            paginate: VuejsPaginate
                        },
                        methods: {
                            load: function() {
                                var e = this;
                                axios.post("/data/mypage/funded/invest", e.search).then(function(t) {
                                    var n = parseInt(t.data.rData.count % e.search.paging.count),
                                        a = 0;
                                    n > 0 && a++, e.pageCount = parseInt(t.data.rData.count / e.search.paging.count) + a, e.fundedList = t.data.rData.data
                                })
                            },
                            nextPage: function(e) {
                                this.forcePage = e - 1, this.search.paging.page = e, this.load()
                            },
                            projectSecureCode: function(e) {
                                var t = "";
                                return "SEC001" == e ? t = "주식형" : "SEC002" == e ? t = "채권형" : "SEC003" == e ? t = "CB형" : "SEC004" == e ? t = "BW형" : "SEC005" == e && (t = "투자계약형"), t
                            },
                            ivsStatusCode: function(e) {
                                var t = "";
                                return "IVSS00" == e.ivsStatus ? t = "청약완료" : "IVSS01" == e.ivsStatus ? t = "배정대기" : "IVSS02" == e.ivsStatus && parseInt(e.ivsAssignQty) == parseInt(e.ivsAssQty) ? t = "배정완료" : "IVSS02" == e.ivsStatus && parseInt(e.ivsAssignQty) != parseInt(e.ivsAssQty) ? t = "부분배정완료" : "IVSS03" == e.ivsStatus ? t = "청약취소" : "IVSS04" == e.ivsStatus ? t = "배정탈락" : "IVSS05" == e.ivsStatus ? t = "목표달성실패" : "IVSS06" == e.ivsStatus && (t = "청약부분완료"), t
                            },
                            investCancel: function(e) {
                                this.title = e.pjTitle, this.cancelRequest.pjInvestorIdx = e.ivsIdx, this.cancelRequest.pjCode = e.pjCode, $("#cancelModal").modal("show")
                            },
                            cancelModalConfirm: function() {
                                var e = this;
                                $(".page-loader-more").fadeIn(""), axios.post("/data/invest/funding/pay-cancel", this.cancelRequest).then(function(t) {
                                    var n = t.data;
                                    if ($(".page-loader-more").fadeOut(""), $("#cancelModal").modal("hide"), "0000" != n.rCode) return void noti.open(n.rMsg);
                                    noti.open("청약이 성공적으로 취소되었습니다."), e.load()
                                })
                            },
                            cancelModalNo: function() {
                                $("#cancelModal").modal("hide")
                            },
                            detail: function(e) {
                                window.open("/i/" + e, "_self")
                            },
                            duration: function(e) {
                                return moment(e.pjEndDate).diff(moment().format("YYYY-MM-DD"), "days")
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div>\n                \x3c!-- Loop 결제완료 --\x3e\n                <div class="mif-list" v-for="item in fundedList">\n                    <div class="mif-frame" v-on:click="detail(item, $event)" style="cursor: pointer;" :style="item.cpAdultType == \'Y\' ? { \'padding\': \'13px 13px 0px 13px\' } : {}">\n                        <div class="media">\n                            <div class="media-left media-middle" style="float:left; padding-right:0px; width:110px; margin-top:4px;">\n                                <img v-if="item.cpAdultImgType == \'N\'" :src="\'//\' + item.cpCardImg + \'/ycrowdy/resize/!340x!226\'" style="width:100px; height:67px;" alt="..." />\n                                <img v-if="item.cpAdultImgType == \'Y\' && item.cpAdultType == \'Y\'" style="width:100px; height:67px;" src="//image-se.ycrowdy.com/crowdyCss/img/adult1.png/ycrowdy/resize/!340x!226" />\n                                <img v-if="item.cpAdultType == \'Y\'" class="adultNumImg" src="//image-se.ycrowdy.com/crowdyCss/img/adult2.png/ycrowdy/resize/!60x!40" />\n                            </div>\n                            <div class="media-body media-middle" style="padding-top:5px;">\n                                <div class="pn_list_frame" :style="item.cpAdultType == \'Y\' ? { \'padding-bottom\': \'13px\' } : {}">\n                                    <div class="pn_summury pn_delivery" style="margin-top:-5px; padding-top:6px !important;" :class="{\'red-800\' : item.spsStatus == 2}">\n                                        <span>{{ statusCheck(item.spsStatus, item.spsDeliveryStatus, item.cpEndStatus, item.payDiv) }}</span>\n                                        <button v-if="item.spsStatus == 1 && item.spsDeliveryStatus != \'\' && item.spsDeliveryStatus > 0" class="btn btn-xs btn-crowdy-default">배송 조회</button>\n                                    </div>\n                                    <div class="pn_subject">{{ item.cpTitle }}</div>\n                                    <div class="pn_time">\n                                        <span>{{ item.projectAchievement }}%&nbsp;&nbsp;<font style="color:#d1d1d1;">&#124;</font>&nbsp;&nbsp;</span>\n                                        <span>{{ item.paymentDate }} 결제일&nbsp;&nbsp;<font style="color:#d1d1d1;">&#124;</font>&nbsp;&nbsp;</span>\n                                        <span>{{ item.fundWdate }} 펀딩참여일</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="clearfix"></div>\n                        </div>\n                    </div>\n                    \n                    \x3c!-- 펀딩번호 --\x3e\n                    <div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>펀딩번호</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-10 text-label">\n                            <span>{{ item.spsIdx }}</span>\n                        </div>\n                    </div>\n                    \x3c!-- //펀딩번호 --\x3e\n\n                    \x3c!-- 선택한 리워드 --\x3e\n                    <div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>선택한 리워드</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-10 text-label" v-if="item.cbfTitle != null ">\n                            <span v-if="item.cbfTitle != \'\'">{{ item.cbfTitle }}</span>\n                            <span v-if="item.cbfTitle == \'\'">없음</span>\n                        </div>\n                    </div>\n                    \x3c!-- //선택한 리워드 --\x3e\n\n                    \x3c!-- 리워드 옵션 --\x3e\n                    <div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>리워드 옵션</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-10 text-label" v-if="item.cbfTitle != null ">\n                            <span v-if="item.options != \'\'">{{ item.options }}</span>\n                            <span v-if="item.options == \'\'">없음</span>\n                        </div>\n                    </div>\n                    \x3c!-- //리워드 옵션 --\x3e\n\n                    \x3c!-- 리워드 구매 수량 --\x3e\n                    <div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>구매 수량</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-10 text-label" v-if="item.cbfTitle != null ">\n                            <span>{{ item.sbfQty }}</span>\n                        </div>\n                    </div>\n                    \x3c!-- //리워드 구매 수량 --\x3e\n\n                    \x3c!-- 받는분/연락처 --\x3e\n                    <div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>받는분/연락처</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-10 text-label">\n                            <span> {{ item.spsRsName }}<small class="ml10">/ {{ item.spsRsMobileNo }} </small></span>\n                        </div>\n                    </div>\n                    \x3c!-- //받는분/연락처 --\x3e\n\n                    \x3c!-- 배송지 --\x3e\n                    <div class="row not-space row-label" v-if="item.cbfDevrAddrYn == \'Y\' && (item.spsDeliveryType == 1 || item.spsDeliveryType == null || item.spsDeliveryType == \'\')">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>배송지</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-8 text-label">\n                            <span>\n                                {{ item.spsAddr1 }} {{ item.spsAddr2 }}\n                            </span>\n                        </div>\n                        <div v-if="item.spsStatus == 0 && item.payDiv == \'1\'" class="hidden-xs col-xs-4 col-xs-offset-4 col-sm-2 col-sm-offset-0 text-right">\n                            <span class="pr0"><a class="btn btn-block btn-sm btn-primary-outline" v-on:click="deliveryModalOpen(item)">배송지 변경</a></span>\n                        </div>\n                    </div>\n                    \x3c!-- //배송지 --\x3e\n                    \x3c!-- 송장번호 --\x3e                    \n                    <div class="row not-space row-label" v-if="item.spsDeliveryType == 1">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>송장번호</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-10 text-label">\n                            <span><button type="button" class="underlineBtn pl0" v-on:click="showTracker(item)">{{item.spsDeliveryName | deliveryName(item.spsDeliveryCode, item.etcDeliveryName) + \' (\' + item.spsDeliveryNo + \')\'}}</button></span>\n                        </div>\n                    </div>\n\n                    \x3c!-- 지갑 주소  --\x3e\n                    <div class="row not-space row-label" v-if="item.cpType == \'1\'">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>지갑주소</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-8 text-label">\n                            <span v-if="item.wallet != \'\'" style="word-break: break-all;">\n                                {{ item.wallet }}\n                            </span>\n                            <span v-if="item.wallet == \'\'">\n                                지갑주소를 입력해주세요.\n                            </span>\n                        </div>\n                        <div class="col-xs-4 col-xs-offset-3 col-sm-2 col-sm-offset-0 text-right">\n                            <span class="pr0">\n                                <a class="btn btn-block btn-sm btn-primary-outline" href="/mypage/main?menu=5">\n                                    <template v-if="item.wallet != \'\'">\n                                        지갑주소 변경\n                                    </template>\n                                    <template v-if="item.wallet == \'\'">\n                                        지갑주소 입력\n                                    </template>\n                                </a>\n                            </span>\n                        </div>\n                    </div>\n                    \x3c!-- //지갑 주소 --\x3e\n\n                    \x3c!-- 결제수단 --\x3e\n                    <div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>결제수단</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-8 text-label">\n                            <span>{{ payType(item.payDiv, item.cardCompany) }}</span>\n                        </div>\n                        \x3c!-- <div v-if="item.spsStatus == 0 && (item.cpEndStatus == \'1\' || (item.cpEndStatus == \'2\' && checkChangeTime(item.cpEndDate))) && item.payDiv == \'1\'" class="col-xs-4 col-xs-offset-4 col-sm-2 col-sm-offset-0 text-right hidden-xs" --\x3e\n                        <div v-if="cardChangeConfirm(item)" class="col-xs-4 col-xs-offset-4 col-sm-2 col-sm-offset-0 text-right hidden-xs">\n                            <span class="pr0"><a class="btn btn-block btn-sm btn-primary-outline" v-on:click="payment(false, item)">결제카드 변경</a></span>\n                        </div>\n                    </div>\n                    \x3c!-- //결제수단 --\x3e\n\n                    \x3c!-- 총 결제금액 --\x3e\n                    <div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>총 결제금액</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-8 text-label">\n                            <span><strong class="blue-800">{{ parseInt(item.spsTotAmount).toLocaleString() }} 원</strong> <br class="hidden-sm hidden-md hidden-lg" />\n                            <em>(펀딩금액 {{ parseInt((item.spsTotAmount) - (item.spsAmount)).toLocaleString() }} 원 + 추가펀딩 {{ parseInt(item.spsAmount).toLocaleString() }}원)</em></span>\n                        </div>\n                        <div v-if="item.spsStatus == 0 && item.cpEndStatus == \'1\'" class="hidden-xs col-xs-4 col-xs-offset-4 col-sm-2 col-sm-offset-0 text-right">\n                            <span class="pr0"><a class="btn btn-block btn-sm btn-default-outline" v-on:click="fundingCancel(item)">펀딩 취소</a></span>\n                        </div>\n                        <div v-if="nowPayConfirm(item)" class="hidden-xs col-xs-4 col-xs-offset-4 col-sm-2 col-sm-offset-0 text-right">\n                            <span class="pr0"><a class="btn btn-block btn-sm btn-primary-outline" v-on:click="payment(true, item)">즉시결제</a></span>\n                        </div>\n                        <div v-if="item.spsStatus == 1 && item.payDiv == \'1\'" class="hidden-xs col-xs-4 col-xs-offset-4 col-sm-2 col-sm-offset-0 text-right">\n                            <span class="pr0"><a class="btn btn-block btn-sm btn-primary-outline" v-on:click="receiptShow(item)">영수증 확인</a></span>\n                        </div>\n\n                    </div>\n                    \x3c!-- //총 결제금액 --\x3e\n\n                    <div class="row row-mobile-n hidden-sm hidden-md hidden-lg mt10 mb10">\n                        <div class="col-xs-4">\n                            <a class="btn btn-block btn-sm btn-primary-outline" v-if="item.spsStatus == 0 && item.payDiv == \'1\'" v-on:click="deliveryModalOpen(item)">배송지 변경</a>\n                        </div>\n                        <div v-if="cardChangeConfirm(item)" class="col-xs-4">\n                            <span class="pr0"><a class="btn btn-block btn-sm btn-primary-outline" v-on:click="payment(false, item)">결제카드 변경</a></span>\n                        </div>\n                        <div v-if="item.spsStatus == 0 && item.cpEndStatus == \'1\'" class="col-xs-4">\n                            <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="fundingCancel(item)">펀딩 취소</a>\n                        </div>\n                        <div v-if="nowPayConfirm(item)" class="col-xs-4">\n                            <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="payment(true, item)">즉시결제</a>\n                        </div>\n                        <div v-if="item.spsStatus == 1 && item.payDiv == \'1\'" class="col-xs-4">\n                            <span class="pr0"><a class="btn btn-block btn-sm btn-primary-outline" v-on:click="receiptShow(item)">영수증 확인</a></span>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //Loop 결제완료 --\x3e\n\n                \x3c!-- 페이징 --\x3e\n                <nav class="text-center mt30 mb20" >\n                    <paginate\n                        :page-count="pageCount"\n                        :class="\'pagination\'"\n                        :click-handler="nextPage"\n                        :force-page="forcePage"\n                        >\n                    </paginate>\n                </nav>\n                \x3c!-- //페이징 --\x3e\n\n                \x3c!-- 펀딩취소 --\x3e\n                <div id="cancelModal" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                {{title}}\n                                <div class="mt5">취소하시겠습니까?</div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row row-mobile-n">\n                                    <a class="modalBlueBtn" data-dismiss="modal">아니오</a>\n                                    <a class="ml30 pointerCursor" v-on:click="cancelModalConfirm">예</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //펀딩취소 --\x3e\n\n                \x3c!-- 결제완료 : 배송지 변경 불가능 --\x3e\n                <div id="deliveryNModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                프로젝트가 종료되어 배송지 변경은 <br />\n                                제작자에게 직접 연락을 통해서만 가능합니다.\n                                <div class="mt5 blue-800">(제작자 연락처 : 010.3544.2241)</div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row row-mobile-n">\n                                    <a class="modalBlueBtn" data-dismiss="modal">확인</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //결제완료 : 배송지 변경 불가능 --\x3e\n\n                \x3c!-- 배송지 변경 --\x3e\n                <div id="deliveryModal" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" style="overflow-y:scroll;">\n                    <div class="modal-dialog" role="document">\n                        <div class="modal-content">\n                            <div class="modal-header">\n                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                            </div>\n                            <div class="modal-body">\n                                <form class="form-horizontal" action="#">\n                                    \x3c!-- 배송정보 입력 --\x3e\n                                    <div class="pay_info_wrap">\n                                        <div class="step-title">\n                                            배송정보 입력\n                                        </div>\n                                        <div class="row row-mobile-n">\n                                            <div class="col-sm-5">\n                                                \x3c!-- 받는 사람 휴대폰 번호 --\x3e\n                                                <div class="form-group row-mobile-n">\n                                                    <label for="delivery_mobile" class="col-xs-12 control-label">\n                                                        <div class="text-left">\n                                                            받는 사람 휴대폰 번호\n                                                        </div>\n                                                    </label>\n                                                    <div class="col-sm-12">\n                                                        <div class="row row-mobile-n">\n                                                            <div class="col-xs-12">\n                                                                <number-input class="form-control" :num="deliveryData.spsRsMobileNo" v-model="deliveryData.spsRsMobileNo" maxlength="11" :class="{\'error\' : errors.has(\'spsRsMobileNo\')}" data-vv-name="spsRsMobileNo" v-validate="\'required\'"></number-input>\n                                                                <label style="margin-left:15px;" class="error" v-if="errors.has(\'spsRsMobileNo\')" v-text="errors.first(\'spsRsMobileNo\')"></label>\n                                                            </div>\n                                                        </div>\n                                                        <label for="delivery_person_check" class="checkbox-inline">\n                                                            <input type="checkbox" v-model="deliveryData.memberInfo" v-on:click="sameInfoInput"/><span class="label"></span><span class="label-text" v-on:click="sameInfoText">회원 정보와 동일</span>\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                                \x3c!-- //결제자 휴대폰 번호 --\x3e\n                                            </div>\n                                            <div class="col-sm-7">\n                                                \x3c!-- 받는 사람 --\x3e\n                                                <div class="form-group mb10 row-mobile-n">\n                                                    <label for="delivery_person" class="col-xs-12 control-label">\n                                                        <div class="text-left">\n                                                            받는 사람\n                                                        </div>\n                                                    </label>\n                                                    <div class="col-sm-12">\n                                                        <input v-model="deliveryData.spsRsName" class="form-control" :class="{\'error\' : errors.has(\'spsRsName\')}" data-vv-name="spsRsName" v-validate="\'required\'" placeholder="반드시 실명을 입력해주세요"/>\n                                                        <label style="margin-left:15px;" class="error" v-if="errors.has(\'spsRsName\')" v-text="errors.first(\'spsRsName\')"></label>\n                                                    </div>\n                                                </div>\n                                                \x3c!-- //받는 사람 --\x3e\n                                            </div>\n                                        </div>\n        \n                                        \x3c!-- 우편번호 --\x3e\n                                        <div class="form-group row-mobile-n">\n                                            <label for="zip_code" class="col-xs-12 control-label">\n                                                <div class="text-left">\n                                                    우편번호\n                                                </div>\n                                            </label>\n                                            <div class="col-sm-6">\n                                                <div class="input-group input-group-file">\n                                                    <input v-model="postNum" v-on:click="postOpen" class="form-control" :class="{\'error\' : errors.has(\'postNum\')}" data-vv-name="postNum" v-validate="\'required\'" readonly="readonly" />\n                                                    <label style="margin-left:15px;" class="error" v-if="errors.has(\'postNum\')" v-text="errors.first(\'postNum\')"></label>\n                                                    <span class="input-group-btn" v-on:click="postOpen">\n                                                        <span class="btn btn-outline btn-file">\n                                                            <i class="fa fa-upload" aria-hidden="true"></i>\n                                                        </span>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        \x3c!-- //우편번호 --\x3e\n        \n                                        \x3c!-- 주소 --\x3e\n                                        <div class="form-group row-mobile-n">\n                                            <label for="address1" class="col-xs-12 control-label">\n                                                <div class="text-left">\n                                                    주소\n                                                </div>\n                                            </label>\n                                            <div class="col-xs-12 mb10">\n                                                <input type="text" class="form-control" v-model="address1" :class="{\'error\' : errors.has(\'address1\')}" data-vv-name="address1" v-validate="\'required\'" v-on:click="postOpen" placeholder="주소를 검색해주세요." readonly="readonly" />\n                                                <label style="margin-left:15px;" class="error" v-if="errors.has(\'address1\')" v-text="errors.first(\'address1\')"></label>\n                                            </div>\n                                            <div class="col-xs-12">\n                                                <input type="text" class="form-control" v-model="deliveryData.spsAddr2" :class="{\'error\' : errors.has(\'spsAddr2\')}" data-vv-name="spsAddr2" v-validate="\'required\'" placeholder="상세 주소를 입력해주세요." />\n                                                <label style="margin-left:15px;" class="error" v-if="errors.has(\'spsAddr2\')" v-text="errors.first(\'spsAddr2\')"></label>\n                                            </div>\n                                        </div>\n                                        \x3c!-- //주소 --\x3e\n        \n                                        \x3c!-- 제작자에게 요청사항 --\x3e\n                                        <div class="form-group mb0 row-mobile-n">\n                                            <label for="delivery_person" class="col-xs-12 control-label">\n                                                <div class="text-left">\n                                                    진행자에게 요청사항\n                                                </div>\n                                            </label>\n                                            <div class="col-sm-12">\n                                                <textarea rows="3" cols="50" class="form-control" v-model="deliveryData.spsMiscInfo"></textarea>\n                                            </div>\n                                        </div>\n                                        \x3c!-- //제작자에게 요청사항 --\x3e\n                                    </div>\n                                    \x3c!-- //배송정보 입력 --\x3e\n                                </form>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row row-mobile-n">\n                                    <a class="pointerCursor" data-dismiss="modal">취소</a>\n                                    <a class="ml30 modalBlueBtn" v-on:click="changeDelivery">배송지 변경</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //배송지 변경 --\x3e\n\n                \x3c!-- 배송 조회 --\x3e\n                <div id="trackerModal" class="modal fade in deliveryModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">\n                    <div class="modal-dialog" role="document">\n                        <div class="modal-content">\n                            <div class="modal-header">\n                                <div style="width:70px;">배송 조회</div>\n                                <button type="button" class="close" data-dismiss="modal" aria-label="Close" class="xButton"></button>\n                            </div>\n                            <div v-if="trackerConfirm" class="modal-body">\n                                <div class="trackerInfo">\n                                    <template v-if="tracker.spsDeliveryType == 1">\n                                        <div>\n                                            본 프로젝트 리워드는 <br v-if="isMobile" />[택배 배송]으로 전달됩니다.<br />\n                                            아래 송장 번호를 확인하세요.\n                                        </div>\n                                        <div class="trackDelivery" v-on:click="showTracker(tracker)">\n                                            <font>{{tracker.spsDeliveryName | deliveryName(tracker.spsDeliveryCode, tracker.etcDeliveryName)}}</font><br />\n                                            <font>{{tracker.spsDeliveryNo}}</font>\n                                        </div>\n                                        <div style="margin-top:36px;">\n                                            <button type="button" class="borderBtn" v-on:click="showTracker(tracker)">배송 조회&nbsp;<i class="fa fa-angle-right" /></button>\n                                        </div>\n                                    </template>\n                                    <template v-else-if="tracker.spsDeliveryType == 2">\n                                        <div>\n                                            본 프로젝트 리워드는 <br v-if="isMobile" />[디지털 배송]으로 전달됩니다.<br />\n                                            등록하신 아래 이메일을 확인하세요.\n                                        </div>\n                                        <div class="trackDelivery">\n                                            {{userInfo.email}}\n                                        </div>\n\n                                    </template>\n                                    <template v-else-if="tracker.spsDeliveryType == 3">\n                                        <div>\n                                            본 프로젝트 리워드는 <br v-if="isMobile" />[현장 수령]으로 전달됩니다.<br />\n                                            자세한 내용은 아래 연락처로 <br v-if="isMobile" />프로젝트 진행자에게 문의하세요.\n                                        </div>\n                                        <div class="trackDelivery">\n                                            <template v-if="tracker.cpRefundTellViewStatus == 1">{{tracker.cpRefundTell}}<br /></template>\n                                            {{tracker.cpInquiryEmail}}\n                                        </div>\n                                    </template>\n                                    <template v-else>\n                                        <div>\n                                            본 프로젝트 리워드는 <br v-if="isMobile" />배송 조회 대상이 아닙니다.<br />\n                                            자세한 내용은 아래 연락처로 <br v-if="isMobile" />프로젝트 진행자에게 문의하세요.\n                                        </div>\n                                        <div class="trackDelivery">\n                                            <template v-if="tracker.cpRefundTellViewStatus == 1">{{tracker.cpRefundTell}}<br /></template>\n                                            {{tracker.cpInquiryEmail}}\n                                        </div>\n                                    </template>\n                                </div>\n                                <div class="text-center">\n                                    <button type="button" class="btn btn-primary" style="margin-top:50px;" data-dismiss="modal">확인</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                \x3c!-- 결제수단 변경, 즉시결제 paymentModal--\x3e\n                \x3c!-- 카드정보 --\x3e\n                <payment-info v-if="popupRender" :type="type" :pay-now-confirm="payNowConfirm" :sps-idx="spsIdx" :sps-tot-amount="spsTotAmount" v-on:reload-funding-list="reloadFundingList"></payment-info>\n                \x3c!-- //카드정보 --\x3e\n                \x3c!-- //결제수단 변경, 즉시결제 --\x3e\n            </div>\n            ',
                        props: ["code"],
                        data: function() {
                            return {
                                tid: "",
                                type: 2,
                                fundedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                search: {
                                    memCode: userInfo.memCode,
                                    paging: {
                                        page: "1",
                                        count: "5"
                                    },
                                    cpTrainingYn: "N"
                                },
                                fundCancelData: {
                                    payDiv: "",
                                    cpCode: "",
                                    memCode: "",
                                    spsIdx: "",
                                    spsStatus: "9"
                                },
                                deliveryData: {
                                    spsRsMobileNo: "",
                                    spsRsName: "",
                                    spsPostNum: "",
                                    spsAddr1: "",
                                    spsAddr2: "",
                                    spsMiscInfo: "",
                                    memberInfo: !1
                                },
                                address: {
                                    postNum: "",
                                    address1: ""
                                },
                                sponsorCardData: {
                                    bankCode: "",
                                    payNum: "",
                                    payInfoNum: "",
                                    spsIdx: "",
                                    spsPgNo: "",
                                    spsStatus: ""
                                },
                                cardData: {
                                    cardNo: [],
                                    cardPw: "",
                                    expMonth: "",
                                    expYear: "",
                                    idNo: "",
                                    agree: !1
                                },
                                cardApprovalData: {
                                    billKey: "",
                                    buyerName: "",
                                    amt: ""
                                },
                                cardNo: [],
                                cardText: [],
                                title: "",
                                cpAliasUrl: "",
                                phoneNo: "",
                                payNowConfirm: !1,
                                sameInfoCheck: !1,
                                spsIdx: "",
                                popupRender: !1,
                                spsTotAmount: 0,
                                trackerConfirm: !1,
                                tracker: [],
                                isMobile: !1
                            }
                        },
                        created: function() {
                            this.load()
                        },
                        components: {
                            paginate: VuejsPaginate,
                            numberInput: n(0).default.component(),
                            paymentInfo: n(8).default.component()
                        },
                        computed: {
                            postNum: function() {
                                return this.deliveryData.spsPostNum = this.address.postNum, this.address.postNum
                            },
                            address1: function() {
                                return this.deliveryData.spsAddr1 = this.address.address1, this.address.address1
                            }
                        },
                        methods: {
                            cardChangeConfirm: function(e) {
                                return 0 == e.spsStatus && 1 == e.cpEndStatus && 1 == e.payDiv
                            },
                            nowPayConfirm: function(e) {
                                return 2 == e.cpEndStatus && this.checkDate(e.cpEndDate) < 8 && 1 == e.payDiv && (2 == e.spsStatus && 0 == this.checkTime(e.cpEndDate) || 0 == e.spsStatus)
                            },
                            load: function() {
                                var e = this;
                                this.trackerConfirm = !1, this.tracker = _.clone([]), axios.post("/data/mypage/funded/reward", e.search).then(function(t) {
                                    var n = parseInt(t.data.rData.count % e.search.paging.count),
                                        a = 0;
                                    n > 0 && a++, e.pageCount = parseInt(t.data.rData.count / e.search.paging.count) + a, e.fundedList = t.data.rData.data
                                })
                            },
                            receiptShow: function(e) {
                                this.tid = e.spsPgNo;
                                var t = "https://npg.nicepay.co.kr/issue/TransIssue.do?TID=" + this.tid + "&svcCd=01&sendMail=0&pass2ndConf=N&cart_type=0";
                                window.open(t, "popupIssue", "toolbar=no,location=no,directories=no,status=yes,menubar=no,scrollbars=yes,resizable=yes,width=420,height=540")
                            },
                            nextPage: function(e) {
                                this.forcePage = e - 1, this.search.paging.page = e, this.load()
                            },
                            statusCheck: function(e, t, n, a) {
                                var i = "";
                                if (0 == e)
                                    if (3 == n) i = "프로젝트 종료";
                                    else {
                                        if (1 != a) return 0 == t ? "결제완료" : "리워드발송";
                                        i = "결제대기"
                                    }
                                else {
                                    if (1 == e) return 0 == t ? "결제완료" : "리워드발송";
                                    2 == e ? i = "결제실패" : 3 == e ? i = "결제취소" : 9 == e ? i = "후원취소" : 1 == e && 4 == t && (i = "취소")
                                }
                                return i
                            },
                            payType: function(e, t) {
                                var n = "";
                                return "1" == e ? n = t + "카드" : "2" == e ? n = "계좌이체" : "3" == e && (n = "쿠폰"), n
                            },
                            fundingCancel: function(e) {
                                var t = this;
                                $("#cancelModal").modal("show"), t.title = e.cpTitle, t.cpAliasUrl = e.cpAliasUrl, t.fundCancelData.cpCode = e.cpCode, t.fundCancelData.memCode = userInfo.memCode, t.fundCancelData.spsIdx = e.spsIdx, t.fundCancelData.payDiv = e.payDiv
                            },
                            postOpen: function() {
                                post.open(this)
                            },
                            deliveryModalOpen: function(e) {
                                $("#deliveryModal").modal("show"), this.deliveryData.spsIdx = e.spsIdx, this.deliveryData.memCode = userInfo.memCode, this.deliveryData.spsRsMobileNo = e.spsRsMobileNo, this.deliveryData.spsRsName = e.spsRsName, this.address.postNum = e.spsPostNum, this.address.address1 = e.spsAddr1, this.deliveryData.spsPostNum = this.address.postNum, this.deliveryData.spsAddr1 = this.address.address1, this.deliveryData.spsAddr2 = e.spsAddr2, this.deliveryData.spsMiscInfo = e.spsMiscInfo
                            },
                            deliveryModalDismiss: function() {
                                $("#deliveryModal").modal("hide"), this.deliveryDataInit()
                            },
                            deliveryDataInit: function() {
                                this.deliveryData.spsRsMobileNo = "", this.deliveryData.spsRsName = "", this.deliveryData.spsPostNum = "", this.deliveryData.spsAddr1 = "", this.deliveryData.spsAddr2 = "", this.deliveryData.spsMiscInfo = ""
                            },
                            cancelModalConfirm: function() {
                                var e = this;
                                $(".page-loader-more").fadeIn(""), axios.post("/data/reward/funding/cancel", this.fundCancelData).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("취소되었습니다."), window.pixelRefundData = window.pixelRefundData || {}, window.pixelRefundData = {
                                        content_name: e.title,
                                        content_ids: [e.cpAliasUrl],
                                        content_type: "product",
                                        currency: "KRW",
                                        category: "reward"
                                    }, window.dataLayer = window.dataLayer || [], window.dataLayer.push({
                                        ecommerce: {
                                            refund: {
                                                actionField: {
                                                    id: e.fundCancelData.spsIdx
                                                }
                                            }
                                        },
                                        event: "transactionrefund"
                                    }), e.load()) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                }), $("#cancelModal").modal("hide")
                            },
                            payment: function(e, t) {
                                this.payNowConfirm = e, this.spsIdx = t.spsIdx, this.spsTotAmount = t.spsTotAmount, this.popupRender = !0, this.$nextTick(function() {
                                    $("#paymentModal").modal("show")
                                })
                            },
                            changeDelivery: function() {
                                var e = this;
                                return "" == this.deliveryData.spsRsMobileNo ? (noti.open("받는사람 휴대폰 번호를 입력해주세요."), !1) : "" == this.deliveryData.spsRsName ? (noti.open("받는사람을 입력해주세요."), !1) : "" == this.address.postNum ? (noti.open("주소를 선택해 주세요."), !1) : "" == this.address.address1 ? (noti.open("주소를 선택해 주세요."), !1) : "" == this.deliveryData.spsAddr2 ? (noti.open("배송지 상세 주소를 입력해 주세요."), !1) : void axios.post("/set/reward/funding/change/delivery", this.deliveryData).then(function(t) {
                                    "0000" == t.data.rCode ? (noti.open("변경되었습니다."), e.load(), e.deliveryDataInit(), $("#deliveryModal").modal("hide")) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            reloadFundingList: function() {
                                $("#paymentModal").modal("hide"), this.popupRender = !1, this.load()
                            },
                            sameInfoInput: function() {
                                this.sameInfo()
                            },
                            sameInfoText: function() {
                                this.sameInfo()
                            },
                            sameInfo: function() {
                                var e = this;
                                0 == this.deliveryData.memberInfo ? this.deliveryData.memberInfo = !0 : this.deliveryData.memberInfo = !1, 1 == this.deliveryData.memberInfo ? axios.post("/data/member/info", {
                                    memCode: userInfo.memCode
                                }).then(function(t) {
                                    var n = t.data.rData;
                                    e.deliveryData.spsRsMobileNo = "NULL" == n.mobileNo ? "" : n.mobileNo, e.deliveryData.spsRsName = "NULL" == n.resName ? "" : n.resName, e.address.postNum = "NULL" == n.memSpsPostNum ? "" : n.memSpsPostNum, e.address.address1 = "NULL" == n.memSpsAddr1 ? "" : n.memSpsAddr1, e.deliveryData.spsAddr2 = "NULL" == n.memSpsAddr2 ? "" : n.memSpsAddr2
                                }) : (e.deliveryData.spsRsMobileNo = "", e.deliveryData.spsRsName = "", e.address.postNum = "", e.address.address1 = "", e.deliveryData.spsAddr2 = "")
                            },
                            detail: function(e, t) {
                                "BUTTON" == t.target.tagName ? (this.tracker = e, this.showTrackerMd(e), this.trackerConfirm = !0) : window.open("/r/" + e.cpAliasUrl, "_self")
                            },
                            showTrackerMd: function(e) {
                                $(window).width() <= 400 && (this.isMobile = !0), $("#trackerModal").modal("show")
                            },
                            showTracker: function(e) {
                                var t = e.spsDeliveryName;
                                "9999" == e.spsDeliveryCode && (t = e.etcDeliveryName), window.open("https://search.naver.com/search.naver?sm=tab_hty.top&where=nexearch&query=" + encodeURI(t) + "+" + encodeURI(e.spsDeliveryNo))
                            },
                            card: function(e) {
                                this.$nextTick(function() {
                                    4 == _.toString(this.cardNo[e]).length && (0 == e ? this.$refs.cardText1.focus() : 1 == e ? this.$refs.cardText2.focus() : 2 == e && this.$refs.cardText3.focus())
                                })
                            },
                            validData: function(e) {
                                this.$nextTick(function() {
                                    2 == _.toString(this.cardData.expMonth).length && 1 == e && this.$refs.expYear.focus()
                                })
                            },
                            checkDate: function(e) {
                                var t = moment(e);
                                return moment(new Date).diff(t, "days")
                            },
                            checkTime: function(e) {
                                var t = 0,
                                    n = moment(e),
                                    a = moment(new Date);
                                return 7 == a.diff(n, "days") && moment(a, "hmm").format("HH:mm") > "23:40" && t++, t
                            },
                            checkChangeTime: function(e) {
                                var t = 0,
                                    n = moment(e),
                                    a = moment(new Date);
                                return 1 == a.diff(n, "days") && moment(a, "hmm").format("HH:mm") > "10:59" && t++, t
                            }
                        },
                        filters: {
                            deliveryName: function(e, t, n) {
                                return 9999 == t ? n : e
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div>\n                \x3c!-- Loop 결제완료 --\x3e\n                <div class="mif-list" v-for="item in fundedList">\n                    <div class="mif-frame" v-on:click="detail(item.cpAliasUrl)" style="cursor: pointer;">\n                        <div class="media">\n                            <div class="media-left media-middle">\n                                <img :src="\'//\' + item.cpCardImg + \'/ycrowdy/resize/!340x!226\'" class="media-object" />\n                            </div>\n                            <div class="media-body media-middle">\n                                <div class="pn_list_frame">\n                                    <div class="pn_summury" :class="{\'red-800\' : item.spsStatus == 2}">{{ statusCheck(item.spsStatus, item.spsDeliveryStatus) }}</div>\n                                    <div class="pn_subject">{{ item.cpTitle }}</div>\n                                    <div class="pn_time">\n                                        <span>{{ item.projectAchievement }}%</span>\n                                        <span>{{ item.paymentDate }} 결제일</span>\n                                        <span class="xs-mt5">{{ item.fundWdate }} 펀딩참여일</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    \x3c!-- 선택한 리워드 --\x3e\n                    <div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>선택한 리워드</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-10 text-label" v-if="item.cbfTitle != null ">\n                            <span>{{ item.cbfTitle }}, {{ item.cbfInfo }} X {{ item.sbfQty }}</span>\n                        </div>\n                    </div>\n                    \x3c!-- //선택한 리워드 --\x3e\n\n                    \x3c!-- 받는분/연락처 --\x3e\n                    \x3c!--<div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>받는분/연락처</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-10 text-label">\n                            <span> {{ item.spsRsName }} <small class="ml10"> {{ item.spsRsMobileNo }} </small></span>\n                        </div>\n                    </div>--\x3e\n                    \x3c!-- //받는분/연락처 --\x3e\n\n                    \x3c!-- 배송지 --\x3e\n                    \x3c!--<div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>배송지</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-8 text-label">\n                            <span>\n                                {{ item.spsAddr1 }} {{ item.spsAddr2 }}\n                            </span>\n                        </div>\n                    </div>--\x3e\n                    \x3c!-- //배송지 --\x3e\n\n                    \x3c!-- 결제수단 --\x3e\n                    \x3c!--<div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>결제수단</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-8 text-label">\n                            <span>{{ payType(item.payDiv) }}</span>\n                        </div>\n                    </div>--\x3e\n                    \x3c!-- //결제수단 --\x3e\n\n                    \x3c!-- 총 결제금액 --\x3e\n                    <div class="row not-space row-label">\n                        <div class="col-xs-3 col-sm-2">\n                            <span>총 결제금액</span>\n                        </div>\n                        <div class="col-xs-9 col-sm-8 text-label">\n                            <span><strong class="blue-800">{{ parseInt(item.spsTotAmount).toLocaleString() }} 원</strong> <br class="hidden-sm hidden-md hidden-lg" />\n                            <em>(펀딩금액 {{ parseInt((item.spsTotAmount) - (item.spsAmount)).toLocaleString() }} 원 + 추가펀딩 {{ parseInt(item.spsAmount).toLocaleString() }}원)</em></span>\n                        </div>\n                    </div>\n                    \x3c!-- //총 결제금액 --\x3e\n                </div>\n                \x3c!-- //Loop 결제완료 --\x3e\n\n                \x3c!-- 페이징 --\x3e\n                <nav class="text-center mt30 mb20" >\n                    <paginate\n                        :page-count="pageCount"\n                        :class="\'pagination\'"\n                        :click-handler="nextPage"\n                        :force-page="forcePage"\n                        >\n                    </paginate>\n                </nav>\n                \x3c!-- //페이징 --\x3e\n\n                \x3c!-- 결제완료 : 배송지 변경 불가능 --\x3e\n                <div id="deliveryNModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-header">\n                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                            </div>\n                            <div class="modal-body modal-order">\n                                프로젝트가 종료되어 배송지 변경은 <br />\n                                제작자에게 직접 연락을 통해서만 가능합니다.\n                                <div class="mt15 blue-800">(제작자 연락처 : 010.3544.2241)</div>\n        \n                                <div class="modal-footer text-center">\n                                    <div class="row row-mobile-n">\n                                        <div class="col-xs-4 col-xs-offset-4">\n                                            <button type="button" class="btn btn-block btn-primary-outline" data-dismiss="modal">확인</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //결제완료 : 배송지 변경 불가능 --\x3e\n            </div>\n            ',
                        props: ["code"],
                        data: function() {
                            return {
                                fundedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                search: {
                                    memCode: userInfo.memCode,
                                    paging: {
                                        page: "1",
                                        count: "4"
                                    },
                                    cpTrainingYn: "Y"
                                }
                            }
                        },
                        created: function() {
                            this.load()
                        },
                        components: {
                            paginate: VuejsPaginate
                        },
                        methods: {
                            load: function() {
                                var e = this;
                                axios.post("/data/mypage/funded/reward", e.search).then(function(t) {
                                    var n = parseInt(t.data.rData.count % e.search.paging.count),
                                        a = 0;
                                    n > 0 && a++, e.pageCount = parseInt(t.data.rData.count / e.search.paging.count) + a, e.fundedList = t.data.rData.data
                                })
                            },
                            nextPage: function(e) {
                                this.forcePage = e - 1, this.search.paging.page = e, this.load()
                            },
                            statusCheck: function(e, t) {
                                return "9" == e ? "후원취소" : "결제완료"
                            },
                            payType: function(e) {
                                var t = "";
                                return "1" == e ? t = "카드" : "2" == e ? t = "계좌이체" : "3" == e && (t = "쿠폰"), t
                            },
                            detail: function(e) {
                                window.open("/sr/" + e, "_self")
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div class="container">\n                <div class="row not-space">\n                    <div class="col-md-2">\n                        <div class="st-menu webfont2">\n                            <ul>\n                                \x3c!--<li class="w30" :class="{\'active\' : type == 1}"><a href="javascript:void(0)" v-on:click="subMenuChange(1)">리워드</a></li>--\x3e\n                                <li class="w30" :class="{\'active\' : type == 2}"><a href="javascript:void(0)" v-on:click="subMenuChange(2)">투자</a></li>\n                                \x3c!--<li class="w40" :class="{\'active\' : type == 3}"><a href="javascript:void(0)" v-on:click="subMenuChange(3)">모의 크라우드 펀딩</a></li>--\x3e\n                            </ul>\n                            <div class="clearfix"></div>\n                        </div>\n                    </div>\n\n                    <div class="col-md-10 col-line">\n                        <div class="row not-space">\n                            <div class="col-md-1"></div>\n                            <div class="col-md-11">\n                                <div class="common_sub_title webfont2">\n                                관심 프로젝트를 <br />\n                                확인해보세요\n                                </div>\n                                \x3c!--<reward v-if="type == 1"></reward>--\x3e\n                                <invest v-if="type == 2"></invest>\n                                \x3c!--<simulation v-if="type == 3"></simulation>--\x3e\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ',
                        props: ["subMenu"],
                        data: function() {
                            return {
                                fundedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                search: {
                                    memCode: this.code,
                                    paging: {
                                        page: "1",
                                        count: "12"
                                    }
                                },
                                type: "2"
                            }
                        },
                        created: function() {},
                        components: {
                            paginate: VuejsPaginate,
                            invest: n(27).default.component()
                        },
                        methods: {
                            subMenuChange: function(e) {
                                this.type = e
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div>\n                <div class="rewards-list mp-list">\n                    <div class="row row-mobile">\n                        \x3c!-- Loop --\x3e\n                        <div class="col-sm-6 col-md-4" v-for="item in makedList" v-on:click="detail(item, $event)">\n                            <figure>\n                                <div class="items over-box">\n                                    <a href="javascript:void(0)">\n                                        <div class="items_img">\n                                            <img :src="\'//\' + checkImg(item.pjCardImg) + \'/ycrowdy/resize/!340x!226\'" class="img-responsive" alt="" />\n                                        </div>\n                                    </a>\n                                    <figcaption class="rewards-caption">\n                                        <a href="javascript:void(0)">\n                                            <span class="btn btn-xs btn-danger-outline" v-if="item.pjRecStatus == 0">제작중</span>\n                                            <span class="btn btn-xs btn-danger-outline" v-if="item.pjRecStatus == 1">승인요청중</span>\n                                            <span class="btn btn-xs btn-primary-outline btn_cursor" v-if="item.pjRecStatus == 2 && item.pjEndStatus == 1">진행중</span>\n                                            <span class="btn btn-xs btn-default-outline" v-if="item.pjRecStatus == 2 && item.pjEndStatus == 2 || item.pjEndStatus == 3">종료</span>\n                                            <span class="btn btn-xs btn-danger-outline" v-if="item.pjRecStatus == 2">승인요청완료</span>\n                                            <span class="btn btn-xs btn-danger-outline" v-if="item.pjRecStatus == 3">승인반려</span>\n                                            <div class="rewards-subject">\n                                                <strong>{{ item.pjTitle }}</strong>\n                                                <div class="rewards-summury">{{ item.memName }}</div>\n                                            </div>\n\n                                            <div class="row row-mobile-n">\n                                                <div class="col-xs-9 col-sm-8">\n                                                    <span class="rewards-price"><span class="webfont2"></span>{{ parseInt(item.pjAmount).toLocaleString() }}</span> <span class="rewards-percent">{{ item.achievement }}%</span>\n                                                </div>\n                                                <div class="col-xs-3 col-sm-4 text-right">\n                                                    <span class="rewards-day">D-34</span>\n                                                </div>\n                                            </div>\n\n                                            <div class="progress">\n                                                <div class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" :style="{width: item.achievement + \'%\'}"><span class="sr-only">{{ item.achievement }}% 완료</span></div>\n                                            </div>\n\n                                            <div class="row row-mobile-n">\n                                                <div class="col-xs-8">\n                                                    <div class="invest-support">목표금액 {{ parseInt(item.tgAmount).toLocaleString() }}</div>\n                                                </div>\n                                                <div class="col-xs-4 text-right">\n                                                    <div class="invest-support last-child">{{ parseInt(item.investorCount).toLocaleString() }}명 후원</div>\n                                                </div>\n                                            </div>\n                                        </a>\n\n                                        <div class="mp-btn">\n                                            <div class="row row-mobile-n" v-if="item.pjRecStatus == 0">\n                                                <div class="col-xs-6">\n                                                    <a class="btn btn-block btn-sm btn-default-outline" v-on:click="projectDelete(item.pjCode, item.pjTitle)">삭제하기</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-sm hidden-md hidden-lg">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="modifyModal($event)">수정하기</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-xs">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="modify(item.pjCode, $event)">수정하기</a>\n                                                </div>\n                                            </div>\n                                            <div class="row row-mobile-n" v-if="item.pjRecStatus == 1">\n                                                <div class="col-xs-6">\n                                                    <a class="btn btn-block btn-sm btn-default-outline" v-on:click="projectDelete(item.pjCode, item.pjTitle)">삭제하기</a>\n                                                </div>\n                                                <div class="col-xs-6">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="approvalRequestCancelModal(item.pjCode, item.pjTitle)">승인요청취소</a>\n                                                </div>\n                                            </div>\n\n                                            <div class="row row-mobile-n" v-if="item.pjRecStatus == 2 && item.pjEndStatus == 1">\n                                                <div class="col-xs-6">\n                                                    <a v-on:click="dashboard(item.pjAliasUrl, $event)" class="btn btn-block btn-sm btn-default-outline">펀딩현황</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-sm hidden-md hidden-lg">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="modifyModal($event)">수정하기</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-xs">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="modify(item.pjCode, $event)">수정하기</a>\n                                                </div>\n                                            </div>\n                                            <div class="row row-mobile-n" v-if="item.pjRecStatus == 2 && item.pjEndStatus == 2 || item.pjEndStatus == 3">\n                                                <div class="col-xs-8 col-xs-offset-2">\n                                                    <a v-on:click="dashboard(item.pjAliasUrl, $event)" class="btn btn-block btn-sm btn-primary-outline">프로젝트 결과보기</a>\n                                                </div>\n                                            </div>\n                                            <div class="row row-mobile-n" v-if="item.pjRecStatus == 2 && item.pjEndStatus == 0">\n                                                <div class="col-xs-8 col-xs-offset-2">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline">시작대기</a>\n                                                </div>\n                                            </div>\n                                            <div class="row row-mobile-n" v-if="item.pjRecStatus == 3">\n                                                <div class="col-xs-6 hidden-sm hidden-md hidden-lg">\n                                                    <a class="btn btn-block btn-sm btn-default-outline" v-on:click="modifyModal($event)">수정하기</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-xs">\n                                                    <a class="btn btn-block btn-sm btn-default-outline" v-on:click="modify(item.pjCode, $event)">수정하기</a>\n                                                </div>\n                                                <div class="col-xs-6">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="rejectReasonModal(item.transContent)">반려사유보기</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </figcaption>\n                                </div>\n                            </figure>\n                        </div>\n                        \x3c!-- //Loop --\x3e\n                    </div>\n                </div>\n\n                \x3c!-- 페이징 --\x3e\n                <nav class="text-center mt30 mb20" >\n                    <paginate\n                        :page-count="pageCount"\n                        :class="\'pagination\'"\n                        :click-handler="nextPage"\n                        :force-page="forcePage"\n                        >\n                    </paginate>\n                </nav>\n                \x3c!-- //페이징 --\x3e\n\n                \x3c!-- 삭제하기 --\x3e\n                <div id="deleteModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                <div v-html="title"></div>\n                                <div class="mt5">삭제하시겠습니까?</div>\n                            </div>\n                            <div class="modal-footer">\n                                <a data-dismiss="modal" class="pointerCursor">취소</a>\n                                <a class="ml30 modalRedBtn" v-on:click="deleteModalConfirm">삭제</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //삭제하기 --\x3e\n\n                \x3c!-- 승인요청취소 --\x3e\n                <div id="cancelModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                <div v-html="title"></div>\n                                <div class="mt5">취소하시겠습니까?</div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                   <a class="modalBlueBtn" data-dismiss="modal">아니오</a>\n                                   <a class="ml30 pointerCursor" v-on:click="approvalRequestCancelModalConfirm">예</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //승인요청취소 --\x3e\n\n                \x3c!-- 수정하기 --\x3e\n                <div id="modifyModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                프로젝트 스토리 수정은 <br />PC에서만 가능한 기능입니다.\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="modalBlueBtn" data-dismiss="modal">확인</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //수정하기 --\x3e\n\n                \x3c!-- 반려사유 --\x3e\n                <div class="modal fade" id="aRejectedModal" role="dialog" tabindex="-1">\n                    <div class="modal-dialog modal-sm">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                승인이 반려되었습니다.\n                                <div class="mt5" v-html="rejectReason" v-if="rejectReason!=\'\'">\n                                    반려사유 : \n                                </div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row row-mobile-n">\n                                    <a class="modalBlueBtn" data-dismiss="modal">확인</a>\n                                    \x3c!--<div class="col-xs-6">\n                                        <a class="btn btn-block btn-primary" data-dismiss="modal">등록</a>\n                                    </div>--\x3e\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //반려사유 --\x3e\n\n                \x3c!-- 즉시시작 --\x3e\n                <div id="startModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                <div v-html="title"></div>\n                                <div class="mt5">프로젝트를 시작하시겠습니까?</div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="pointerCursor" data-dismiss="modal">취소</a>\n                                    <a class="ml30 modalBlueBtn" v-on:click="projectStartConfirm">시작</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //즉시시작 --\x3e\n            </div>\n            ',
                        props: ["code"],
                        data: function() {
                            return {
                                makedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                search: {
                                    memCode: userInfo.memCode,
                                    paging: {
                                        page: "1",
                                        count: "6"
                                    }
                                },
                                updateData: {
                                    pjCode: ""
                                },
                                rejectReason: "",
                                title: "",
                                check: !1
                            }
                        },
                        created: function() {
                            this.load()
                        },
                        components: {
                            paginate: VuejsPaginate
                        },
                        computed: {},
                        methods: {
                            load: function() {
                                var e = this;
                                axios.post("/data/mypage/maked/invest", e.search).then(function(t) {
                                    var n = parseInt(t.data.rData.count % e.search.paging.count),
                                        a = 0;
                                    n > 0 && a++, e.pageCount = parseInt(t.data.rData.count / e.search.paging.count) + a, e.makedList = t.data.rData.data
                                })
                            },
                            nextPage: function(e) {
                                this.forcePage = e - 1, this.search.paging.page = e, this.load()
                            },
                            detail: function(e) {
                                this.check = !1, 0 == e.pjRecStatus || 1 == e.pjRecStatus || 2 == e.pjRecStatus && 0 == e.pjEndStatus || 3 == e.pjRecStatus || window.open("/i/" + e.pjAliasUrl, "_self")
                            },
                            projectDelete: function(e, t) {
                                var n = this;
                                $("#deleteModal").modal("show"), this.updateData.pjCode = e, n.title = t
                            },
                            deleteModalConfirm: function() {
                                var e = this;
                                axios.post("/set/save/maked/invest/delete", e.updateData).then(function(t) {
                                    "0000" == t.data.rCode ? (noti.open("삭제되었습니다."), $("#deleteModal").modal("hide"), e.load()) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            approvalRequestCancelModal: function(e, t) {
                                var n = this;
                                $("#cancelModal").modal("show"), this.updateData.pjCode = e, n.title = t + "승인요청을 취소합니다"
                            },
                            approvalRequestCancelModalConfirm: function() {
                                var e = this;
                                axios.post("/set/save/maked/invest/approvalRequestCancel", e.updateData).then(function(t) {
                                    "0000" == t.data.rCode ? (noti.open("승인요청 취소 되었습니다."), $("#cancelModal").modal("hide"), e.load()) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            rejectReasonModal: function(e) {
                                var t = this;
                                $("#aRejectedModal").modal("show"), t.rejectReason = "반려사유 : " + e
                            },
                            projectStart: function(e, t) {
                                $("#startModal").modal("show");
                                var n = this;
                                this.updateData.pjCode = e, n.title = t
                            },
                            checkImg: function(e) {
                                return null != e && "" != e ? e : "image-se.ycrowdy.com/logo/project-default-1.png"
                            },
                            projectStartConfirm: function() {
                                var e = this;
                                axios.post("/data/mypage/maked/invest/start", e.updateData).then(function(t) {
                                    "0000" == t.data.rCode ? (noti.open("프로젝트가 시작되었습니다."), $("#startModal").modal("hide"), e.load()) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            dashboard: function(e, t) {
                                this.check = !this.check, this.check && (t.stopPropagation(), window.open("/dashboard/invest/" + e, "_self"))
                            },
                            modify: function(e, t) {
                                this.check = !this.check, this.check && (this.check = !1, t.stopPropagation(), window.open("/make/invest/main/" + e, "_self"))
                            },
                            modifyModal: function(e) {
                                this.check = !this.check, this.check && (this.check = !1, e.stopPropagation(), $("#modifyModal").modal("show"))
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div>\n                <div class="rewards-list mp-list">\n                    <div class="row row-mobile">\n                        \x3c!-- Loop --\x3e\n                        <div class="col-sm-6 col-md-4" v-for="item in makedList" v-on:click="detail(item, $event)">\n                            <figure>\n                                <div class="items over-box">\n                                    <a href="javascript:void(0)">\n                                        <div class="items_img">\n                                            <img v-if="item.cpAdultImgType == \'N\'" :src="\'//\' + checkImg(item.cpCardImg) + \'/ycrowdy/resize/!340x!226\'" class="img-responsive" />\n                                            <img v-if="item.cpAdultImgType == \'Y\' && item.cpAdultType == \'Y\'" src="//image-se.ycrowdy.com/crowdyCss/img/adult1.png" class="img-responsive" />\n                                            <img v-if="item.cpAdultType == \'Y\'" style="position:absolute; top:10px; right:0px; width:50px; height:35px;" src="//image-se.ycrowdy.com/crowdyCss/img/adult2.png" />\n                                        </div>\n                                    </a>\n                                    <figcaption class="rewards-caption">\n                                        <a href="javascript:void(0)">\n                                            <span class="btn btn-xs btn-danger-outline" v-if="item.cpRecStatus == 0">제작중</span>\n                                            <span class="btn btn-xs btn-danger-outline" v-if="item.cpRecStatus == 1">승인요청중</span>\n                                            <span class="btn btn-xs btn-primary-outline btn_cursor" v-if="item.cpRecStatus == 2 && item.cpEndStatus == 1">진행중</span>\n                                            <span class="btn btn-xs btn-default-outline" v-if="item.cpRecStatus == 2 && item.cpEndStatus == 2 || item.cpEndStatus == 3">종료</span>\n                                            <span class="btn btn-xs btn-danger-outline" v-if="item.cpRecStatus == 2 && item.cpEndStatus == 0">승인요청완료</span>\n                                            <span class="btn btn-xs btn-danger-outline" v-if="item.cpRecStatus == 3">승인반려</span>\n                                            <div class="rewards-subject">\n                                                <strong>{{ item.cpTitle }}</strong>\n                                                \x3c!--<div class="rewards-summury">{{ item.memName }}</div>--\x3e\n                                            </div>\n\n                                            <div class="row row-mobile-n">\n                                                <div class="col-xs-9 col-sm-8">\n                                                    <span class="rewards-price"><span class="webfont2"></span>{{ parseInt(item.sponserAmount).toLocaleString() }}</span> <span class="rewards-percent">{{ item.achievement }}%</span>\n                                                </div>\n                                                <div class="col-xs-3 col-sm-4 text-right" v-if="item.cpEndStatus == 1">\n                                                    <span class="rewards-day">D-{{ item.cpDday }}</span>\n                                                </div>\n                                            </div>\n\n                                            <div class="progress">\n                                                <div v-if="(item.cpRecStatus == 2 && item.cpEndStatus == 1) || (item.cpRecStatus == 2 && item.cpEndStatus == 2 || item.cpEndStatus == 3)" class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" :style="{width: item.achievement + \'%\'}"><span class="sr-only">{{ item.achievement }}% 완료</span></div>\n                                            </div>\n\n                                            <div class="row row-mobile-n">\n                                                <div class="col-xs-8">\n                                                    <div class="invest-support">목표금액 {{ parseInt(item.tgAmount).toLocaleString() }}</div>\n                                                </div>\n                                                <div class="col-xs-4 text-right" v-if="(item.cpRecStatus == 2 && item.cpEndStatus == 1) || (item.cpRecStatus == 2 && item.cpEndStatus == 2 || item.cpEndStatus == 3)">\n                                                    <div class="invest-support last-child">{{ parseInt(item.sponserCount).toLocaleString() }}명 후원</div>\n                                                </div>\n                                            </div>\n                                        </a>\n\n                                        <div class="mp-btn">\n                                            <div class="row row-mobile-n" v-if="item.cpRecStatus == 0">\n                                                <div class="col-xs-6">\n                                                    <a class="btn btn-block btn-sm btn-default-outline" v-on:click="projectDelete(item.cpCode, item.cpTitle)">삭제하기</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-sm hidden-md hidden-lg">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="modifyModal($event)">수정하기</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-xs">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="modify(item.cpCode, $event)">수정하기</a>\n                                                </div>\n                                            </div>\n                                            <div class="row row-mobile-n" v-if="item.cpRecStatus == 1">\n                                                <div class="col-xs-6">\n                                                    <a class="btn btn-block btn-sm btn-default-outline" v-on:click="projectDelete(item.cpCode, item.cpTitle)">삭제하기</a>\n                                                </div>\n                                                <div class="col-xs-6">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="approvalRequestCancelModal(item.cpCode, item.cpTitle)">승인요청취소</a>\n                                                </div>\n                                            </div>                                            \n                                            <div class="row row-mobile-n" v-if="item.cpRecStatus == 2 && item.cpEndStatus == 1">\n                                                <div class="col-xs-6">\n                                                    <a v-on:click="dashboard(item.cpAliasUrl, $event)" class="btn btn-block btn-sm btn-default-outline">펀딩현황</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-sm hidden-md hidden-lg">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="modifyModal($event)">프로젝트 보기</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-xs">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="modify(item.cpCode, $event)">프로젝트 보기</a>\n                                                </div>\n                                            </div>\n                                            <div class="row row-mobile-n" v-if="item.cpRecStatus == 2 && item.cpEndStatus == 2 || item.cpEndStatus == 3">\n                                                <div class="col-xs-8 col-xs-offset-2">\n                                                    <a v-on:click="result(item.cpAliasUrl, $event)" class="btn btn-block btn-sm btn-primary-outline">프로젝트 결과보기</a>\n                                                </div>\n                                            </div>\n                                            <div class="row row-mobile-n" v-if="item.cpRecStatus == 2 && item.cpEndStatus == 0">\n                                                <div class="col-xs-8 col-xs-offset-2">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="projectStart(item.cpCode, item.cpTitle)">즉시시작</a>\n                                                </div>\n                                            </div>\n                                            <div class="row row-mobile-n" v-if="item.cpRecStatus == 3">\n                                                <div class="col-xs-6 hidden-sm hidden-md hidden-lg">\n                                                    <a class="btn btn-block btn-sm btn-default-outline" v-on:click="modifyModal($event)">수정하기</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-xs">\n                                                    <a class="btn btn-block btn-sm btn-default-outline" v-on:click="modify(item.cpCode, $event)">수정하기</a>\n                                                </div>\n                                                <div class="col-xs-6">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="rejectReasonModal(item.transContent)">반려사유보기</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </figcaption>\n                                </div>\n                            </figure>\n                        </div>\n                        \x3c!-- //Loop --\x3e\n                    </div>\n                </div>\n\n                \x3c!-- 페이징 --\x3e\n                <nav class="text-center mt30 mb20" >\n                    <paginate\n                        :page-count="pageCount"\n                        :class="\'pagination\'"\n                        :click-handler="nextPage"\n                        :force-page="forcePage"\n                        >\n                    </paginate>\n                </nav>\n                \x3c!-- //페이징 --\x3e\n\n                \x3c!-- 삭제하기 --\x3e\n                <div id="deleteModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                <div>{{title}} 프로젝트를 삭제하시겠습니까?</div>\n                                <div class="mt5">삭제한 프로젝트는 다시 복구할 수 없습니다.</div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="pointerCursor" data-dismiss="modal">취소</a>\n                                    <a class="ml30 modalRedBtn" v-on:click="deleteModalConfirm">삭제</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //삭제하기 --\x3e\n\n                \x3c!-- 승인요청취소 --\x3e\n                <div id="cancelModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                <div v-html="title"></div>\n                                <div class="mt5">취소하시겠습니까?</div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="modalBlueBtn" data-dismiss="modal">아니오</a>\n                                    <a class="ml30 pointerCursor" v-on:click="approvalRequestCancelModalConfirm">예</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //승인요청취소 --\x3e\n\n                \x3c!-- 수정하기 --\x3e\n                <div id="modifyModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                프로젝트 스토리 수정은 <br />PC에서만 가능한 기능입니다.\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="modalBlueBtn" data-dismiss="modal">확인</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //수정하기 --\x3e\n\n                \x3c!-- 반려사유 --\x3e\n                <div class="modal fade" id="aRejectedModal" role="dialog" tabindex="-1">\n                    <div class="modal-dialog modal-sm">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                <div>승인이 반려되었습니다.</div>\n                                <div class="mt5" v-html="rejectReason" v-if="rejectReason!=\'\'">\n                                    반려사유 : \n                                </div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="modalBlueBtn" data-dismiss="modal">확인</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //반려사유 --\x3e\n\n                \x3c!-- 즉시시작 --\x3e\n                <div id="startModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                <div>프로젝트를 시작하시겠습니까?</div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="pointerCursor" data-dismiss="modal">취소</a>\n                                    <a v-on:click="projectStartConfirm" class="ml30 modalBlueBtn">바로 시작하기</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //즉시시작 --\x3e\n\n            </div>\n            ',
                        props: ["code"],
                        data: function() {
                            return {
                                makedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                search: {
                                    memCode: userInfo.memCode,
                                    paging: {
                                        page: "1",
                                        count: "6"
                                    }
                                },
                                updateData: {
                                    cpCode: ""
                                },
                                rejectReason: "",
                                title: "",
                                check: !1
                            }
                        },
                        created: function() {
                            this.load()
                        },
                        components: {
                            paginate: VuejsPaginate
                        },
                        methods: {
                            load: function() {
                                var e = this;
                                axios.post("/data/mypage/maked/reward", e.search).then(function(t) {
                                    var n = parseInt(t.data.rData.count % e.search.paging.count),
                                        a = 0;
                                    n > 0 && a++, e.pageCount = parseInt(t.data.rData.count / e.search.paging.count) + a, e.makedList = t.data.rData.data
                                })
                            },
                            nextPage: function(e) {
                                this.forcePage = e - 1, this.search.paging.page = e, this.load()
                            },
                            detail: function(e) {
                                this.check = !1, 0 == e.cpRecStatus || 1 == e.cpRecStatus || 2 == e.cpRecStatus && 0 == e.cpEndStatus || 3 == e.cpRecStatus || window.open("/r/" + e.cpAliasUrl, "_self")
                            },
                            result: function(e, t) {
                                this.check = !this.check, this.check && (t.stopPropagation(), window.open("/dashboard/reward/" + e, "_self"))
                            },
                            dashboard: function(e, t) {
                                this.check = !this.check, this.check && (t.stopPropagation(), window.open("/dashboard/reward/" + e, "_self"))
                            },
                            projectDelete: function(e, t) {
                                var n = this;
                                $("#deleteModal").modal("show"), this.updateData.cpCode = e, n.title = t
                            },
                            deleteModalConfirm: function() {
                                var e = this;
                                axios.post("/set/save/maked/reward/delete", e.updateData).then(function(t) {
                                    "0000" == t.data.rCode ? (noti.open("삭제되었습니다."), $("#deleteModal").modal("hide"), e.load()) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            approvalRequestCancelModal: function(e, t) {
                                var n = this;
                                $("#cancelModal").modal("show"), this.updateData.cpCode = e, n.title = "[ " + t + "] 프로젝트 승인요청을 취소합니다"
                            },
                            approvalRequestCancelModalConfirm: function() {
                                var e = this;
                                axios.post("/set/save/maked/reward/approvalRequestCancel", e.updateData).then(function(t) {
                                    "0000" == t.data.rCode ? (noti.open("승인요청 취소 되었습니다."), $("#cancelModal").modal("hide"), e.load()) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            rejectReasonModal: function(e) {
                                var t = this;
                                $("#aRejectedModal").modal("show"), t.rejectReason = "반려사유 : " + e
                            },
                            projectStart: function(e, t) {
                                $("#startModal").modal("show");
                                var n = this;
                                this.updateData.cpCode = e, n.title = t
                            },
                            projectStartConfirm: function() {
                                var e = this;
                                axios.post("/set/save/maked/reward/start", e.updateData).then(function(t) {
                                    "0000" == t.data.rCode ? (noti.open("프로젝트가 시작되었습니다!"), $("#startModal").modal("hide"), e.load()) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            checkImg: function(e) {
                                return null != e && e.length > 0 && "//" == e.substring(0, 2) && (e = e.substring(2, e.length)), null != e && "" != e ? e : "image-se.ycrowdy.com/logo/project-default-1.png"
                            },
                            modify: function(e, t) {
                                this.check = !this.check, this.check && (this.check = !1, t.stopPropagation(), window.open("/make/reward/main/" + e, "_self"))
                            },
                            modifyModal: function(e) {
                                this.check = !this.check, this.check && (this.check = !1, e.stopPropagation(), $("#modifyModal").modal("show"))
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div>\n                <div class="rewards-list mp-list">\n                    <div class="row row-mobile">\n                        \x3c!-- Loop --\x3e\n                        <div class="col-sm-6 col-md-4" v-for="item in makedList" v-on:click="detail(item, $event)">\n                            <figure>\n                                <div class="items over-box">\n                                    <a href="javascript:void(0)">\n                                        <div class="items_img">\n                                            <img :src="\'//\' + checkImg(item.cpCardImg) + \'/ycrowdy/resize/!340x!226\'" class="img-responsive" alt="" />\n                                        </div>\n                                    </a>\n                                    <figcaption class="rewards-caption">\n                                        <a href="javascript:void(0)">\n                                            <span class="btn btn-xs btn-danger-outline" v-if="item.cpRecStatus == 0">제작중</span>\n                                            <span class="btn btn-xs btn-danger-outline" v-if="item.cpRecStatus == 1">승인요청중</span>\n                                            <span class="btn btn-xs btn-primary-outline btn_cursor" v-if="item.cpRecStatus == 2 && item.cpEndStatus == 1">진행중</span>\n                                            <span class="btn btn-xs btn-default-outline" v-if="item.cpRecStatus == 2 && item.cpEndStatus == 2 || item.cpEndStatus == 3">종료</span>\n                                            <span class="btn btn-xs btn-danger-outline" v-if="item.cpRecStatus == 2 && item.cpEndStatus == 0">승인요청완료</span>\n                                            <span class="btn btn-xs btn-danger-outline" v-if="item.cpRecStatus == 3">승인반려</span>\n                                            <div class="rewards-subject">\n                                                <strong>{{ item.cpTitle }}</strong>\n                                                \x3c!--<div class="rewards-summury">{{ item.memName }}</div>--\x3e\n                                            </div>\n\n                                            <div class="row row-mobile-n">\n                                                <div class="col-xs-9 col-sm-8">\n                                                    <span class="rewards-price"><span class="webfont2"></span>{{ parseInt(item.sponserAmount).toLocaleString() }}</span> <span class="rewards-percent">{{ item.achievement }}%</span>\n                                                    </div>\n                                                <div class="col-xs-3 col-sm-4 text-right" v-if="item.cpEndStatus == 1">\n                                                    <span class="rewards-day">D-{{ item.cpDday }}</span>\n                                                </div>\n                                            </div>\n\n                                            <div class="progress">\n                                                <div v-if="(item.cpRecStatus == 2 && item.cpEndStatus == 1) || (item.cpRecStatus == 2 && item.cpEndStatus == 2 || item.cpEndStatus == 3)" class="progress-bar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" :style="{width: item.achievement + \'%\'}"><span class="sr-only">{{ item.achievement }}% 완료</span></div>\n                                            </div>\n\n                                            <div class="row row-mobile-n">\n                                                <div class="col-xs-8">\n                                                    <div class="invest-support">목표금액 {{ parseInt(item.tgAmount).toLocaleString() }}</div>\n                                                </div>\n                                                <div class="col-xs-4 text-right" v-if="(item.cpRecStatus == 2 && item.cpEndStatus == 1) || (item.cpRecStatus == 2 && item.cpEndStatus == 2 || item.cpEndStatus == 3)">\n                                                    <div class="invest-support last-child">{{ parseInt(item.sponserCount).toLocaleString() }}명 후원</div>\n                                                </div>\n                                            </div>\n                                        </a>\n\n                                        <div class="mp-btn">\n                                            <div class="row row-mobile-n" v-if="item.cpRecStatus == 0">\n                                                <div class="col-xs-6">\n                                                    <a class="btn btn-block btn-sm btn-default-outline" v-on:click="projectDelete(item.cpCode, item.cpTitle)">삭제하기</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-sm hidden-md hidden-lg">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="modifyModal($event)">수정하기</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-xs">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="modify(item.cpCode, $event)">수정하기</a>\n                                                </div>\n                                            </div>\n                                            <div class="row row-mobile-n" v-if="item.cpRecStatus == 1">\n                                                <div class="col-xs-6">\n                                                    <a class="btn btn-block btn-sm btn-default-outline" v-on:click="projectDelete(item.cpCode, item.cpTitle)">삭제하기</a>\n                                                </div>\n                                                <div class="col-xs-6">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="approvalRequestCancelModal(item.cpCode, item.cpTitle)">승인요청취소</a>\n                                                </div>\n                                            </div>                                            \n                                            <div class="row row-mobile-n" v-if="item.cpRecStatus == 2 && item.cpEndStatus == 1">\n                                                <div class="col-xs-6">\n                                                    <a v-on:click="dashboard(item.cpAliasUrl, $event)" class="btn btn-block btn-sm btn-default-outline">펀딩현황</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-sm hidden-md hidden-lg">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="modifyModal($event)">수정하기</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-xs">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="modify(item.cpCode, $event)">수정하기</a>\n                                                </div>\n                                            </div>\n                                            <div class="row row-mobile-n" v-if="item.cpRecStatus == 2 && item.cpEndStatus == 2 || item.cpEndStatus == 3">\n                                                <div class="col-xs-8 col-xs-offset-2">\n                                                    <a v-on:click="result(item.cpAliasUrl, $event)" class="btn btn-block btn-sm btn-primary-outline">프로젝트 결과보기</a>\n                                                </div>\n                                            </div>\n                                            <div class="row row-mobile-n" v-if="item.cpRecStatus == 2 && item.cpEndStatus == 0">\n                                                <div class="col-xs-8 col-xs-offset-2">\n                                                    \x3c!-- <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="projectStart(item.cpCode, item.cpTitle)">즉시시작</a> --\x3e\n                                                    <a class="btn btn-block btn-sm btn-primary-outline">시작대기중</a>\n                                                </div>\n                                                </div>\n                                            <div class="row row-mobile-n" v-if="item.cpRecStatus == 3">\n                                                <div class="col-xs-6 hidden-sm hidden-md hidden-lg">\n                                                    <a class="btn btn-block btn-sm btn-default-outline" v-on:click="modifyModal($event)">수정하기</a>\n                                                </div>\n                                                <div class="col-xs-6 hidden-xs">\n                                                    <a class="btn btn-block btn-sm btn-default-outline" v-on:click="modify(item.cpCode, $event)">수정하기</a>\n                                                </div>\n                                                <div class="col-xs-6">\n                                                    <a class="btn btn-block btn-sm btn-primary-outline" v-on:click="rejectReasonModal(item.transContent)">반려사유보기</a>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </figcaption>\n                                </div>\n                            </figure>\n                        </div>\n                        \x3c!-- //Loop --\x3e\n                    </div>\n                </div>\n\n                \x3c!-- 페이징 --\x3e\n                <nav class="text-center mt30 mb20" >\n                    <paginate\n                        :page-count="pageCount"\n                        :class="\'pagination\'"\n                        :click-handler="nextPage"\n                        :force-page="forcePage"\n                        >\n                    </paginate>\n                </nav>\n                \x3c!-- //페이징 --\x3e\n\n                \x3c!-- 삭제하기 --\x3e\n                <div id="deleteModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                <div> {{title}} 프로젝트를 삭제하시겠습니까?</div>\n                                <div class="mt5">삭제한 프로젝트는 다시 복구할 수 없습니다.</div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="pointerCursor" data-dismiss="modal">취소</a>\n                                    <a class="ml30 modalRedBtn" v-on:click="deleteModalConfirm">삭제</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //삭제하기 --\x3e\n\n                \x3c!-- 승인요청취소 --\x3e\n                <div id="cancelModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                <div v-html="title"></div>\n                                <div class="mt5">취소하시겠습니까?</div>\n                            </div>\n                            <div class="modal-footer ">\n                                <div class="row not-space">\n                                    <a class="pointerCursor" data-dismiss="modal">아니오</a>\n                                    <a class="ml30 modalBlueBtn" v-on:click="approvalRequestCancelModalConfirm">예</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //승인요청취소 --\x3e\n\n                \x3c!-- 수정하기 --\x3e\n                <div id="modifyModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                프로젝트 스토리 수정은 <br/>PC에서만 가능한 기능입니다.\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="modalBlueBtn" data-dismiss="modal">확인</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //수정하기 --\x3e\n\n                \x3c!-- 반려사유 --\x3e\n                <div class="modal fade" id="aRejectedModal" role="dialog" tabindex="-1">\n                    <div class="modal-dialog modal-sm">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                승인이 반려되었습니다.\n                                <div class="mt5" v-html="rejectReason">\n                                    반려사유 : \n                                </div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="modalBlueBtn" data-dismiss="modal">확인</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //반려사유 --\x3e\n\n                \x3c!-- 즉시시작 --\x3e\n                <div id="startModal" class="modal fade" tabindex="-1" role="dialog">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                <div v-html="title"></div>\n                                <div class="mt5">프로젝트를 시작하시겠습니까?</div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="pointerCursor" data-dismiss="modal">취소</a>\n                                    <a class="ml30 modalBlueBtn" v-on:click="projectStartConfirm">시작</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- //즉시시작 --\x3e\n\n            </div>\n            ',
                        props: ["code"],
                        data: function() {
                            return {
                                makedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                search: {
                                    memCode: userInfo.memCode,
                                    paging: {
                                        page: "1",
                                        count: "6"
                                    }
                                },
                                updateData: {
                                    cpCode: ""
                                },
                                rejectReason: "",
                                title: "",
                                check: !1
                            }
                        },
                        created: function() {
                            this.load()
                        },
                        components: {
                            paginate: VuejsPaginate
                        },
                        methods: {
                            load: function() {
                                var e = this;
                                axios.post("/data/mypage/maked/simulation", e.search).then(function(t) {
                                    var n = parseInt(t.data.rData.count % e.search.paging.count),
                                        a = 0;
                                    n > 0 && a++, e.pageCount = parseInt(t.data.rData.count / e.search.paging.count) + a, e.makedList = t.data.rData.data
                                })
                            },
                            nextPage: function(e) {
                                this.forcePage = e - 1, this.search.paging.page = e, this.load()
                            },
                            detail: function(e) {
                                this.check = !1, 0 == e.cpRecStatus || 1 == e.cpRecStatus || 2 == e.cpRecStatus && 0 == e.cpEndStatus || 3 == e.cpRecStatus || window.open("/sr/" + e.cpAliasUrl, "_self")
                            },
                            result: function(e, t) {
                                this.check = !this.check, this.check && (t.stopPropagation(), window.open("/dashboard/reward/" + e, "_self"))
                            },
                            dashboard: function(e, t) {
                                this.check = !this.check, this.check && (t.stopPropagation(), window.open("/dashboard/reward/" + e, "_self"))
                            },
                            projectDelete: function(e, t) {
                                var n = this;
                                $("#deleteModal").modal("show"), this.updateData.cpCode = e, n.title = t
                            },
                            deleteModalConfirm: function() {
                                var e = this;
                                axios.post("/set/save/maked/reward/delete", e.updateData).then(function(t) {
                                    "0000" == t.data.rCode ? (noti.open("삭제되었습니다."), $("#deleteModal").modal("hide"), e.load()) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            approvalRequestCancelModal: function(e, t) {
                                var n = this;
                                $("#cancelModal").modal("show"), this.updateData.cpCode = e, n.title = "[ " + t + "] 프로젝트 승인요청을 취소합니다"
                            },
                            approvalRequestCancelModalConfirm: function() {
                                var e = this;
                                axios.post("/set/save/maked/reward/approvalRequestCancel", e.updateData).then(function(t) {
                                    "0000" == t.data.rCode ? (noti.open("승인요청 취소 되었습니다."), $("#cancelModal").modal("hide"), e.load()) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            rejectReasonModal: function(e) {
                                var t = this;
                                $("#aRejectedModal").modal("show"), t.rejectReason = "반려사유 : " + e
                            },
                            projectStart: function(e, t) {
                                $("#startModal").modal("show");
                                var n = this;
                                this.updateData.cpCode = e, n.title = t
                            },
                            projectStartConfirm: function() {
                                var e = this;
                                axios.post("/set/save/maked/reward/start", e.updateData).then(function(t) {
                                    "0000" == t.data.rCode ? (noti.open("프로젝트가 시작되었습니다."), $("#startModal").modal("hide"), e.load()) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            checkImg: function(e) {
                                return null != e && "" != e ? e : "image-se.ycrowdy.com/logo/project-default-1.png"
                            },
                            modify: function(e, t) {
                                this.check = !this.check, this.check && (this.check = !1, t.stopPropagation(), window.open("/make/simulation/main/" + e, "_self"))
                            },
                            modifyModal: function(e) {
                                this.check = !this.check, this.check && (this.check = !1, e.stopPropagation(), $("#modifyModal").modal("show"))
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t, n) {
        return t in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e
    }

    function i(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        o = function() {
            function e() {
                i(this, e)
            }
            return s(e, [{
                key: "component",
                value: function() {
                    var e;
                    return e = {
                        template: '\n            <div class="container">\n                <div class="row not-space">\n                    \n                    \x3c!--sub menu--\x3e\n                    \x3c!--pc & tablet--\x3e \n                    <div class="col-md-2 col-sm-3 hidden-xs">\n                        <div class="mypage-setting-sub-box webfont2">\n                            <div :class="{\'mypage-setting-name\' : userType == 1, \'mypage-setting-name-1\' : userType != 1}">{{userName}}님</div>\n                            <div class="mypage-setting-email">{{userEmail}}</div>\n                            <ul>\n                                <li class="w50" :class="{\'active\' : type == 1}"><a href="javascript:void(0)" v-on:click="subMenuChange(1)">계정 설정</a></li>\n                                <li class="w50" :class="{\'active\' : type == 2}"><a href="javascript:void(0)" v-on:click="subMenuChange(2)">투자 설정</a></li>\n                                <li class="w50" :class="{\'active\' : type == 3}"><a href="javascript:void(0)" v-on:click="subMenuChange(3)">간편결제 카드 설정</a></li>\n                            </ul>\n                            <div class="clearfix"></div>\n                        </div>\n                    </div>\n                    \x3c!-- //pc & tablet--\x3e \n\n                    \x3c!--mobile--\x3e \n                    <div class="visible-xs-block mt30">\n                        <div class="common-default-flex">\n                            <div class="mypage-sub-menu" :class="{\'mypage-sub-menu-on\' : type == 1}" v-on:click="subMenuChange(1)">계정 설정</div>\n                            <div class="mypage-sub-menu" :class="{\'mypage-sub-menu-on\' : type == 2}" v-on:click="subMenuChange(2)">투자 설정</div>\n                            <div class="mypage-sub-menu" :class="{\'mypage-sub-menu-on\' : type == 3}" v-on:click="subMenuChange(3)">간편 결제</div>\n                        </div>\n                    </div>\n                    \x3c!--//mobile--\x3e \n                    \x3c!--//sub menu--\x3e\n\n                    <div class="col-md-8 col-sm-8">\n\n                        <myaccount1 v-if="type == 1 && userType == 1" :naver-oauth="naverOauth" :certiInfo="certiParam" :status="param" v-on:set-ci-confirm-flag="setCiConfirmFlag" ></myaccount1>\n                        <myaccount2 v-if="type == 1 && (userType == 2 || userType == 3)" :certiInfo="certiParam" :status="param" v-on:set-ci-confirm-flag="setCiConfirmFlag"></myaccount2>\n                        \n                        <mymember1 v-if="type == 2 && investorState == false && virtualState == false" v-on:change-register-ivs-info="changeRegisterIvsInfo" v-on:change-virtual-account="changeVirtualAccount" :status="param" ></mymember1>\n                        <mymember2 v-if="type == 2 && investorState == true && userType == 1 && virtualState == false" v-on:set-ci-confirm-flag="setCiConfirmFlag" v-on:change-register-ivs-info="changeRegisterIvsInfo" :status="param" :certiInfo="certiParam"></mymember2>\n                        <mymember3 v-if="type == 2 && investorState == true && userType == 2 && virtualState == false" v-on:set-ci-confirm-flag="setCiConfirmFlag" v-on:change-register-ivs-info="changeRegisterIvsInfo" :status="param" :certiInfo="certiParam"></mymember3>\n                        <mymember4 v-if="type == 2 && investorState == true && userType == 3 && virtualState == false" v-on:set-ci-confirm-flag="setCiConfirmFlag" v-on:change-register-ivs-info="changeRegisterIvsInfo" :status="param" :certiInfo="certiParam"></mymember4>\n                        \n                        <virtualAccount v-if="type == 2 && virtualState == true && withdrawAccountFlag == false" :bankStatus="param.bankStatus" :virtualAccountConfirm="param.virtualAccountConfirm" :memCiConfirm="param.memCiConfirm" v-on:change-withdraw-flag="changeWithdrawFlag" v-on:set-ci-confirm-flag="setCiConfirmFlag" v-on:set-virtual-account-flag="setVirtualAccountFlag"></virtualAccount>\x3c!--가상계좌--\x3e\n                        <withdrawAccount v-if="type == 2 && virtualState == true && withdrawAccountFlag == true" :bankStatus="param.bankStatus" v-on:change-withdraw-flag="changeWithdrawFlag"></withdrawAccount>\x3c!--출금계좌 --\x3e\n                        \n                        <setting-payment v-if="type == 3"></setting-payment>\n                    </div>\n                </div>\n            </div>   \n            ',
                        props: ["subMenu", "naverOauth", "accountMenu"],
                        data: function() {
                            return {
                                type: this.subMenu,
                                registerIvsInfo: !1,
                                virtualFlag: !1,
                                withdrawAccountFlag: !1,
                                param: {
                                    investor: "",
                                    memIvsState: "",
                                    memIvsType: "",
                                    bankStatus: "0",
                                    virtualAccountConfirm: "N",
                                    memCiConfirm: "N"
                                },
                                certiParam: {
                                    memTelNo: "",
                                    memBirth: "",
                                    memName: "",
                                    memSex: "",
                                    memCiConfirm: "",
                                    birth: ""
                                },
                                userName: userInfo.name,
                                userEmail: userInfo.email,
                                request: {
                                    memCode: userInfo.memCode
                                }
                            }
                        },
                        components: {},
                        created: function() {
                            this.loadInvestState(), 1 == this.accountMenu && (this.virtualFlag = !0, this.param.virtualAccountConfirm = "Y")
                        }
                    }, a(e, "components", {
                        myaccount1: n(35).default.component(),
                        myaccount2: n(36).default.component(),
                        mymember1: n(31).default.component(),
                        mymember2: n(32).default.component(),
                        mymember3: n(33).default.component(),
                        mymember4: n(34).default.component(),
                        virtualAccount: n(38).default.component(),
                        withdrawAccount: n(39).default.component(),
                        settingPayment: n(37).default.component()
                    }), a(e, "computed", {
                        userType: function() {
                            return userInfo.type
                        },
                        investorState: function() {
                            return !!this.registerIvsInfo
                        },
                        virtualState: function() {
                            return !!this.virtualFlag
                        }
                    }), a(e, "methods", {
                        loadInvestState: function() {
                            var e = this;
                            $(".page-loader-more").fadeIn(""), axios.post("/data/member/investor/state", this.request).then(function(t) {
                                $(".page-loader-more").fadeOut(""), e.param = t.data.rData, "Y" == e.param.memCiConfirm && e.getStatusInfo()
                            })
                        },
                        getStatusInfo: function() {
                            var e = this;
                            $(".page-loader-more").fadeIn(""), axios.post("/data/member/certi/info", this.request).then(function(t) {
                                $(".page-loader-more").fadeOut(""), e.certiParam = t.data.rData, e.certiParam.birth = e.certiParam.memBirth.substring(2, 8)
                            })
                        },
                        subMenuChange: function(e) {
                            "2" == e ? (this.registerIvsInfo = !1, this.virtualFlag = !1, this.withdrawAccountFlag = !1, this.type = e) : this.type = e
                        },
                        changeRegisterIvsInfo: function(e) {
                            this.registerIvsInfo = !!e
                        },
                        changeVirtualAccount: function(e) {
                            this.virtualFlag = !!e
                        },
                        changeWithdrawFlag: function(e) {
                            e ? (this.withdrawAccountFlag = !0, this.loadInvestState()) : this.withdrawAccountFlag = !1
                        },
                        setCiConfirmFlag: function(e) {
                            e ? (this.param.memCiConfirm = "Y", this.loadInvestState()) : this.param.memCiConfirm = "N"
                        },
                        setVirtualAccountFlag: function(e) {
                            e ? (this.param.virtualAccountConfirm = "Y", this.loadInvestState()) : this.param.virtualAccountConfirm = "N"
                        }
                    }), e
                }
            }]), e
        }();
    t.default = new o
}, function(e, t, n) {
    window.mypage = {}, mypage.main = n(28).default, mypage.liked = n(13).default, mypage.alarm = n(23).default, mypage.setting = n(17).default, mypage.fundedreward = n(11).default, mypage.fundedinvest = n(10).default, mypage.fundedsimulation = n(12).default
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n\t\t\t\t<input class="form-control datetimepicker"/>\n\t\t\t',
                        props: {
                            dateFormat: {
                                default: "yy-mm-dd"
                            },
                            date: {
                                type: String,
                                required: !0
                            },
                            max: {
                                type: String,
                                required: !1,
                                default: null
                            },
                            min: {
                                type: String,
                                required: !1,
                                default: null
                            }
                        },
                        watch: {
                            date: function() {
                                $(this.$el).datepicker("setDate", this.date)
                            }
                        },
                        mounted: function() {
                            var e = this;
                            $(this.$el).datepicker({
                                dateFormat: e.dateFormat,
                                prevText: "이전 달",
                                nextText: "다음 달",
                                monthNames: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
                                monthNamesShort: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
                                dayNames: ["일", "월", "화", "수", "목", "금", "토"],
                                dayNamesShort: ["일", "월", "화", "수", "목", "금", "토"],
                                dayNamesMin: ["일", "월", "화", "수", "목", "금", "토"],
                                showMonthAfterYear: !0,
                                yearSuffix: "년",
                                onSelect: function(t) {
                                    e.$emit("input", t)
                                },
                                beforeShow: function(e) {
                                    $(e).css({
                                        "z-index": 999999
                                    })
                                },
                                maxDate: e.max,
                                minDate: e.min
                            }).datepicker("setDate", e.date)
                        },
                        beforeDestroy: function() {
                            $(this.$el).datepicker("hide").datepicker("destroy")
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n\t\t\t\t<div>\t\n\t\t\t\t\t\x3c!-- 결제자 휴대폰 번호 --\x3e\n                    <div class="form-group row-mobile-n">\n                        <label for="delivery_mobile" class="col-sm-12 control-label funding-page-area">\n                            <label class="text-left">\n                                결제자 휴대폰 번호\n                            </label>\n                        </label>\n                        <div class="col-sm-6">\n                            <div class="row row-mobile-n">\n                                <div class="col-xs-8 col-sm-8">\n                                    <number-input :type="\'tel\'" class="form-control funding-page-area-input" :num="mobileNo" v-model="mobileNo" minlength="10" maxlength="11" :disabled="certiCheck == 3"></number-input>\n                                </div>\n                                <span class="crowdy-funding-certiBtn" v-on:click="phoneCertiRequest">{{certiBtnWord}}</span>\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- //결제자 휴대폰 번호 --\x3e\n\n                    \x3c!-- 인증 입력 부분 --\x3e\n                    <div class="form-group row-mobile-n funding-page-area mb0" v-if="certiNumDisplay">\n                        <div class="col-sm-6">\n                            <div class="row row-mobile-n">\n                                <div class="col-xs-7 col-sm-8">\n                                    <number-input :type="\'tel\'" class="form-control funding-page-area-input" :num="mobileRequest.authNo" v-model="mobileRequest.authNo" maxlength="11"></number-input>\n                                </div>\n                                <span>{{ time }}</span>  \n                                <span class="crowdy-funding-certiBtn" v-on:click="mobileAuth">확인</span>\n                            </div>    \n                            <p class="noti-word2 crowdy-color-blue mb0">통신사의 사정에 따라 문자 수신이 다소 늦어질 수 있습니다.</p>\n                        </div>\n                    </div>\n                    \x3c!-- //인증 입력 부분 --\x3e\n\n                    <form name="form_chk" method="post">\n                        <input type="hidden" name="m" value="checkplusSerivce">              \x3c!-- 필수 데이타로, 누락하시면 안됩니다. --\x3e\n                        <input type="hidden" name="EncodeData" id="encodeData" value="">     \x3c!-- 위에서 업체정보를 암호화 한 데이타입니다. --\x3e\n                        <input type="hidden" name="param_r1" value="accountSetting.authResult">\n                        <input type="hidden" name="param_r2" value="">\n                        <input type="hidden" name="param_r3" value="">\n                    </form>\n\t\t\t\t</div>\n\t\t\t',
                        props: [],
                        data: function() {
                            return {
                                certiCheck: 1,
                                mobileNo: "",
                                mobileRequest: {
                                    mobileNo: "",
                                    reqSeq: "",
                                    authNo: ""
                                },
                                certiBtnWord: "인증요청",
                                certiNumDisplay: !1,
                                time: "5:00",
                                timerStart: !1,
                                timeOut: !1,
                                isCntdownRestart: !1,
                                timer: {}
                            }
                        },
                        created: function() {
                            this.load()
                        },
                        components: {
                            numberInput: n(0).default.component()
                        },
                        watch: {
                            certiCheck: function() {
                                1 == this.certiCheck ? this.certiBtnWord = "인증요청" : 2 == this.certiCheck ? this.certiBtnWord = "재요청" : this.certiBtnWord = "번호변경", this.setMobileNo()
                            }
                        },
                        methods: {
                            setMobileNo: function() {
                                var e = {
                                    mobileNo: this.mobileNo,
                                    certiCheck: this.certiCheck
                                };
                                this.$emit("set-mobile-no", e)
                            },
                            load: function() {
                                var e = this;
                                axios.post("/data/member/certi/info", {
                                    memCode: userInfo.memCode
                                }).then(function(t) {
                                    if ("0000" != t.data.rCode) return void noti.open(t.data.rMsg);
                                    var n = t.data.rData;
                                    null != n.memTelNo && "" != n.memTelNo ? (e.mobileNo = n.memTelNo, e.certiCheck = 3) : e.certiCheck = 1, e.setMobileNo()
                                })
                            },
                            phoneCertiRequest: function() {
                                var e = this;
                                if (userInfo.loginConfirm()) {
                                    if (3 == e.certiCheck) return void(e.certiCheck = 1);
                                    if (e.mobileNo.length < 10) return void noti.open("휴대폰 번호를 모두 입력해 주세요.");
                                    e.mobileRequest.mobileNo = e.mobileNo, e.mobileRequest.authNo = "", e.isCntdownRestart = !0, axios.post("/auth/mobile", this.mobileRequest).then(function(t) {
                                        if (!t.data) return void noti.open("인증번호 수신 서비스 오류로 인해 인증을 하실 수 없습니다. 문제를 해결 중이니 잠시 후 다시 시도해주세요. 이용에 불편을 드려서 죄송합니다.");
                                        2 == e.certiCheck && noti.open("인증번호가 다시 전송되었습니다."), e.mobileRequest.reqSeq = t.data, e.certiNumDisplay = !0, e.certiCheck = 2, e.timerStart = !0, e.countdown(e.countdownTimeOut)
                                    })
                                }
                            },
                            mobileAuth: function() {
                                var e = this;
                                if (e.mobileRequest.mobileNo != e.mobileNo) return noti.open("다시 인증해주세요."), e.certiCheck = 1, void(e.certiNumDisplay = !1);
                                axios.post("/auth/mobile/result", this.mobileRequest).then(function(t) {
                                    if (clearTimeout(e.timer), e.timerStart = !1, !t.data) return void noti.open("인증번호가 유효하지 않습니다.");
                                    e.certiSave(), noti.open("휴대폰 인증이 완료되었습니다.")
                                })
                            },
                            certiSave: function() {
                                var e = this,
                                    t = {
                                        memCode: userInfo.memCode,
                                        memTelNo: e.mobileNo
                                    };
                                axios.post("/data/member/sms-certi", t).then(function(t) {
                                    if ("0000" != t.data.rCode) return void noti.open(t.data.rMsg);
                                    e.certiNumDisplay = !1, e.initData()
                                })
                            },
                            initData: function() {
                                this.time = "5:00", this.timerStart = !1, this.timeOut = !1, this.isCntdownRestart = !0, this.timer = {}, this.certiCheck = 3, this.mobileRequest.authNo = "", this.setMobileNo()
                            },
                            countdown: function(e) {
                                function t(e) {
                                    return e <= 9 ? "0" + e : e
                                }

                                function n() {
                                    c.isCntdownRestart && (c.time = "", c.isCntdownRestart = !1, clearTimeout(c.timer), l = 4, d = 59, a = +new Date + 1e3 * (60 * l + d) + 500), o = a - +new Date, o < 1e3 ? e() : (r = new Date(o), i = r.getUTCHours(), s = r.getUTCMinutes(), c.time = (i ? i + ":" + t(s) : s) + ":" + t(r.getUTCSeconds()), c.timer = setTimeout(n, r.getUTCMilliseconds() + 500))
                                }
                                var a, i, s, o, r, l = 4,
                                    d = 59,
                                    c = this;
                                a = +new Date + 1e3 * (60 * l + d) + 500, n()
                            },
                            countdownTimeOut: function() {
                                this.timeOut = !0, this.timerStart = !1, this.certiCheck = 1, this.certiNumDisplay = !1, noti.open("다시 인증해주세요.")
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n\t\t\t\t<div>\t\n\t\t\t\t    \x3c!-- 핀번호 입력 팝업 --\x3e\n                    <div id="pinModal" class="payment-modal modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">\n                        <div class="modal-dialog" role="document">\n                            <div class="modal-content payment-content">\n                                <div class="modal-header">\n                                    <div class="payment-title">간편결제 비밀번호 {{titleText}}</div> \n                                    <div v-if="pinStep == 2" class="before-button">\n                                        <div class="icon icon-backward" v-on:click="rewritePin"></div>\n                                    </div>\n                                    <div class="close-button">\n                                        <div class="icon icon-close" v-on:click="modalHide"></div>\n                                    </div>\n                                </div>\n                                <div class="modal-body pin-body">\n                                    <p class="pin-text">설정한 비밀번호는 리워드 간편결제 시 사용됩니다.</p>\n                                    \x3c!-- 핀번호 입력 내용 --\x3e\n                                    <pin-info v-if="pinStep == 1" :pin-reset="pinReset" v-on:pin-done="pinDone"></pin-info>\n                                    <sec-pin-info v-if="pinStep == 2" v-on:pin-done="pinDone"></sec-pin-info>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- //핀번호 입력 팝업 --\x3e\n\t\t\t\t</div>\n\t\t\t',
                        props: ["type", "pinType", "pinStep", "pinReset"],
                        data: function() {
                            return {
                                titleText: "",
                                pinData: ""
                            }
                        },
                        components: {
                            pinInfo: n(9).default.component(),
                            secPinInfo: n(9).default.component()
                        },
                        watch: {
                            pinStep: function(e) {
                                2 == this.pinType ? this.titleText = "입력" : this.titleText = 1 == e ? "설정" : "재입력"
                            }
                        },
                        methods: {
                            modalHide: function() {
                                var e = this;
                                this.$nextTick(function() {
                                    e.pinData = _.clone("")
                                }), $("#pinModal").modal("hide"), this.$emit("reset-pin", !0, 1)
                            },
                            rewritePin: function(e) {
                                var t = this;
                                this.$nextTick(function() {
                                    t.pinData = _.clone("")
                                }), this.$emit("reset-pin", !1, 1)
                            },
                            pinDone: function(e) {
                                1 == this.pinType ? 1 == this.pinStep ? (this.pinData = _.clone(e), this.$emit("reset-pin", !1, 2)) : this.pinData != e ? noti.open("간편결제 비밀번호가 일치하지 않습니다.") : this.$emit("save-payment-info", e) : 1 == this.type ? this.$emit("pay-reserve-finish", e) : this.$emit("change-payment-info", e)
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n                \x3c!-- 투자자별 자격 요건 안내 --\x3e\n                <div id="virtualModal" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">\n                    <div class="modal-dialog" role="document">\n                        <div class="modal-content">\n                        \t<div class="modal-header">\n\t\t\t\t\t\t\t\t<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n\t\t\t\t\t\t\t</div>\n                            <div class="modal-body">\n                            \t<div v-show="mode == 1">\n\t                                <ul>\n\t                                    <li>\n\t                                        <strong class="grey-800"></strong>\n\t                                        <ul>\n\t                                            <li>\n\t                                               \t회원은 본 약관에 동의함으로써, 크라우디 투자 프로젝트에 참여할 수 있는 투자예치금 계좌를 발급 받게 됩니다. 투자예치금 계좌는 회원의 전용 가상계좌이며, 투자 프로젝트에 참여 하기 전, 청약을 원하는 금액을 해당 계좌에 입금해야 합니다.\n\t                                            </li>\n\t                                            <li>\n\t                                               회원이 투자 프로젝트에 청약을 완료하면, 청약증거금 상당의 금액이 투자예치금 계좌에서 공제되며, 해당 금액의 출금이 불가능합니다. 해당 금액은 청약한 투자프로젝트가 모집금액의 80% 달성에 실패할 경우, 프로젝트는 성공하였으나 배정 순위에서 탈락할 경우, 청약 기간 내에 청약 취소를 한 경우에는 회원의 투자예치금 계좌에 해당 금액이 복원되며, 본인 명의의 계좌로 출금이 가능합니다.\n\t                                            </li>\n\t                                            <li>\n\t                                               투자예치금의 출금을 위해서는 \'출금계좌등록\'의 프로세스를 통해 본인 명의의 계좌를 등록하여야 합니다. 출금계좌등록 전에는 투자예치금 계좌에 잔액이 남아있다고 하더라도 출금이 불가능합니다. 출금계좌등록 프로세스에는 입력한 계좌의 명의확인, 1원 이체 방식을 통한 소유확인 절차가 포함됩니다.\n\t                                            </li>\n\t                                            <li>\n\t                                               회원이 발급받는 투자예치금은 계좌는 (주)크라우디를 예금주로 하는 신한은행 계좌를 모계좌로 하며, 금융투자업 규정 제4-114조에 따라 투자자재산으로 부기 되어있습니다. 해당 계좌는 금융투자업 규정과 크라우디와 신한은행과의 추가약정을 통해 안전하게 관리됩니다.\n\t                                            </li>\n\t                                            <li>\n\t                                               투자예치금 계좌 발급 및 관리를 위해 크라우디가 신한은행에 제공하는 정보는 아래와 같습니다. \n\t                                            </li>\n\t                                        </ul>\n\t                                    </li>\n\t                                    <li>\n\t                                        <div class="mt15"><strong class="grey-800">[개인회원]</strong></div>\n\t                                        <ul>\n\t                                            <li>\n\t                                            \t고객명, 생년월일, 휴대폰번호, 출금통장 계좌번호, 가상계좌번호, CI (본인확인기관에서 부여하는 개인식별정보)\n\t                                            </li>\n\t                                        </ul>\n\t                                    </li>\n\t                                    <li>\n\t                                        <div class="mt15"><strong class="grey-800">[법인/조합회원]</strong></div>\n\t                                        <ul>\n\t                                        \t<li>\n\t                                        \t\t법인/조합명, 사업자번호(조합번호), 대표이사명, 담당자 생년월일, 담당자 CI, 담당자 휴대폰번호, 출금통장 계좌번호, 가상계좌번호 \n\t                                    \t\t</li>\n\t                                        </ul>\n\t                                    </li>\n\t                                </ul>\n                                </div>\n                            </div>\n\t\t\t\t\t\t\t<div class="modal-footer">\n\t\t\t\t\t\t\t\t<div class="row not-space">\n\t\t\t\t\t\t\t\t\t<a class="modalBlueBtn" data-dismiss="modal">확인</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- 투자자별 자격 요건 안내 --\x3e\n\t\t\t',
                        props: {
                            mode: ""
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div>\n                <div class="container">\n                    <div class="row not-space">\n                        <div class="col-md-2">\n                            <div class="st-menu webfont2">\n                                <ul>\n                                    <li class="w30" :class="{\'active\' : type == 1}"><a href="javascript:void(0)" v-on:click="subMenuChange(1)">알림</a></li>\n                                    <li class="w30" :class="{\'active\' : type == 2}"><a href="javascript:void(0)" v-on:click="subMenuChange(2)">문의 내역</a></li>\n                                </ul>\n                                <div class="clearfix"></div>\n                            </div>\n                        </div>\n                        <div class="col-md-10 col-line">\n                            <div class="row not-space">\n                                <div class="col-md-1"></div>\n                                <div class="col-md-11">\n                                    <div class="common_sub_title webfont2">\n                                        새로운 알림을 <br />\n                                        확인해보세요\n                                    </div>\n\n                                    <alarm v-if="type == 1"></alarm>\n                                    <question v-if="type == 2"></question>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ',
                        props: ["subMenu"],
                        data: function() {
                            return {
                                makedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                search: {
                                    memCode: this.code,
                                    paging: {
                                        page: "1",
                                        count: "12"
                                    }
                                },
                                type: this.subMenu
                            }
                        },
                        created: function() {
                            this.load()
                        },
                        components: {
                            paginate: VuejsPaginate,
                            alarm: n(24).default.component(),
                            question: n(30).default.component()
                        },
                        computed: {},
                        methods: {
                            load: function() {},
                            subMenuChange: function(e) {
                                this.type = e
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div>\n                <div class="pn_list_wrap">\n                    \x3c!-- Loop 읽지 않음 클래스 (not_read) --\x3e\n                    <a href="javascript:void(0)" class="pn_list_loop not_read">\n                        <div class="media">\n                            <div class="media-left media-middle">\n                                <img src="./data/ex001.jpg" class="media-object" alt="..." />\n                            </div>\n                            <div class="media-body media-middle">\n                                <div class="pn_list_frame">\n                                    <div class="pn_summury">리워드</div>\n                                    <div class="pn_type">프로젝트 묘미</div>\n                                    <div class="pn_subject">요청한 프로젝트가 반려되었습니다. 반려사유는 등록한 메일로 보냈습</div>\n                                    <div class="pn_time">42분 전</div>\n                                </div>\n                            </div>\n                        </div>\n                    </a>\n                    \x3c!-- //Loop --\x3e\n\n                    \x3c!-- Loop --\x3e\n                    <a href="javascript:void(0)" class="pn_list_loop">\n                        <div class="media">\n                            <div class="media-left media-middle">\n                                <img src="./data/ex001.jpg" class="media-object" alt="..." />\n                            </div>\n                            <div class="media-body media-middle">\n                                <div class="pn_list_frame">\n                                    <div class="pn_summury">리워드</div>\n                                    <div class="pn_type">연세대학교 창업 지원단</div>\n                                    <div class="pn_subject">연세대학교 창업지원단은 학생들의 창의적이고 우수한 아이디어를 발굴</div>\n                                    <div class="pn_time">1일 전</div>\n                                </div>\n                            </div>\n                        </div>\n                    </a>\n                    \x3c!-- //Loop --\x3e\n\n                    \x3c!-- Loop --\x3e\n                    <a href="javascript:void(0)" class="pn_list_loop">\n                        <div class="media">\n                            <div class="media-left media-middle">\n                                <img src="./data/ex002.jpg" class="media-object" alt="..." />\n                            </div>\n                            <div class="media-body media-middle">\n                                <div class="pn_list_frame">\n                                    <div class="pn_summury red-800">모의크라우드펀딩</div>\n                                    <div class="pn_type">프로젝트 묘미</div>\n                                    <div class="pn_subject">펀딩한 프로젝트가 반려되었습니다. 반려사유는 등록한 메일로 보냈습</div>\n                                    <div class="pn_time">42분 전</div>\n                                </div>\n                            </div>\n                        </div>\n                    </a>\n                    \x3c!-- //Loop --\x3e\n\n                    \x3c!-- Loop --\x3e\n                    <a href="javascript:void(0)" class="pn_list_loop">\n                        <div class="media">\n                            <div class="media-left media-middle">\n                                <img src="./data/ex003.jpg" class="media-object" alt="..." />\n                            </div>\n                            <div class="media-body media-middle">\n                                <div class="pn_list_frame">\n                                    <div class="pn_summury red-800">모의크라우드펀딩</div>\n                                    <div class="pn_type">프로젝트 묘미</div>\n                                    <div class="pn_subject">펀딩한 프로젝트가 반려되었습니다. 반려사유는 등록한 메일로 보냈습</div>\n                                    <div class="pn_time">42분 전</div>\n                                </div>\n                            </div>\n                        </div>\n                    </a>\n                    \x3c!-- //Loop --\x3e\n                </div>\n            </div>\n            ',
                        data: function() {
                            return {
                                makedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                search: {
                                    memCode: this.code,
                                    paging: {
                                        page: "1",
                                        count: "12"
                                    }
                                },
                                type: 1
                            }
                        },
                        created: function() {
                            this.load()
                        },
                        components: {
                            paginate: VuejsPaginate,
                            reward: n(15).default.component(),
                            invest: n(14).default.component(),
                            simulation: n(16).default.component()
                        },
                        computed: {},
                        methods: {
                            load: function() {}
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div v-if="mbFlg">\n                <div class="enot_wrap clsError">\n                    <div class="row">\n                        <div class="col-xs-12">\n                            <div class="enot_logo"></div>\n                            <div class="enot_text">\n                                앗! 죄송해요..\n                                <p>모바일은 <br class="hidden-md hidden-lg" /> 지원하지 않습니다.💦<br /> PC로 이용해주세요</p>\n                            </div>\n                            <div class="btn_wrap">\n                                <a href="/" class="btn btn-primary-outline">메인화면으로?</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div v-else>\n                <div id="list_wrap" class="common_vi_wrap common_vi_wrap6">\n                    <form class="form-horizontal">\n                        <div class="clsSearchBtn" v-on:click="clsSearch">\n                            <button type="button" class="btn btn-block btn-primary-outline"><i class="fa fa-search" /></button>\n                        </div>\n                        <div class="form-group clsSearchDate">\n                            <year-select v-if="yearConfirm" class="form-control" v-model="search.toDt">\n                                <option v-for="(item, index) in yy" :value="item.value">{{item.text}}</option>\n                            </year-select>\n                        </div>\n                        <div class="clsSearchDateMid">&nbsp;~&nbsp;</div>\n                        <div class="form-group clsSearchDate">\n                            <year-select v-if="yearConfirm" class="form-control" v-model="search.fromDt">\n                                <option v-for="(item, index) in yy" :value="item.value">{{item.text}}</option>\n                            </year-select>\n                        </div>\n                    </form>\n                </div>\n                <div class="clearfix"></div>\n                <div v-if="dataConfirm" v-for="(item, index) in clsList" class="clsList">\n                    <h2 class="clsListHead">{{item.clsYear}}년</h2>\n                    <div v-if="index == 0" style="border-bottom:1px solid grey;">\n                        <font style="font-weight:500;">※ 아래 서류를 모두 제출하셔야 등록이 완료됩니다.</font><br />\n                        <ol>\n                            <li>1. 법인등기부등본</li>\n                            <li>\n                                2. 결산자료\n                                <ul>\n                                    <li>・&nbsp;대차대조표와 그 부속 명세서</li>\n                                    <li>・&nbsp;손익계산서와 그 부속 명세서</li>\n                                    <li>・&nbsp;이익잉여금처분계산서 또는 결손금처리계산서</li>\n                                    <li>・&nbsp;회계감사인의 감사보고서(회계감사인의 회계감사를 받은 법인만 해당)</li>\n                                </ul>\n                            </li>\n                            <li>3. 기업개황(Excel)</li>\n                            <li>4. 요약재무정보(Excel)</li>\n                        </ol>\n                    </div>\n                    <div v-if="item.clsFlag == 2" class="clsDiv">\n                        <h4 class="clsNotH">해당 연도는 결산 서류 등록 대상이 아닙니다.</h4>\n                    </div>\n                    <div v-else>\n                        <div v-if="item.files.length == 0 || item.clsStatus == 1" class="clsDiv">\n                            <h4 class="clsNoFile">등록된 결산 서류가 없습니다.</h4>\n                            \x3c!-- /// 무조건 올릴 수 있도록 변경하면서 주석처리함<div v-if="yearFlag" class="clsSaveBtn" v-on:click="approval(item)"--\x3e\n                            <div v-if="index == 0">\n                                <div class="row">\n                                    <div class="col-md-3 col-sm-3"></div>\n                                    <div class="col-md-3 col-sm-3 col-xs-6">\n                                        <button type="button" class="btn btn-block btn-primary-outline" v-on:click="downloadZip(1)"><i class="fa fa-download" />&nbsp;양식받기</button>\n                                    </div>\n                                    <div class="col-md-3 col-sm-3 col-xs-6">\n                                        <button type="button" class="btn btn-block btn-primary" v-on:click="approval(item, 1)"><i class="fa fa-upload" />&nbsp;등록</button>\n                                    </div>\n                                    <div class="col-md-3 col-sm-3"></div>\n                                </div>\n                                <div class="row" style="text-align:center;">\n                                    결산 서류는 한국예탁결제원<br />\n                                    양식에 맞춰 등록 해주셔야 합니다.\n                                </div>\n                            </div>\n                            <div class="clsSaveBtn" v-else>\n                                <button type="button" class="btn btn-block btn-primary" v-on:click="approval(item, 1)"><i class="fa fa-upload" />&nbsp;등록</button>\n                            </div>\n                        </div>\n                        <template v-else>\n                            <table class="table table-condensed clsTable">\n                                <thead>\n                                    <tr>\n                                        <th>등록일</th>\n                                        <th>결산서류</th>\n                                        <th>용량</th>\n                                        <th>상태</th>\n                                        <th>다운로드</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr v-for="(data, idx) in item.files">\n                                        <td v-if="idx == 0" :rowspan="item.files.length" class="text-center">{{item.rdate}}</td>\n                                        <td v-if="data.fileInfo != \'\'">{{data.fileInfo}}</td>\n                                        <td v-else>{{data.fileName}}</td>\n                                        <td class="text-right">{{data.fileSize | fileSize}}</td>\n                                        <td v-if="idx == 0" :rowspan="item.files.length" class="text-center">\n                                            {{item.clsStatus | clsStatus}}\n                                            <div v-if="item.clsStatus == 2" class="clsBtn" v-on:click="approvalCancel(item)">\n                                                <button type="button" class="btn btn-block btn-sm btn-primary-outline"><i class="fa fa-times" />&nbsp;승인취소</button>\n                                            </div>\n                                            <div v-if="item.clsStatus == 4" class="clsBtn" v-on:click="approval(item, 2)">\n                                                <button type="button" class="btn btn-block btn-sm btn-primary-outline"><i class="fa fa-upload" />&nbsp;재등록</button>\n                                            </div>\n                                        </td>\n                                        <td v-if="idx == 0" :rowspan="item.files.length" class="text-center clsDownBtn" v-on:click="downloadZip(2, item)"><i class="fa fa-download" /></td>\n                                    </tr>\n                                    <template v-if="item.clsStatus == 4">\n                                        <tr>\n                                            <th class="clsReject" colspan="6">반려사유</th>\n                                        </tr>\n                                        <tr>\n                                            <td colspan="6">\n                                                [{{userInfo.name}}]님의 결산 서류 등록은 다음과 같은 사유로 반려되었습니다.<br />\n                                                정정 후, 결산서류를 재등록해주시기 바랍니다.\n                                                <div class="clsRejectDiv">{{item.clsStr}}</div>\n                                            </td>\n                                        </tr>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </template>\n                    </div>\n                    <hr v-if="(clsList.length - 1) > index" class="clsHr" />\n                </div>\n                \x3c!-- 파일 등록 모달 --\x3e\n                <div id="clsSaveMd" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-header">\n                                <h4>{{selYear}}년 결산 서류 등록</h4>\n                                <button type="button btn-sm" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"><i class="fa fa-times fa-2x" /></span></button>\n                            </div>\n                            <div class="modal-body modal-order">\n                                <div id="modalScroll">\n                                    <div v-if="fileConfirm && item.fileData.state" class="row clsData" v-for="(item, index) in fileList">\n                                        <div class="form-group col-sm-12 clsDataDocs">\n                                            <label class="control-label" :style="[(index % 2 == 0) ? { \'color\':\'#808080\' } : { \'color\':\'#9f9f9f\' }]">서류명</label>\n                                            <input :style="[(item.noInput) ? { \'border-color\': \'#ff0070\' } : { \'border-color\': \'#ddd\' } ]" type="text" class="form-control" v-model="item.docNm" />\n                                        </div>\n                                        <div class="form-group col-sm-12 clsDataFiles">\n                                            <label class="control-label" :style="[(index % 2 == 0) ? { \'color\':\'#808080\' } : { \'color\':\'#9f9f9f\' }]">파일</label>\n                                            <span v-if="index == (fileList.length - 1)" class="files-add" v-on:click="fileAdd">+</span>\n                                            <span v-else class="files-add img-delete vod-delete" v-on:click="fileRemove(index)">-</span>\n                                            <span class="mr5 input-group-btn egnolerValue clsFile">\n                                                <div class="input-group input-group-file common-default-flex">\n                                                    <input v-model="item.fileData.fileName" type="text" class="form-control clsFileInput" :style="[(item.noFile) ? { \'border-color\': \'#ff0080\' } : { \'border-color\': \'#ddd\' } ]" readonly="readonly" />\n                                                    <span class="input-group-btn egnolerValue">\n                                                        <span class="btn btn-outline btn-file">\n                                                            <i class="fa fa-upload" aria-hidden="true"></i>\n                                                            <file-input v-model="item.fileData" data-vv-name="fileData" v-on:error="fileError" accept=".xls, .xlsx, .pdf, .hwp"></file-input>\n                                                        </span>\n                                                    </span>\n                                                </div>\n                                            </span>\n                                        </div>\n                                        <hr v-if="(fileList.length - 1) > index" class="clsHr" />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="pointerCursor" data-dismiss="modal">취소</a>\n                                    <a class="ml30 modalBlueBtn" v-on:click="fileSave">등록</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ',
                        data: function() {
                            return {
                                mbFlg: !1,
                                dataConfirm: !1,
                                yearConfirm: !1,
                                fileConfirm: !1,
                                toYear: moment().add(-1, "y").format("YYYY"),
                                search: {
                                    fromDt: moment().add(-2, "y").format("YYYY"),
                                    toDt: moment().add(-1, "y").format("YYYY"),
                                    memCode: userInfo.memCode
                                },
                                yy: [],
                                clsList: [],
                                selYear: "",
                                fileList: [],
                                save: {
                                    clsIdx: "",
                                    clsHisIdx: "",
                                    clsYear: "",
                                    memCode: userInfo.memCode,
                                    fileData: [],
                                    insType: ""
                                },
                                cancel: {
                                    clsIdx: "",
                                    clsHisIdx: "",
                                    memCode: userInfo.memCode,
                                    clsGroup: ""
                                }
                            }
                        },
                        components: {
                            yearSelect: n(1).default.component(),
                            fileInput: n(4).default.component()
                        },
                        mounted: function() {
                            var e = this;
                            $("#noti").on("hidden.bs.modal", function(e) {
                                $("#clsSaveMd").css("z-index", "9999")
                            }), $("#clsSaveMd").on("hidden.bs.modal", function(t) {
                                e.fileList.forEach(function(e) {
                                    return e.fileData.state = !1, e
                                })
                            })
                        },
                        created: function() {
                            if ($(window).width() < 992) this.mbFlg = !0;
                            else {
                                this.mbFlg = !1, this.yearConfirm = !1;
                                for (var e = 2016; e <= this.toYear; e++) this.yy.push({
                                    value: e,
                                    text: e + "년"
                                });
                                this.yearConfirm = !0, this.clsSearch()
                            }
                        },
                        methods: {
                            loadFade: function(e) {
                                var t = $("#clsSaveMd");
                                3 == e ? (t.css("z-index", "1000"), $(".page-loader-more").css("z-index", "9999")) : 4 == e && (t.css("z-index", "9999"), $(".page-loader-more").css("z-index", "1000")), e % 2 == 0 ? $(".page-loader-more").fadeOut() : $(".page-loader-more").fadeIn()
                            },
                            clsSearch: function() {
                                var e = this;
                                if (this.loadFade(1), this.dataConfirm = !1, this.save = _.clone({
                                        clsIdx: "",
                                        clsHisIdx: "",
                                        clsYear: "",
                                        memCode: userInfo.memCode,
                                        fileData: [],
                                        insType: ""
                                    }), this.cancel = _.clone({
                                        clsIdx: "",
                                        clsHisIdx: "",
                                        memCode: userInfo.memCode,
                                        clsGroup: ""
                                    }), this.search.fromDt > this.search.toDt) {
                                    var t = this.search.fromDt;
                                    this.search.fromDt = this.search.toDt, this.search.toDt = t
                                }
                                axios.post("/data/view/invest/clsDocs/search", this.search).then(function(t) {
                                    var n = t.data;
                                    if ("0000" == n.rCode) {
                                        var a = n.rData.list,
                                            i = n.rData.docList;
                                        e.clsList = _.clone(_.forEach(a, function(e) {
                                            e.files = [];
                                            var t = _.filter(i, {
                                                clsHisIdx: e.clsHisIdx
                                            });
                                            return _.size(t) > 0 && (e.files = t), e
                                        })), e.dataConfirm = !0, e.loadFade(2)
                                    } else e.loadFade(2), alert(n.rMsg)
                                })
                            },
                            downloadZip: function(e, t) {
                                if (1 == e) window.open("//image-se.ycrowdy.com/crowdyFile/%E1%84%8F%E1%85%B3%E1%84%85%E1%85%A1%E1%84%8B%E1%85%AE%E1%84%83%E1%85%B5_%E1%84%80%E1%85%A7%E1%86%AF%E1%84%89%E1%85%A1%E1%86%AB%E1%84%89%E1%85%A5%E1%84%85%E1%85%B2%E1%84%8B%E1%85%A3%E1%86%BC%E1%84%89%E1%85%B5%E1%86%A8.zip", "_self");
                                else if (2 == e) {
                                    var n = t.clsYear + "년도_결산서류";
                                    $.fileDownload("/file/memberFile", {
                                        httpMethod: "POST",
                                        data: {
                                            codeGroup: t.clsGroup,
                                            name: n
                                        }
                                    })
                                }
                            },
                            approval: function(e, t) {
                                this.selYear = e.clsYear, this.fileList = _.clone([{
                                    docNm: "",
                                    noInput: !1,
                                    noFile: !1,
                                    fileData: {
                                        fileInfo: "",
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    }
                                }]), this.fileConfirm = !0, this.save.clsIdx = e.clsIdx, this.save.clsHisIdx = e.clsHisIdx, this.save.clsYear = e.clsYear, this.save.insType = t, $("#clsSaveMd").modal("show")
                            },
                            fileAdd: function() {
                                this.fileConfirm = !1, this.fileList.push({
                                    docNm: "",
                                    noInput: !1,
                                    noFile: !1,
                                    fileData: {
                                        fileInfo: "",
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    }
                                }), this.fileConfirm = !0
                            },
                            fileRemove: function(e) {
                                this.fileConfirm = !1, this.fileList[e].fileData.state = !1, this.fileConfirm = !0
                            },
                            fileSave: function() {
                                var e = this,
                                    t = $("#clsSaveMd"),
                                    n = $("#modalScroll");
                                if (0 == this.fileList.length) return this.fileList[0].noInput = !0, t.css("z-index", "1000"), void noti.open("입력하지 않은 서류명이 있습니다.");
                                if (this.fileList.length > 0)
                                    for (var a = "", i = 0; i < this.fileList.length; i++) {
                                        if ("" == this.fileList[i].fileData.fileName.trim() && this.fileList[i].fileData.state) {
                                            this.fileList[i].noFile = !0, a = "등록하지 않은 파일이 있습니다.";
                                            break
                                        }
                                        if (this.fileList[i].noFile = !1, "" == this.fileList[i].docNm.trim() && this.fileList[i].fileData.state) {
                                            this.fileList[i].noInput = !0, a = "입력하지 않은 서류명이 있습니다.";
                                            break
                                        }
                                        this.fileList[i].noInput = !1
                                    }
                                "" != a ? (t.css("z-index", "1000"), n.scrollTop(100 * i), noti.open(a)) : (this.fileList = _.filter(this.fileList, function(e) {
                                    if (e.fileData.state) return e
                                }), this.loadFade(3), this.save.fileData = [], _.forEach(this.fileList, function(t) {
                                    e.save.fileData.push({
                                        fileData: t.fileData.fileData,
                                        fileInfo: t.docNm,
                                        fileName: t.fileData.fileName,
                                        state: !0
                                    })
                                }), axios.post("/set/invest/clsDocs/save", this.save).then(function(a) {
                                    var s = a.data;
                                    $("#clsSaveMd").css("z-index", "1000"), e.loadFade(4), "0000" == s.rCode ? ($("#clsSaveMd").modal("hide"), noti.open("결산서류가 정상적으로 등록되었습니다."), e.clsSearch()) : (t.css("z-index", "1000"), n.scrollTop(100 * i), noti.open("결산서류가 정상적으로 등록되지 않았습니다.<br />다시 시도해주세요."))
                                }))
                            },
                            fileError: function() {
                                $("#clsSaveMd").css("z-index", "1000"), noti.open("확장자가 .xls, .xlsx, .pdf .hwp 인 10Mb 이하 파일만 등록할 수 있습니다.")
                            },
                            approvalCancel: function(e) {
                                var t = this;
                                qst.open("승인 요청을 취소하시겠습니까?", function() {
                                    t.loadFade(1), t.cancel.clsIdx = e.clsIdx, t.cancel.clsHisIdx = e.clsHisIdx, t.cancel.clsGroup = e.clsGroup, t.cancel.clsYear = e.clsYear, axios.post("/data/save/invest/clsDocs/cancel", t.cancel).then(function(e) {
                                        var n = e.data;
                                        t.loadFade(2), "0000" == n.rCode ? (noti.open("결산서류 승인 요청이 취소되었습니다."), t.clsSearch()) : noti.open("승인 요청이 정상적으로 취소되지 않았습니다.<br />다시 시도해주세요.")
                                    })
                                }, !0)
                            }
                        },
                        filters: {
                            clsStatus: function(e) {
                                return 1 == e ? "미등록" : 2 == e ? "승인대기" : 3 == e ? "승인" : "반려"
                            },
                            fileSize: function(e) {
                                var t = ["B", "KB", "MB", "GB", "TB"];
                                if (0 == (e = parseInt(e))) return "0 B";
                                var n = parseInt(Math.floor(Math.log(e) / Math.log(1024)));
                                return parseInt(Math.round(e / Math.pow(1024, n), 2)).toLocaleString() + " " + t[n]
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div class="container">\n                <div class="row not-space">\n                    <div class="col-md-2">\n                        <div class="st-menu webfont2">\n                            <ul>\n                                <li class="w30" :class="{\'active\' : type == 1}"><a href="javascript:void(0)" v-on:click="subMenuChange(1)">리워드</a></li>\n                                <li class="w30" :class="{\'active\' : type == 2}"><a href="javascript:void(0)" v-on:click="subMenuChange(2)">투자</a></li>\n                                <li class="w40" :class="{\'active\' : type == 3}"><a href="javascript:void(0)" v-on:click="subMenuChange(3)">모의펀딩</a></li>\n                            </ul>\n                            <div class="clearfix"></div>\n                        </div>\n                    </div>\n\n                    <div class="col-md-10 col-line">\n                        <div class="row not-space">\n                            <div class="col-md-1"></div>\n                            <div class="col-md-11">\n                                <div class="common_sub_title webfont2">\n                                    펀딩한 프로젝트를 <br />\n                                    확인해보세요\n                                </div>\n                                <reward v-if="type == 1"></reward>\n                                <invest v-if="type == 2"></invest>\n                                <simulation v-if="type == 3"></simulation>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ',
                        props: ["subMenu"],
                        data: function() {
                            return {
                                fundedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                search: {
                                    memCode: this.code,
                                    paging: {
                                        page: "1",
                                        count: "12"
                                    }
                                },
                                type: this.subMenu
                            }
                        },
                        created: function() {},
                        components: {
                            paginate: VuejsPaginate,
                            reward: n(11).default.component(),
                            invest: n(10).default.component(),
                            simulation: n(12).default.component()
                        },
                        computed: {},
                        methods: {
                            subMenuChange: function(e) {
                                this.type = e
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div>\n                <div class="pn_list_wrap">\n                    \x3c!-- Loop --\x3e\n                    <a href="javascript:void(0)" class="pn_list_loop" v-for="item in likedList">\n                        <div class="media">\n                            <div class="media-left media-middle">\n                                <img :src="\'//\' + item.pjCardImg" class="media-object" alt="..." />\n                            </div>\n                            <div class="media-body media-middle">\n                                <div class="row">\n                                    <div class="col-sm-9">\n                                        <div class="pn_list_frame">\n                                            <div class="pn_summury">투자 <span class="hidden-sm hidden-md hidden-lg pn_time grey-500 ml5">2017.09.10</span></div>\n                                            <div class="pn_subject">{{ item.pjTItle }}</div>\n                                            <div class="pn_time hidden-xs">{{ item.wdate }}</div>\n                                        </div>\n                                    </div>\n                                    <div class="col-sm-3 text-right xs-text-left">\n                                        <div class="pn_list_frame">\n                                            <a class="xs-mt5 btn btn-xs btn-primary" v-on:click="likeCancel(item.pgIdx)">좋아요 취소</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </a>\n                    \x3c!-- //Loop --\x3e\n                    \x3c!-- 페이징 --\x3e\n                    <nav class="text-center mt30 mb20" >\n                        <paginate\n                            :page-count="pageCount"\n                            :class="\'pagination\'"\n                            :click-handler="nextPage"\n                            :force-page="forcePage"\n                            >\n                        </paginate>\n                    </nav>\n                    \x3c!-- //페이징 --\x3e\n                </div>\n            </div>\n            ',
                        props: ["subMenu"],
                        data: function() {
                            return {
                                likedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                search: {
                                    memCode: userInfo.memCode,
                                    paging: {
                                        page: "1",
                                        count: "10"
                                    }
                                },
                                pgIdx: ""
                            }
                        },
                        created: function() {
                            this.load()
                        },
                        components: {
                            paginate: VuejsPaginate
                        },
                        methods: {
                            load: function() {
                                var e = this;
                                axios.post("/data/mypage/liked/invest", this.search).then(function(t) {
                                    var n = parseInt(t.data.rData.count % e.search.paging.count),
                                        a = 0;
                                    n > 0 && a++, e.pageCount = parseInt(t.data.rData.count / e.search.paging.count) + a, e.likedList = t.data.rData.data
                                })
                            },
                            nextPage: function(e) {
                                this.forcePage = e - 1, this.search.paging.page = e, this.load()
                            },
                            likeCancel: function(e) {
                                var t = this;
                                this.pgIdx = e, noti.open("좋아요를 취소 하시겠습니까?", t.disliked, !0)
                            },
                            disliked: function() {
                                var e = this;
                                axios.post("/data/mypage/liked/invest/dislike", {
                                    pgIdx: this.pgIdx
                                }).then(function(t) {
                                    "0000" == t.data.rCode ? e.load() : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div>\n                <div id="list_wrap" class="common_vi_wrap common_vi_wrap6">\n                    <div class="common_mypage_title webfont2 hidden-xs">\n                        마이페이지\n                    </div>\n\n                    <div class="webfont2 visible-xs-block pl20 pr20">\n                        <div class="common_mypage_title_xs">마이페이지</div>\n                        <div class="common_block_box">\n                            <div class="font18"><span class="blue-800">{{userName}}</span>님</div>\n                            <div class="font15">{{userEmail}}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="common_sub_layout" >\n                    <div id="list_category" class="common_sub_top_menu_1">\n                        <div class="common_sub_top_menu webfont2">\n                            <div class="container">\n                                \n                                <a href="javascript:void(0)" :class="{\'active\' : menuType == 1}" v-on:click="menuChange(1)">\n                                    <span class="hidden-xs">펀딩한 프로젝트</span>\n                                    <span class="visible-xs-block">펀딩</span>\n                                </a>\n                                <a href="javascript:void(0)" :class="{\'active\' : menuType == 2}" v-on:click="menuChange(2)">\n                                    <span class="hidden-xs">제작한 프로젝트</span>\n                                    <span class="visible-xs-block">제작</span>\n                                </a>\n                                <a href="javascript:void(0)" :class="{\'active\' : menuType == 3}" v-on:click="menuChange(3)">\n                                    <span class="hidden-xs">관심 프로젝트</span>\n                                    <span class="visible-xs-block">관심</span>\n                                </a>\n                                \x3c!-- <a href="javascript:void(0)" :class="{\'active\' : menuType == 4}" v-on:click="menuChange(4)"><span>알림 &amp; 문의내역</span></a> --\x3e\n                                <a href="javascript:void(0)" :class="{\'active\' : menuType == 5}" v-on:click="menuChange(5)">\n                                    <span>설정</span>\n                                </a>\n                                \n                            </div>\n                        </div>\n                    </div>\n                    \n                    <funded v-if="menuType == 1 && dataConfirm" :sub-menu="subMenu"></funded>\n                    <maked v-if="menuType == 2 && dataConfirm" :sub-menu="subMenu"></maked>\n                    <liked v-if="menuType == 3 && dataConfirm" :sub-menu="subMenu"></liked>\n                    \x3c!-- <alarm v-if="menuType == 4 && dataConfirm" :sub-menu="subMenu"></alarm> --\x3e\n                    <setting v-if="menuType == 5 && dataConfirm" :naver-oauth="naverOauth" :sub-menu="subMenu" :account-menu="accountMenu"></setting>\n                </div>\n            </div>\n            ',
                        props: ["myMenu", "subMenu", "accountMenu"],
                        data: function() {
                            return {
                                menuType: this.myMenu,
                                userName: userInfo.name,
                                userEmail: userInfo.email,
                                menuOptions: [{
                                    id: "1",
                                    text: "펀딩한 프로젝트"
                                }, {
                                    id: "2",
                                    text: "제작한 프로젝트"
                                }, {
                                    id: "3",
                                    text: "관심 프로젝트"
                                }, {
                                    id: "5",
                                    text: "설정"
                                }],
                                dataConfirm: !1,
                                naverOauth: !1
                            }
                        },
                        created: function() {
                            userInfo.loginConfirm() && (this.dataConfirm = !0, this.checkNaverOauth())
                        },
                        components: {
                            menuSelect: common.select.component(),
                            funded: n(26).default.component(),
                            maked: n(29).default.component(),
                            liked: n(13).default.component(),
                            setting: n(17).default.component()
                        },
                        methods: {
                            menuChange: function(e) {
                                this.menuType = e
                            },
                            checkNaverOauth: function() {
                                void 0 != naverLogin.oauthParams.access_token && (this.menuType = 5, this.naverOauth = !0)
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div class="container">\n                <div class="row not-space">\n                    <div class="col-md-2">\n                        <div class="st-menu webfont2">\n                            <ul>\n                                <li v-bind:class="classObject1"><a href="javascript:void(0)" v-on:click="subMenuChange(1)">리워드</a></li>\n                                <li v-bind:class="classObject2" v-if="investor">\n                                    <a href="javascript:void(0)" v-on:click="subMenuChange(2)">투자</a>\n                                    <div id="investMenu">\n                                        <div v-if="mbFlg" class="mbClsMenu">\n                                            <div v-on:click="subMenuChange(4)" class="mbClsSubMenu" id="ivsMb">투자 프로젝트</div>\n                                            <div v-on:click="subMenuChange(5)" class="mbClsSubMenu" id="clsMb">결산서류 관리</div>\n                                        </div>\n                                        <div v-else>\n                                            <ul class="clsMenu">\n                                                <div id="divCircle"></div>\n                                                <li v-on:click="subMenuChange(4)" class="clsSubMenu clsSubMenuIvs" id="ivs">투자</li>\n                                                <li v-on:click="subMenuChange(5)" class="clsSubMenu clsSubMenuCls" id="cls">결산서류 관리</li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </li>\n                                <li v-bind:class="classObject3"><a href="javascript:void(0)" v-on:click="subMenuChange(3)">모의펀딩</a></li>\n                            </ul>\n                            <div class="clearfix"></div>\n                        </div>\n                    </div>\n\n                    <div class="col-md-10 col-line">\n                        <div class="row not-space">\n                            <div class="col-md-1"></div>\n                            <div class="col-md-11">\n                                <div v-if="type == 5" class="common_sub_title webfont2">\n                                    결산 서류 관리\n                                </div>\n                                <div v-else class="common_sub_title webfont2">\n                                    제작한 프로젝트를 <br />\n                                    확인해보세요\n                                </div>\n                                <reward v-if="type == 1"></reward>\n                                <invest v-if="type == 2"></invest>\n                                <simulation v-if="type == 3"></simulation>\n                                <cls v-if="type == 5"></cls>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ',
                        props: ["subMenu"],
                        data: function() {
                            return {
                                mbFlg: !1,
                                makedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                search: {
                                    memCode: this.code,
                                    paging: {
                                        page: "1",
                                        count: "12"
                                    }
                                },
                                type: this.subMenu,
                                investor: !1,
                                userType: userInfo.type
                            }
                        },
                        created: function() {
                            $(window).width() < 992 ? this.mbFlg = !0 : this.mbFlg = !1, this.load(), this.investor || (this.type = 1)
                        },
                        computed: {
                            classObject1: function() {
                                return {
                                    w30: this.investor,
                                    w50: !this.investor,
                                    active: 1 == this.type
                                }
                            },
                            classObject2: function() {
                                return {
                                    w30: this.investor,
                                    active: 2 == this.type || 5 == this.type
                                }
                            },
                            classObject3: function() {
                                return {
                                    w40: this.investor,
                                    w50: !this.investor,
                                    active: 3 == this.type
                                }
                            }
                        },
                        components: {
                            paginate: VuejsPaginate,
                            reward: n(15).default.component(),
                            invest: n(14).default.component(),
                            simulation: n(16).default.component(),
                            cls: n(25).default.component()
                        },
                        methods: {
                            load: function() {
                                if (2 == userInfo.type) {
                                    var e = this;
                                    axios.post("/data/member/investor/state", {
                                        memCode: userInfo.memCode
                                    }).then(function(t) {
                                        "Y" == t.data.rData.investor && (e.investor = !0)
                                    })
                                }
                            },
                            subMenuChange: function(e) {
                                e < 4 ? (this.mbFlg && $(".common_sub_title").show(), this.type = e, 2 == e && 2 == this.userType && ($("#investMenu").show().animate({
                                    opacity: 1,
                                    height: "60px"
                                }, 300), $("#divCircle").animate({
                                    top: "5px"
                                }, 300), this.mbFlg ? ($("#ivsMb").addClass("active"), $("#clsMb").removeClass("active")) : ($("#ivs").addClass("active"), $("#cls").removeClass("active"))), 2 != e && $("#investMenu").hide().animate({
                                    opacity: 0,
                                    height: "0px"
                                }, 300)) : 4 == e ? (this.mbFlg && $(".common_sub_title").show(), this.type = 2, $("#divCircle").animate({
                                    top: "5px"
                                }, 300), this.mbFlg ? ($("#ivsMb").addClass("active"), $("#clsMb").removeClass("active")) : ($("#ivs").addClass("active"), $("#cls").removeClass("active"))) : 5 == e && (this.mbFlg && $(".common_sub_title").hide(), this.type = e, $("#divCircle").animate({
                                    top: "35px"
                                }, 300), this.mbFlg ? ($("#ivsMb").removeClass("active"), $("#clsMb").addClass("active")) : ($("#ivs").removeClass("active"), $("#cls").addClass("active")))
                            }
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div>\n                <div class="panel-group faq" id="faq">\n                    \x3c!-- Loop --\x3e\n                    <div class="panel panel-default">\n                        <div class="panel-heading">\n                            <a class="panel-title accordion-toggle" data-toggle="collapse" data-parent="#faq" href="#collapse1010">\n                                <div class="faq_st">2017.08.16 / 답변 완료</div>\n                                프로젝트 등록시에 필요한 서류들은 무엇 무엇이 있을까요?\n                            </a>\n                        </div>\n                        <div id="collapse1010" class="panel-collapse collapse in">\n                            <div class="panel-body">\n                                <div class="faq_a">\n                                    <div class="date">2017.08.17</div>\n                                    어떤 홈페이지인가?는 유지를 어떻게 하는가에 결정됩니다. 안전한 개인정보, 편한 유지보수와 확장성을 가진 전자전부 표준프레임워크의 기능을 그대로 구현한 표준의 표준!! 홈스토리를 제안합니다.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- //Loop --\x3e\n\n                    \x3c!-- Loop --\x3e\n                    <div class="panel panel-default">\n                        <div class="panel-heading">\n                            <a class="panel-title accordion-toggle collapsed" data-toggle="collapse" data-parent="#faq" href="#collapse1009">\n                                <div class="faq_st">2017.08.16 / 답변 대기중</div>\n                                프로젝트 등록시에 필요한 서류들은 무엇 무엇이 있을까요?\n                            </a>\n                        </div>\n                        <div id="collapse1009" class="panel-collapse collapse">\n                            <div class="panel-body">\n                                <div class="faq_a">\n                                    답변 대기중입니다.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- //Loop --\x3e\n\n                    \x3c!-- Loop --\x3e\n                    <div class="panel panel-default">\n                        <div class="panel-heading">\n                            <a class="panel-title accordion-toggle collapsed" data-toggle="collapse" data-parent="#faq" href="#collapse1008">\n                                <div class="faq_st">2017.08.16 / 답변 대기중</div>\n                                프로젝트 등록시에 필요한 서류들은 무엇 무엇이 있을까요?\n                            </a>\n                        </div>\n                        <div id="collapse1008" class="panel-collapse collapse">\n                            <div class="panel-body">\n                                <div class="faq_a">\n                                    답변 대기중입니다.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- //Loop --\x3e\n\n                    \x3c!-- Loop --\x3e\n                    <div class="panel panel-default">\n                        <div class="panel-heading">\n                            <a class="panel-title accordion-toggle collapsed" data-toggle="collapse" data-parent="#faq" href="#collapse1007">\n                                <div class="faq_st">2017.08.16 / 답변 대기중</div>\n                                프로젝트 등록시에 필요한 서류들은 무엇 무엇이 있을까요?\n                            </a>\n                        </div>\n                        <div id="collapse1007" class="panel-collapse collapse">\n                            <div class="panel-body">\n                                <div class="faq_a">\n                                    답변 대기중입니다.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- //Loop --\x3e\n                </div>\n            </div>\n            ',
                        data: function() {
                            return {
                                makedList: [],
                                pageCount: 0,
                                forcePage: 0,
                                search: {
                                    memCode: this.code,
                                    paging: {
                                        page: "1",
                                        count: "12"
                                    }
                                },
                                type: 1
                            }
                        },
                        created: function() {
                            this.load()
                        },
                        components: {
                            paginate: VuejsPaginate
                        },
                        computed: {},
                        methods: {
                            load: function() {}
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n                <div>\n                    <div class="mypage-setting-big-text mypage-setting-layout">\n                        <template v-if="status.investor == \'N\'">\n                            <span class="mypage-setting-color-text">{{userName}}</span>님은<br/>아직 투자회원이 아닙니다<br />\n                        <span class="mypage-setting-small-text">투자회원 등록 한 후 \'투자자\'가 되어보세요</span>\n                        </template>\n\n                        <template v-if="status.investor == \'Y\' && status.memIvsState == \'MIC001\'">\n                            <span class="mypage-setting-color-text">{{userName}}</span>님은 투자회원 \n                            <span class="mypage-setting-color-text">승인 대기중</span>입니다.<br/>영업일 3일 소요<br/>\n                            <span class="mypage-setting-small-text" v-if="status.virtualAccountConfirm == \'N\'">승인을 기다리는 동안 <b class="blue-800">\'투자계좌 설정\'</b>을 해주세요.</span>\n                        </template>\n\n                        <template v-if="status.investor == \'Y\' && status.memIvsState == \'MIC002\'">\n                            <span class="mypage-setting-color-text">{{userName}}</span>님은 \n                            <span class="mypage-setting-color-text">투자회원</span>이며,<br/>회원유형은 \n                            <span class="mypage-setting-color-text">{{userIvsType}}</span> 입니다<br/>\n                            <span class="mypage-setting-small-text pl30 pr30 xs-pl5 xs-pr5">\n                                <template v-if="status.virtualAccountConfirm == \'N\'">\n                                    투자계좌를 설정해야 투자 프로젝트에 참여할 수 있습니다.\n                                    <b class="blue-800">‘투자계좌 설정’</b>을 해주세요.\n                                </template>\n                                <template v-if="status.virtualAccountConfirm == \'Y\'">\n                                    회원유형 및 연락처 및 주소 변경은 <b class="blue-800">투자회원 설정</b>에서,\n                                    증권계좌 및 투자 예치금 계좌에 대한 확인 및 변경은\n                                    <b class="blue-800">투자계좌 설정</b>에서 하실 수 있습니다.\n                                </template>\n                            </span>\n                        </template>\n\n                        <template v-if="status.investor == \'Y\' && status.memIvsState == \'MIC003\'">\n                            <span class="mypage-setting-color-text">{{userName}}</span>님은 투자회원 승인이<br/>\n                            <span class="mypage-setting-color-text">반려되었습니다</span>\n                            <span class="mypage-setting-small-text">\n                                <b class="blue-800">\'투자회원 설정\'</b>에서 반려사유를 확인하세요<br/>\n                                문의 : 02.6954.2568  |  contact@ycrowdy.com\n                            </span>\n                        </template>\n\n                        <div class="mt40" v-if="status.investor == \'N\'">\n                            <a class="mypage-btn-1" v-on:click="registerInfo">투자회원 등록하기</a>\n                        </div>\n\n                        <div class="mt40 xs-mt35" v-if="status.investor == \'Y\'">\n                            <a class="mypage-btn-2 mr15 xs-mr5" v-on:click="registerInfo" :class="{\'mypage-btn-active\' : status.memIvsState == \'MIC003\'}">투자회원 설정</a>\n                            <a class="mypage-btn-2" v-on:click="virtualAccount" :class="{\'mypage-btn-active\' : status.virtualAccountConfirm == \'N\'}">투자계좌 설정</a>\n                        </div>\n                    </div>\n                </div>\n            ',
                        props: ["status"],
                        data: function() {
                            return {
                                type: 1,
                                request: {
                                    memCode: userInfo.memCode,
                                    memShotImg: userInfo.image
                                },
                                userName: userInfo.name
                            }
                        },
                        mounted: function() {
                            $(".switch-hb").bootstrapSwitch()
                        },
                        computed: {
                            userImage: function() {
                                return userInfo.image
                            },
                            userType: function() {
                                return userInfo.type
                            },
                            userIvsType: function() {
                                return 3 == this.userType ? "전문투자자" : "MIT001" == this.status.memIvsType ? "일반투자자" : "MIT002" == this.status.memIvsType ? "소득요건 등 적격투자자" : "MIT003" == this.status.memIvsType ? "전문투자자" : void 0
                            }
                        },
                        created: function() {
                            this.getMemberCertiInfo()
                        },
                        methods: {
                            getMemberCertiInfo: function() {
                                var e = this;
                                $(".page-loader-more").fadeIn(""), axios.post("/data/member/certi/info", this.request).then(function(t) {
                                    if ($(".page-loader-more").fadeOut(""), "0000" != t.data.rCode) return void noti.open(t.data.rMsg);
                                    var n = t.data.rData;
                                    "Y" == n.memCiConfirm && 1 == e.userType && (e.userName = n.memName)
                                })
                            },
                            registerInfo: function() {
                                this.$emit("change-register-ivs-info", !0)
                            },
                            virtualAccount: function() {
                                this.$emit("change-virtual-account", !0)
                            }
                        },
                        components: {
                            dropifyInput: n(2).default.component()
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div class="mt60 xs-mt30 mb80 mypage-myaccount-layout">\n                \x3c!-- 사진영역--\x3e\n                <div class="dropify-wrapper-80 mypage-myaccount-photo">\n                    <dropify-input accept="image/*" v-model="request.memShotImgFile" default-message="" :default-img="userImage"></dropify-input>\n                </div>\n\n                \x3c!-- 컨텐츠 영역 --\x3e\n                <div class="mypage-form xs-mt30">\n\n                    <div class="mb20 mypage-title">투자 회원 {{registerTitle}}하기</div>\n\n                    \x3c!-- 이름 (실명)--\x3e\n                    <div for="member_name" class="mypage-rabel mb5">이름(실명)</div>\n                    <input type="text" class="form-control mp-input1" title="이름을 입력하세요." v-model.trim="request.memIvsRegiName" placeholder="이름을 입력" :disabled="status.memCiConfirm == \'Y\'"/>\n                    \x3c!-- //이름 --\x3e\n\n                    \x3c!-- 주민등록번호 --\x3e\n                    <template v-if="juminYN">\n                        <div for="member_jumin1" class="mypage-rabel mb5">주민등록번호</div>\n                        <div class="common-flex-between mypage_jumin">\n                            <number-input type="tel" class="form-control mp-input1 textLeft" placeholder="앞자리6자리" maxlength="6" :num="certiInfo.birth" v-model.trim="certiInfo.birth" :disabled="status.memCiConfirm == \'Y\' || regiConfirm == true"/></number-input>\n                            <div class="ivs-pro-dash"></div>\n                            <input autocomplete="new-password" type="tel" style="font-family: text-security-disc!important; -webkit-text-security: disc;" class="form-control mp-input1" placeholder="뒷자리7자리" maxlength="7"  v-model.trim="request.memIvsRegiCd" :disabled="regiConfirm == true"/></input>\n                            <a class="mp-requestbtn" v-on:click="checkRegiNo" v-if="regiConfirm == false">인증요청</a>\n                        </div>\n                    </template>\n                    \x3c!-- //주민등록번호 --\x3e\n\n                    \x3c!-- 인증 을 안했을 경우,--\x3e\n                    <template v-if="status.memCiConfirm == \'N\'">\n\n                        <div class="option_group option_group_none mt20">\n                            <div class="option1_radio">\n                                <label for="option1_radio6" class="radio-inline mypage-radio-custom-1">\n                                    <input type="radio" name="option1_radio_2" id="option1_radio6" value="1" v-model="authType" /><span class="webfont">휴대폰본인인증</span>\n                                </label>\n                                <label for="option1_radio7" class="radio-inline mypage-radio-custom-1">\n                                    <input type="radio" name="option1_radio_2" id="option1_radio7" value="2" v-model="authType"/><span class="webfont">카드본인인증</span>\n                                </label>\n                            </div>\n                        </div>\n\n                        \x3c!-- 휴대폰 본인인증 화면 --\x3e\n                        <template v-if="authType == 1">\n                            <label class="mypage-rabel mt20">통신사</label>\n                            <select class="ivs-select-button ivs-select-arrow" v-model="selectCom">\n                                <option value="" disabled selected>통신사를 선택해주세요</option>\n                                <option v-for="item in mobileCom" :value="item.value">{{item.text}}</option>\n                            </select>\n\n                            \x3c!-- 휴대폰 번호 --\x3e\n                            <div for="member_mobile" class="mypage-rabel mb5 mt10">전화번호</div>\n                            <div class="displayFlex">\n                                <number-input type="tel" class="form-control mp-input1" placeholder="\'-\' 없이 핸드폰 번호를 입력해주세요." maxlength="11" :num="certiInfo.memTelNo" v-model="certiInfo.memTelNo" :disabled="status.memCiConfirm == \'Y\'"/></number-input>\n                                <a class="mp-requestbtn" v-on:click="sendPhoneAuth" v-if="status.memCiConfirm == \'N\'">{{requestWord}}</a>\n                            </div>\n                            \x3c!-- //휴대폰 번호 --\x3e\n\n                            <template v-if="sendAuthNumber">\n                                <div class="mypage-rabel">인증번호 입력</div>\n                                <div class="displayFlex">\n                                    <number-input type="tel" class="form-control mp-input1 mb0" placeholder="" maxlength="8" :num="param1.memAuthNo" v-model="param1.memAuthNo" :disabled="timeOut"/></number-input>\n                                    <div class="mp-requestbtn">{{ time }}</div>\n                                </div>\n                                <span class="crowdy-color-blue font12">통신사의 사정에 따라 문자 수신이 다소 늦어질 수 있습니다.</span>\n                                <vue-recaptcha sitekey="6LdbvpkUAAAAABuHxlZkN_IJTEPYeG5CrRjq371_" @verify="onCaptchaVerified" class="mt15 xs-mt5 ivs-vue-cap"></vue-recaptcha>\n\n                                <label for="dataCheck" class="checkbox-inline-1 ivs-check-bottom" v-for="(item,index) in agree" :style="{\'margin-top\' : -13*index + \'px\'}" >\n                                    <input type="checkbox" name="dataCheck" v-model="item.check"/><span class="label scaleSmall"></span><span class="ivs-check-custom" > {{item.text}} &nbsp;</span>\n                                    <a href="javascript:void(0)" class="blue-800 ivs-check-custom" data-toggle="modal" data-target="#authModal" v-on:click="modalChange(index)">전문보기</a>\n                                </label>\n\n                                <auth-modal :agreeIdx="modalSelect" :selectCom="selectCom"></auth-modal>\n\n                                <div class="mypage-setting-btn" v-on:click="authCheck">인증 확인</div>\n                            </template>\n                            <br/>\n                        </template>\n\n                        \x3c!-- 카드 본인인증 화면 --\x3e\n                        <template v-if="authType == 2">\n                            <div style="margin-bottom:10px; background-color:#efefef; border:1px solid #000; text-align:center;">\n                                <h5>나이스 카드 본인 인증이 <br /> 잠시 중단되었습니다.<br />\n                                빠른 시일 내에 복구하도록 하겠습니다.</h5>\n                            </div>\n                            \x3c!--\n                            < !-- 휴대폰 번호 -- >\n                            <div for="member_mobile" class="mypage-rabel mb5 mt20">전화번호</div>\n                            <div class="displayFlex">\n                                <number-input type="tel" class="form-control mp-input1" placeholder="\'-\' 없이 핸드폰 번호를 입력해주세요." maxlength="11" :num="mobileRequest.mobileNo" v-model="mobileRequest.mobileNo" :disabled="authMobileConfirm"/></number-input>\n                                <a class="mp-requestbtn" v-on:click="mobileCardAuth" >{{requestWord}}</a>\n                            </div>\n                            < !-- //휴대폰 번호 -- >\n\n                            <template v-if="sendAuthNumber && !authMobileConfirm">\n                                <div class="mypage-rabel">인증번호 입력</div>\n                                <div class="displayFlex">\n                                    <number-input type="tel" class="form-control mp-input1 mb0" placeholder="" maxlength="8" :num="mobileRequest.authNo" v-model="mobileRequest.authNo" :disabled="timeOut"/></number-input>\n                                    <div class="mp-requestbtn">{{ time }}</div>\n                                </div>\n                                <span class="crowdy-color-blue font12">통신사의 사정에 따라 문자 수신이 다소 늦어질 수 있습니다.</span>\n                                <div class="mypage-setting-btn mt30 mb30" v-on:click="mobileCardResult">인증 확인</div>\n                            </template>\n\n                            <div class="mypage-setting-btn mt20" v-on:click="authCard" v-if="authMobileConfirm">카드 확인</div>\n                            <br/>\n                            --\x3e\n                        </template>\n                    </template>\n\n                    \x3c!-- 인증을 했을 경우 --\x3e\n                    <template v-if="status.memCiConfirm == \'Y\'">\n                        <div for="member_mobile" class="mypage-rabel mb5 mt10">전화번호</div>\n                        <number-input type="tel" class="form-control mp-input1" placeholder="\'-\' 없이 핸드폰 번호를 입력해주세요." maxlength="11" :num="certiInfo.memTelNo" v-model="certiInfo.memTelNo" disabled/></number-input>\n                    </template>\n\n                    \x3c!-- 이메일 --\x3e\n                    <div for="member_email" class="mypage-rabel mb5">이메일</div>\n                    <input type="email" v-model="userEmail" class="form-control mp-input1" id="member_email" maxlength="100" placeholder="" disabled/>\n                    \x3c!-- //이메일 --\x3e\n\n                    \x3c!-- 우편번호 --\x3e\n                    <div for="zip_code" class="mypage-rabel mb5">우편번호</div>\n                    <div class="common-flex-end">\n                        <input type="tel" class="form-control mp-input1 mypage-zip-layout1" v-on:click="postOpen" v-model="postNum" name="zip_code" id="zip_code" placeholder="" readonly="readonly"/>\n                        <div class="mypage-btn-search" v-on:click="postOpen"></div>\n                    </div>\n                    \x3c!-- //우편번호 --\x3e\n\n                    \x3c!-- 주소 --\x3e\n                    <div for="address1" class="mypage-rabel mb5">주소</div>\n                    <input type="text" class="form-control mp-input1" v-on:click="postOpen" v-model="address1" name="address1" id="address1" placeholder="클릭해서 주소를 검색해주세요." readonly="readonly" />\n                    <input type="text" class="form-control mp-input1" v-model="request.memIvsAddr2" name="address2" id="address2" placeholder="상세 주소를 입력해주세요." />\n                    \x3c!-- //주소 --\x3e\n                            \n                    \x3c!-- 기본정보 수정 --\x3e\n                    <div class="mypage-setting-btn mt15" v-on:click="updateBasicInfo()" v-if="investor == \'Y\'">설정 저장</div>\n                    \x3c!-- //기본정보 수정 --\x3e\n\n\n                    \x3c!-- 회원유형 --\x3e\n                    <div class="mypage-title mt50">회원유형</div>\n                    \n                    <div class="mypage-rabel mb5 mt20">회원유형 선택</div>\n                    <div class="option_group option_group_none">\n                        <div class="option1_radio">\n                            <label for="option1_radio1" class="radio-inline mypage-radio-custom">\n                                <input type="radio" name="option1_radio" id="option1_radio1" value="MIT001" v-model="request.memIvsType" :disabled="micType1Disabled"/><span class="webfont">일반투자자</span>\n                            </label>\n                            <label for="option1_radio2" class="radio-inline mypage-radio-custom">\n                                <input type="radio" name="option1_radio" id="option1_radio2" value="MIT002" v-model="request.memIvsType" v-on:click="changeMemIvsType(1)" :disabled="micType2Disabled"/><span class="webfont">적격투자자</span>\n                            </label>\n                            <label for="option1_radio3" class="radio-inline mypage-radio-custom">\n                                <input type="radio" name="option1_radio" id="option1_radio3" value="MIT003" v-model="request.memIvsType" v-on:click="changeMemIvsType(2)" :disabled="micType3Disabled"/><span class="webfont">전문투자자</span>\n                            </label>\n                        </div>\n                    </div>\n\n                    \x3c!-- 일반투자자 --\x3e\n                    <div id="option1_contents_radio1" class="otab1_contents" v-if="request.memIvsType == \'MIT001\'"></div>\n                    \x3c!-- //일반투자자 --\x3e\n                    \n                    \x3c!-- 소득요건 등 적격투자자 or 전문투자자--\x3e\n                    <div id="option1_contents_radio2" v-if="request.memIvsType == \'MIT002\' || request.memIvsType == \'MIT003\'">\n                        <div class="mypage-rabel mt10">증빙서류</div>\n\n                        <div class="vod-holder input-append" v-for="(item, index) in request.memIvsFiles" v-if="request.memIvsFiles[index].state == true">\n                            <div class="mypage-file-layout input-group input-group-file">\n                                <input type="text" class="form-control mb5 mypage-doc-width" :class="{\'error\' : errors.has(\'memIvsFiles[files]\')}" v-model="request.memIvsFiles[index].fileName" placeholder="파일을 업로드해주시기 바랍니다." readonly="readonly" />\n                                <span class="input-group-btn common-default-flex"">\n                                    <span class="btn btn-outline btn-file mr5">\n                                        <i class="fa fa-upload" aria-hidden="true"></i>\n                                        <input type="file" name="" multiple="" />\n                                        <file-input v-model="request.memIvsFiles[index]" data-vv-name="memIvsFiles" v-validate="\'required\'" :disabled="memIvsFilesDisabled" v-on:error="error"></file-input>\n                                    </span>\n                                    <span class="files-add vod-add mr5" v-on:click="fileAdd" v-if="((index + 1 == request.memIvsFiles.length  || index == viewAddButtonCount) && userTypeDocCount != 5) && !memIvsFilesDisabled">+</span>\n                                    <span class="files-add img-delete vod-delete" v-on:click="fileDelete(index)" v-if="userTypeDocCount != 1 && !memIvsFilesDisabled&& !(index + 1 == request.memIvsFiles.length)">-</span>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- //소득요건 등 적격투자자 or 전문투자자 --\x3e\n\n\n                    \x3c!-- 회원유형 : 투자 설명 --\x3e\n                    <div class="mt10">  \n                        <div class="mypage-setting-desc mb15 red-800" v-if="request.memIvsState == \'MIC003\'">\n                            인증이 반려 되었습니다. 반려사유를 살펴보고 다시 제출해주세요. <br/>\n                            <a href="javascript:void(0)" class="btn-link grey-600 pl0 pr0 ml10" v-on:click="showRejectedModal(2)">반려사유 보기 <i class="fa fa-angle-right ml5" aria-hidden="true"></i></a>\n                        </div>\n                        <div class="mypage-setting-desc">\n                            투자자 유형에 따라 투자한도가 달라질 수 있습니다. 투자자 유형을 변경하려면, 소득요건 등 적격투자자 또는 전문투자자의 경우에 따라 자격요건에 따른 서류를 제출하신 후 인증을 받으셔야 합니다.<br />\n                            <a href="javascript:void(0)" class="blue-800" data-toggle="modal" data-target="#investModal">투자자별 자격 요건 안내 <i class="fa fa-angle-right ml5" aria-hidden="true"></i></a>\n                        </div>\n                        <div class="mypage-setting-desc mt25">\n                            등록을 완료하시면 <a href="/crowdy/term?menu=3" class="blue-800">서비스 이용약관</a> 및 <a href="/crowdy/term?menu=4" class="blue-800">개인정보취급방침</a>에 동의하시는 것으로 간주합니다.\n                        </div>\n                    </div>\n\n                    \x3c!-- 회원유형 수정 --\x3e\n                    <div class="mypage-setting-btn mt15" v-on:click="updateIvsType()" v-if="(investor == \'Y\' && request.memIvsState == \'MIC003\') || (memIvsOriginalType == \'MIT002\' && request.memIvsType == \'MIT003\') || memIvsOriginalType == \'MIT001\'">설정 저장</div>\n                    \x3c!-- //회원유형 수정 --\x3e\n\n                    \x3c!-- 실명확인용 서류 --\x3e\n                    <div class="mt50 mb20">\n                        <div class="mb20 mypage-title">실명확인용 서류</div>\n\n                        \x3c!-- 실명확인증표 --\x3e\n                        <div class="mypage-rabel mb5">실명확인증표</div>\n                        \n                        <div class="input-group input-group-file common-default-flex">\n                            <input type="text" class="form-control mypage-search-width" v-model="request.memIvsRnmFile.fileName" placeholder="파일을 업로드해주시기 바랍니다." readonly="readonly" />\n                            <span class="input-group-btn egnolerValue">\n                                <span class="btn btn-outline btn-file">\n                                    <i class="fa fa-upload" aria-hidden="true"></i>\n                                    <file-input v-model="request.memIvsRnmFile" data-vv-name="memIvsRnmFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                                </span>\n                            </span>\n                        </div>\n\n                        <div class="mypage-setting-desc mb15 red-800" v-if="request.memIvsRnmDocStatus == \'MIRT04\'">\n                            인증이 반려 되었습니다. 반려사유를 살펴보고 다시 제출해주세요. <br/>\n                            <a href="javascript:void(0)" class="btn-link grey-600 pl0 pr0 ml10" v-on:click="showRejectedModal(1)">반려사유 보기 <i class="fa fa-angle-right ml5" aria-hidden="true"></i></a>\n                        </div>\n                        <div class="mypage-setting-desc">\n                            실명확인증표 사본은 비대면 실명확인을 위한 필수 서류입니다. 주민등록증, 여권, 운전면허증 중 1가지를 선택하여 사본(사진, 스캔 이미지)을 등록해주세요.\n                        </div>\n                        \x3c!-- //실명확인증표 --\x3e\n                    </div>\n                    \x3c!-- //실명확인용 서류 --\x3e    \n\n                    \x3c!-- 실명확인용 서류 수정  --\x3e\n                    <div class="mypage-setting-btn mb50" v-on:click="updateRealNameDoc()" v-if="investor == \'Y\' && request.memIvsRnmDocStatus == \'MIRT04\'">설정 저장</div>\n                    \x3c!-- //실명확인용 서류 수정 --\x3e\n\n                    \x3c!-- 연고자여부 --\x3e\n                    <div class="mypage-rabel mb5">연고자여부</div>\n                    <div class="option_group option_group_none">\n                        <div class="option1_radio">\n                            <label for="option1_radio4" class="radio-inline mypage-radio-custom-1">\n                                <input type="radio" name="option1_radio_1" id="option1_radio4" value="2" v-model="request.relConfirm" v-on:click="changeRelStatus(\'2\')" :disabled="relDisabled"/><span class="webfont">연고자 아닙니다</span>\n                            </label>\n                            <label for="option1_radio5" class="radio-inline mypage-radio-custom-1">\n                                <input type="radio" name="option1_radio_1" id="option1_radio5" value="1" v-model="request.relConfirm" v-on:click="changeRelStatus(\'1\')" :disabled="relDisabled"/><span class="webfont">연고자 맞습니다</span>\n                            </label>\n                        </div>\n                    </div>\n                    <div class="mypage-setting-desc mt10">\n                        연고자는 투자하고자하는 기업의 기존 관계자, 주주에 해당 할 때만 선택하실 수 있습니다. 특정 기업의 연고자가 되면, \n                        해당 기업에 한해 무제한으로 투자가 가능합니다. 해당 기업의 주주 명부 혹은 재직증명서를 제출하신 후 인증을 받으셔야 합니다.\n                    </div>\n\n                    <template v-if="request.relConfirm == 1">\n                        \x3c!-- 연고자 증빙서류 --\x3e\n                        <div class="mypage-rabel mb5 mt20">증빙서류</div>\n                        <div class="input-group input-group-file common-default-flex">\n                            <input type="text" class="form-control mypage-search-width" :class="{\'error\' : errors.has(\'memIvsRelFile\')}" v-model="request.memIvsRelFile.fileName" placeholder="파일을 업로드해주시기 바랍니다." readonly="readonly"/>\n                            <span class="input-group-btn egnolerValue">\n                                <span class="btn btn-outline btn-file">\n                                    <i class="fa fa-upload" aria-hidden="true"></i>\n                                    <file-input v-model="request.memIvsRelFile" data-vv-name="memIvsRelFile" v-validate="\'required\'" :disabled="relDisabled" v-on:error="error"></file-input>\n                                </span>\n                            </span>\n                            \x3c!--<label class="error" v-if="errors.has(\'memIvsRelFile\')" v-text="errors.first(\'memIvsRelFile\')"></label>--\x3e\n                        </div>\n\n                        \x3c!-- 사업자등록번호 --\x3e\n                        <div class="mypage-rabel mt10 mb5">사업자등록번호</div>\n                        <number-input type="tel" class="form-control" :num="request.memIvsRelComNo" v-model="request.memIvsRelComNo" maxlength="10" placeholder="" :disabled="relDisabled"/></number-input>\n                        \x3c!-- //사업자등록번호 --\x3e\n\n                        <div class="mypage-setting-desc mb15 red-800" v-if="request.memIvsRelStatus == \'MIR004\'">\n                            인증이 반려 되었습니다. 반려사유를 살펴보고 다시 제출해주세요. <br/>\n                            <a href="javascript:void(0)" class="btn-link grey-600 pl0 pr0 ml10" v-on:click="showRejectedModal(3)">반려사유 보기 <i class="fa fa-angle-right ml5" aria-hidden="true"></i></a>\n                        </div>\n                        \x3c!-- //연고자 증빙서류 --\x3e\n                    </template>\n\n                    \x3c!-- 연고자 수정 --\x3e\n                    <div class="mypage-setting-btn mt15" v-on:click="updateRel()" v-if="(investor == \'Y\' && (request.memIvsRelStatus == \'MIR001\' || request.memIvsRelStatus == \'MIR004\')) || relRegistered == false">설정 저장</div>\n                    \x3c!-- // 연고자 수정 --\x3e\n\n                    \x3c!-- 투자 회원 이용약관 동의 --\x3e\n                    <div v-if="investor == \'N\'" class="mt20">\n                        <label class="chk_container mypage-setting-desc">투자회원 <a class="blue-800" href="/crowdy/term?menu=3" target="_blank"><strong>이용약관</strong></a>에 동의합니다.\n                            <input type="checkbox" v-model="checkTerms1">\n                            <span class="checkmark"></span>\n                        </label>\n                    </div>\n\n                    <div v-if="investor == \'N\'" class="mt10">\n                        <label class="chk_container mypage-setting-desc">투자회원 <a class="blue-800" href="/crowdy/term?menu=5" target="_blank"><strong>개인정보 취급방침</strong></a>에 동의합니다.\n                            <input type="checkbox" v-model="checkTerms2">\n                            <span class="checkmark"></span>\n                        </label>\n                    </div>\n                    \x3c!-- 투자 회원 이용약관 동의 --\x3e\n\n                    <div class="mt20 common-default-flex" v-if="investor == \'N\'">\n                        <button type="button" class="mypage-setting-btn mypage-setting-btn-cancle" v-on:click="backToInfoPage">취소</button>\n                        <button type="button" class="mypage-setting-btn" v-on:click="applyData()">등록</button>\n                    </div>\n\n                    <invest-modal :mode="1"></invest-modal>\n                    <rejected-modal :rejectedReason="rejectedContent"></rejected-modal>\n\n                    \n                    <form name="form_chk" method="post">\n                        <input type="hidden" name="m" value="checkplusSerivce">                     \x3c!-- 필수 데이타로, 누락하시면 안됩니다. --\x3e\n                        <input type="hidden" name="EncodeData" id="encodeData" value="">            \x3c!-- 위에서 업체정보를 암호화 한 데이타입니다. --\x3e\n\n                        <input type="hidden" name="param_r1" value="accountSetting.authResult">\n                        <input type="hidden" name="param_r2" :value="mobileRequest.mobileNo">\n                        <input type="hidden" name="param_r3" :value="request.memCode">\n                    </form>\n                    \n                </div>\n            </div>\n            ',
                        props: ["status", "certiInfo"],
                        data: function() {
                            return {
                                dataConfirm: !1,
                                mobileCom: [{
                                    text: "SKT",
                                    value: "1"
                                }, {
                                    text: "KT",
                                    value: "2"
                                }, {
                                    text: "LG U+",
                                    value: "3"
                                }, {
                                    text: "알뜰폰SKT",
                                    value: "5"
                                }, {
                                    text: "알뜰폰KT",
                                    value: "6"
                                }, {
                                    text: "알뜰폰LG",
                                    value: "7"
                                }],
                                selectCom: "",
                                agree: [],
                                request: {
                                    bizNum: "",
                                    memCode: userInfo.memCode,
                                    memType: userInfo.type,
                                    memIvsRegiName: "",
                                    memEmail: userInfo.email,
                                    memIvsAddr1: "",
                                    memIvsAddr2: "",
                                    memIvsPostNum: "",
                                    resName: "",
                                    memShotImg: userInfo.image,
                                    authChange: !1,
                                    memIvsDoc: "",
                                    memIvsFiles: [{
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    }],
                                    memIvsRnmDoc: "",
                                    memIvsRnmDocStatus: "",
                                    memIvsRnmReturn: "",
                                    memIvsRnmFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsRelDoc: "",
                                    memIvsRelFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    relConfirm: "2",
                                    memIvsRelComNo: "",
                                    memIvsRelStatus: "MIR001",
                                    memIvsRelReturn: "",
                                    memIvsRegiCode: "",
                                    memIvsRegiCd: "",
                                    memIvsRegiHpNo: "",
                                    memIvsTellNo: "",
                                    memIvsType: "MIT001",
                                    memIvsSecurCode: "1",
                                    memIvsSecurNo: "",
                                    memIvsBankCode: "001",
                                    memIvsBankNo: "",
                                    memIvsState: "",
                                    memIvsReturn: "",
                                    memIvsBirth: "",
                                    memIvsSex: ""
                                },
                                param: {
                                    memCode: userInfo.memCode,
                                    memName: "",
                                    memTelNo: "",
                                    memSex: "",
                                    memBirth: "",
                                    memTelCompany: "",
                                    memNameType: "1"
                                },
                                param1: {
                                    memCode: userInfo.memCode,
                                    memTelNo: "",
                                    memAuthNo: "",
                                    recaptchaToken: ""
                                },
                                sendAuthNumber: !1,
                                authConfirm: !1,
                                address: {
                                    postNum: "",
                                    address1: ""
                                },
                                mobileRequest: {
                                    mobileNo: "",
                                    reqSeq: "",
                                    authNo: ""
                                },
                                time: "5:00",
                                timerStart: !1,
                                timeOut: !1,
                                isCntdownRestart: !1,
                                timer: {},
                                regiCodeDisabled: !1,
                                securCodeOptions: [],
                                bankCodeOptions: [],
                                confirm: {
                                    bank: !1,
                                    community: !1,
                                    fund: !1,
                                    secur: !1
                                },
                                relDisabled: !1,
                                relRegistered: !0,
                                authType: 1,
                                authCardMobileConfirm: !1,
                                investor: this.status.investor,
                                userTypeDocCount: 0,
                                viewAddButtonCount: -1,
                                rejectedContent: "",
                                micType1Disabled: !1,
                                micType2Disabled: !1,
                                micType3Disabled: !1,
                                memIvsFilesDisabled: !1,
                                memIvsRnmDocDisabled: !1,
                                memIvsOriginalType: "",
                                memIvsOriginalFiles: [],
                                userTypeDocOriginalCount: 0,
                                viewAddButtonOriginalCount: -1,
                                requestWord: "인증요청",
                                checkTerms1: !1,
                                checkTerms2: !1,
                                os: "",
                                authError: !1,
                                authResultText: "",
                                modalSelect: 0,
                                juminYN: !0,
                                authMobileConfirm: !1,
                                regiConfirm: !1
                            }
                        },
                        created: function() {
                            this.getBankCodeList(), this.getSecurCodeList(), this.loadInvestState(), window.accountSetting = this, 0 == this.request.memIvsFiles.length && this.request.memIvsFiles.push(""), this.deviceCheck()
                        },
                        mounted: function() {
                            $(".switch-hb").bootstrapSwitch()
                        },
                        watch: {
                            selectCom: function() {
                                "1" == this.selectCom || "5" == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : "2" == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : "3" == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : "6" == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }, {
                                    text: "[KT 알뜰폰] 개인정보 제3자 제공 동의",
                                    check: !1
                                }] : "7" == this.selectCom && (this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+ 알뜰폰] 개인정보 제3자 제공 동의 ",
                                    check: !1
                                }])
                            },
                            authType: function() {
                                this.menuReset()
                            },
                            certiInfo: function() {
                                "Y" == this.certiInfo.memCiConfirm && (this.request.memIvsRegiName = this.certiInfo.memName)
                            }
                        },
                        computed: {
                            registerTitle: function() {
                                return "Y" == this.investor ? (this.regiCodeDisabled = !0, "수정") : (this.regiCodeDisabled = !1, "등록")
                            },
                            postNum: function() {
                                return this.request.memIvsPostNum = this.address.postNum, this.address.postNum
                            },
                            address1: function() {
                                return this.request.memIvsAddr1 = this.address.address1, this.address.address1
                            },
                            userEmail: function() {
                                return userInfo.email
                            },
                            userImage: function() {
                                return userInfo.image
                            },
                            ivsFileExist: function() {
                                for (var e = 0; e < this.request.memIvsFiles.length; e++)
                                    if (1 == this.request.memIvsFiles[e].state && "" != this.request.memIvsFiles[e].fileName) return !0;
                                return !1
                            }
                        },
                        methods: {
                            getMemberCertiInfo: function() {
                                var e = this;
                                $(".page-loader-more").fadeIn(""), axios.post("/data/member/certi/info", {
                                    memCode: this.request.memCode
                                }).then(function(t) {
                                    if ($(".page-loader-more").fadeOut(""), "0000" != t.data.rCode) return void noti.open(t.data.rMsg);
                                    var n = t.data.rData;
                                    e.request.memIvsRegiName = n.memName
                                })
                            },
                            loadInvestState: function() {
                                this.request.memIvsState = this.status.memIvsState, "Y" == this.investor ? (this.load(), this.juminYN = !1) : (this.userTypeDocCount++, this.viewAddButtonCount++, this.$nextTick(function() {
                                    $(".option_group .radio-inline input, .option_group .checkbox-inline input").checkboxradio(), $(".option1_radio, .option2_radio, .option1_checkbox").controlgroup(), $(".option_group .radio-inline input, .option_group .checkbox-inline input").checkboxradio("refresh")
                                }), this.getMemberCertiInfo())
                            },
                            load: function() {
                                var e = this;
                                axios.post("/data/member/investor/info", this.request).then(function(t) {
                                    if (e.authType = 1, e.request.relConfirm = "2", e.request.memIvsAddr1 = t.data.rData.memIvsAddr1, e.request.memIvsAddr2 = t.data.rData.memIvsAddr2, e.request.memIvsPostNum = t.data.rData.memIvsPostNum, e.address.postNum = t.data.rData.memIvsPostNum, e.address.address1 = t.data.rData.memIvsAddr1, e.request.memIvsRegiName = t.data.rData.memIvsRegiName, e.request.memIvsRegiHpNo = t.data.rData.memIvsRegiHpNo, e.request.memIvsRelStatus = t.data.rData.memIvsRelStatus, e.request.memIvsRelReturn = t.data.rData.memIvsRelReturn, t.data.rData.memIvsSecurCode.length > 0 && (e.request.memIvsSecurCode = t.data.rData.memIvsSecurCode), t.data.rData.memIvsBankCode.length > 0 && (e.request.memIvsBankCode = t.data.rData.memIvsBankCode), e.request.memIvsSecurNo = t.data.rData.memIvsSecurNo, e.request.memIvsBankNo = t.data.rData.memIvsBankNo, e.request.memIvsState = t.data.rData.memIvsState, e.request.memIvsReturn = t.data.rData.memIvsReturn, e.request.memIvsRnmDocStatus = t.data.rData.memIvsRnmDocStatus, e.request.memIvsRnmReturn = t.data.rData.memIvsRnmReturn, e.request.memIvsType = t.data.rData.memIvsType, e.request.memIvsDoc = t.data.rData.memIvsDoc, e.request.memIvsFiles = t.data.rData.memIvsFiles, e.request.memIvsRnmFile.fileName = t.data.rData.memIvsRnmDocName, "MIR004" != e.request.memIvsRelStatus && (e.request.memIvsRelComNo = t.data.rData.memIvsRelComNo, e.request.memIvsRelFile.fileName = t.data.rData.memIvsRelDocName), "" != e.request.memIvsRegiCode && (e.juminYN = !1), e.memIvsOriginalType = t.data.rData.memIvsType, "MIT002" == e.request.memIvsType && "MIC003" != e.request.memIvsState)
                                        if (e.micType1Disabled = !0, "MIC002" == e.request.memIvsState) {
                                            e.micType3Disabled = !1;
                                            for (var n = 0; n < e.request.memIvsFiles.length; n++) e.memIvsOriginalFiles.push(e.request.memIvsFiles[n])
                                        } else e.micType3Disabled = !0;
                                    else "MIT003" == e.request.memIvsType && "MIC003" != e.request.memIvsState && (e.micType1Disabled = !0, e.micType2Disabled = !0);
                                    "MIC003" == e.request.memIvsState ? e.request.memIvsFiles = [{
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    }] : "MIT001" != e.request.memIvsType && (e.memIvsFilesDisabled = !0), "MIRT01" == e.request.memIvsRnmDocStatus || "MIRT04" == e.request.memIvsRnmDocStatus ? (e.request.memIvsRnmFile.fileName = "", e.memIvsRnmDocDisabled = !1) : e.memIvsRnmDocDisabled = !0, "MIR001" != e.request.memIvsRelStatus ? (e.request.relConfirm = "1", "MIR002" == e.request.memIvsRelStatus || "MIR003" == e.request.memIvsRelStatus ? (e.relDisabled = !0, e.relRegistered = !0) : (e.relRegistered = !1, e.relDisabled = !1)) : (e.relRegistered = !1, e.relDisabled = !1);
                                    for (var n = 0; n < e.request.memIvsFiles.length; n++) e.request.memIvsFiles[n].state && (e.userTypeDocCount++, e.viewAddButtonCount++);
                                    if (0 == e.request.memIvsFiles.length) {
                                        var a = {
                                            fileData: "",
                                            fileName: "",
                                            state: !0
                                        };
                                        e.userTypeDocCount < 5 && (e.userTypeDocCount++, e.viewAddButtonCount++, e.request.memIvsFiles.push(a))
                                    }
                                    e.userTypeDocOriginalCount = e.userTypeDocCount, e.viewAddButtonOriginalCount = e.viewAddButtonCount, e.$nextTick(function() {
                                        $(".option_group .radio-inline input, .option_group .checkbox-inline input").checkboxradio(), $(".option1_radio, .option2_radio, .option1_checkbox").controlgroup(), $(".option_group .radio-inline input, .option_group .checkbox-inline input").checkboxradio("refresh")
                                    })
                                })
                            },
                            postOpen: function() {
                                post.open(this)
                            },
                            deviceCheck: function() {
                                isMobile.apple.device ? this.os = "M" : isMobile.android.device ? this.os = "M" : this.os = "W"
                            },
                            mobileCardAuth: function() {
                                var e = this;
                                if (!this.authMobileConfirm) {
                                    if (!this.request.memIvsRegiName) return void noti.open("실명을 입력해주세요.");
                                    if ("" == this.mobileRequest.mobileNo) return void noti.open("휴대폰 번호를 입력해 주세요.");
                                    if ("" == this.certiInfo.birth) return void noti.open("주민등록번호 앞자리를 입력해주세요.");
                                    if ("" == this.request.memIvsRegiCd) return void noti.open("주민등록번호 뒷자리를 입력해주세요.");
                                    if (this.request.memIvsRegiCd.length < 7) return void noti.open("주민등록번호 뒷자리는 7자리여야합니다.");
                                    clearTimeout(e.timer), $(".page-loader-more").fadeIn(""), axios.post("/auth/mobile", this.mobileRequest).then(function(t) {
                                        $(".page-loader-more").fadeOut(""), noti.open("인증번호를 요청하였습니다."), e.mobileRequest.reqSeq = t.data, e.requestWord = "재요청", e.sendAuthNumber = !0, e.timeOut = !1, e.timerStart = !0, e.countdown(e.countdownTimeOut)
                                    })
                                }
                            },
                            mobileCardResult: function() {
                                var e = this;
                                if ("" == this.mobileRequest.authNo) return void noti.open("인증번호를 입력해 주세요.");
                                $(".page-loader-more").fadeIn(""), axios.post("/auth/mobile/result", this.mobileRequest).then(function(t) {
                                    if ($(".page-loader-more").fadeOut(""), clearTimeout(e.timer), e.timerStart = !1, !t.data) return void noti.open("인증번호가 유효하지 않습니다.");
                                    e.requestWord = "인증완료", e.authMobileConfirm = !0
                                })
                            },
                            authCard: function() {
                                axios.post("/auth/nice/C").then(function(e) {
                                    document.getElementById("encodeData").value = e.data.rData.data, window.open("", "popupChk", "width=500, height=800, top=100, left=100, fullscreen=no, menubar=no, status=no, toolbar=no, titlebar=yes, location=no, scrollbar=no"), document.form_chk.action = "https://nice.checkplus.co.kr/CheckPlusSafeModel/checkplus.cb", document.form_chk.target = "popupChk", document.form_chk.submit()
                                })
                            },
                            authResult: function(e) {
                                e ? (this.$emit("set-ci-confirm-flag", !0), noti.open("본인인증이 완료되었습니다. <br/> 남은 사항들을 입력해주세요.")) : noti.open("본인인증에 실패했습니다 <br/> 다시시도해주세요.")
                            },
                            sendPhoneAuth: function() {
                                var e = this;
                                return this.request.memIvsRegiName ? "" == this.certiInfo.birth ? void noti.open("주민등록번호 앞자리를 입력해주세요.") : "" == this.request.memIvsRegiCd ? void noti.open("주민등록번호 뒷자리를 입력해주세요.") : this.request.memIvsRegiCd.length < 7 ? void noti.open("주민등록번호 뒷자리는 7자리여야합니다.") : "" == this.selectCom ? void noti.open("통신사를 선택해주세요") : "" == this.certiInfo.memTelNo ? void noti.open("휴대폰 번호를 입력해주세요.") : (e.param.memTelCompany = e.selectCom, e.param.memTelNo = e.certiInfo.memTelNo, e.param.memName = e.request.memIvsRegiName, e.param.memSex = e.request.memIvsRegiCd.substring(0, 1), e.param.memBirth = e.certiInfo.birth, $(".page-loader-more").fadeIn(""), void axios.post("/data/member/certi-call", this.param).then(function(t) {
                                    $(".page-loader-more").fadeOut("");
                                    var n = t.data;
                                    "0000" == n.rCode ? (e.requestWord = "재요청", e.sendAuthNumber = !0, e.timeOut = !1, e.timerStart = !0, e.countdown(e.countdownTimeOut)) : noti.open(n.rMsg)
                                })) : void noti.open("실명을 입력해주세요.")
                            },
                            authCheck: function() {
                                var e = this;
                                if (!e.sendAuthNumber) return void noti.open("본인인증을 완료해주세요.");
                                if ("" == e.param1.memAuthNo) return void noti.open("인증번호 입력을 해주세요.");
                                for (var t = 0; t < e.agree.length; t++)
                                    if (!e.agree[t].check) return void noti.open(e.agree[t].text + "는 필수입니다.");
                                e.param1.memTelNo = e.param.memTelNo, $(".page-loader-more").fadeIn(""), axios.post("/data/member/certi-check", this.param1).then(function(t) {
                                    $(".page-loader-more").fadeOut("");
                                    var n = t.data;
                                    "0000" == n.rCode ? (e.$emit("set-ci-confirm-flag", !0), e.sendAuthNumber = !1, noti.open("본인인증이 완료되었습니다. <br/> 남은 사항들을 입력해주세요.")) : noti.open(n.rMsg)
                                })
                            },
                            onCaptchaVerified: function(e) {
                                this.param1.recaptchaToken = e
                            },
                            modalChange: function(e) {
                                this.modalSelect = e
                            },
                            countdown: function(e) {
                                function t(e) {
                                    return e <= 9 ? "0" + e : e
                                }

                                function n() {
                                    c.isCntdownRestart && (c.time = "", c.isCntdownRestart = !1, clearTimeout(c.timer), l = 4, d = 59, a = +new Date + 1e3 * (60 * l + d) + 500), o = a - +new Date, o < 1e3 ? e() : (r = new Date(o), i = r.getUTCHours(), s = r.getUTCMinutes(), c.time = (i ? i + ":" + t(s) : s) + ":" + t(r.getUTCSeconds()), c.timer = setTimeout(n, r.getUTCMilliseconds() + 500))
                                }
                                var a, i, s, o, r, l = 4,
                                    d = 59,
                                    c = this;
                                a = +new Date + 1e3 * (60 * l + d) + 500, n()
                            },
                            countdownTimeOut: function() {
                                this.timeOut = !0, this.timerStart = !1
                            },
                            menuReset: function() {
                                this.mobileRequest.authNo = "", this.mobileRequest.mobileNo = "", this.requestWord = "인증요청", this.sendAuthNumber = !1, this.timeOut = !1, this.timerStart = !1, this.time = "5:00", clearTimeout(this.timer)
                            },
                            changeRelStatus: function(e) {
                                2 == e ? (this.request.memIvsRelStatus = "MIR001", this.request.memIvsRelFile = {
                                    fileData: "",
                                    fileName: "",
                                    state: !0
                                }, this.request.memIvsRelComNo = "", this.request.memIvsRelDocName = "", this.request.relConfirm = "2") : (this.request.memIvsRelStatus = "MIR002", this.request.relConfirm = "1")
                            },
                            error: function(e) {
                                noti.open("업로드되는 파일 사이즈는 10MB보다 작아야합니다.")
                            },
                            fileAdd: function() {
                                var e = {
                                    fileData: "",
                                    fileName: "",
                                    state: !0
                                };
                                this.userTypeDocCount < 5 && (this.userTypeDocCount++, this.viewAddButtonCount++, this.request.memIvsFiles.push(e))
                            },
                            fileDelete: function(e) {
                                this.request.memIvsFiles[e].state = !1, this.userTypeDocCount > 1 && this.userTypeDocCount--;
                                for (var t = 0; t < this.request.memIvsFiles.length; t++) 1 == this.request.memIvsFiles[t].state && (this.viewAddButtonCount = t)
                            },
                            getSecurCodeList: function() {
                                var e = this;
                                axios.post("/data/crowdy/code/invest", {
                                    gcode: "MEM_IVS_SECUR_CODE"
                                }).then(function(t) {
                                    var n = t.data;
                                    if ("0000" == n.rCode) {
                                        for (var a = 0; a < n.rData.length; a++) {
                                            var i = {
                                                id: n.rData[a].commonCode,
                                                text: n.rData[a].commonInfo
                                            };
                                            e.securCodeOptions.push(i)
                                        }
                                        e.confirm.secur = !0
                                    } else noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            getBankCodeList: function() {
                                var e = this;
                                axios.post("/data/crowdy/code/invest", {
                                    gcode: "IRMI_STOCK_BANK"
                                }).then(function(t) {
                                    var n = t.data;
                                    if ("0000" == n.rCode) {
                                        for (var a = 0; a < n.rData.length; a++) {
                                            var i = {
                                                id: n.rData[a].commonCode,
                                                text: n.rData[a].commonInfo
                                            };
                                            e.bankCodeOptions.push(i)
                                        }
                                        e.confirm.bank = !0
                                    } else noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            applyData: function() {
                                var e = this;
                                if (!this.regiConfirm) return void noti.open("주민등록번호 인증을 완료해주십시오.");
                                if ("N" == this.status.memCiConfirm) return void noti.open("휴대폰 인증이나 신용카드 인증을 완료해주십시오.");
                                if (0 == this.checkTerms1 || 0 == this.checkTerms2) return void noti.open("투자 회원 등록을 위해 약관 동의가 필요합니다.");
                                if (!this.request.memIvsRegiName) return void noti.open("실명을 입력해주세요.");
                                if ("" == this.certiInfo.birth) return void noti.open("주민등록번호 앞자리를 입력해주세요.");
                                if ("" == this.request.memIvsRegiCd) return void noti.open("주민등록번호 뒷자리를 입력해주세요.");
                                if (this.request.memIvsRegiCd.length < 7) return void noti.open("주민등록번호 뒷자리는 7자리여야합니다.");
                                if (0 == this.request.memIvsAddr2.length) return void noti.open("주소를 입력해주세요.");
                                if (0 == this.request.memIvsRnmFile.fileData.length && "" == this.request.memIvsRnmFile.fileName) return void noti.open("실명확인증표는 실명 확인용 필수서류입니다.");
                                if (("MIT002" == this.request.memIvsType || "MIT003" == this.request.memIvsType) && !this.ivsFileExist) return void noti.open("회원유형을 적격투자자나 전문투자자로 변경하시려면 <br/> 자격요건에 따른 서류를 제출하셔야합니다.");
                                for (var t = 0; t < this.request.memIvsFiles.length; t++) this.request.memIvsFiles[t].state && 0 == this.request.memIvsFiles[t].fileName.length && (this.request.memIvsFiles[t].state = !1);
                                if ("" == e.certiInfo.memTelNo) return void noti.open("휴대폰 번호를 입력해주세요.");
                                if (1 == this.request.relConfirm) {
                                    if (this.request.memIvsRelStatus = "MIR002", 0 == this.request.memIvsRelFile.fileData.length && "" == this.request.memIvsRelFile.fileName) return void noti.open("연고자 증빙서류는 연고자 확인용 필수서류입니다.");
                                    if ("" == this.request.memIvsRelComNo.trim()) return void noti.open("연고자 확인을 위해 사업자 등록번호를 입력해주세요.")
                                }
                                e.request.memIvsRegiCode = e.certiInfo.birth + e.request.memIvsRegiCd, e.request.memIvsRegiHpNo = e.certiInfo.memTelNo, e.request.memIvsBirth = e.certiInfo.memBirth, e.request.memIvsSex = e.certiInfo.memSex, $(".page-loader-more").fadeIn(""), axios.post("/member/investor/insert", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (e.juminYN = !1, window.dataLayer.push({
                                        event: "InvestorComplete"
                                    }), noti.open("투자회원 등록 신청이 완료되었습니다.", function() {
                                        window.open("/mypage/main?menu=5&sub-menu=2", "_self")
                                    })) : noti.open(t.data.rMsg)
                                })
                            },
                            updateBasicInfo: function() {
                                var e = this;
                                if (0 == this.request.memIvsAddr2.length) return void noti.open("주소를 입력해주세요.");
                                $(".page-loader-more").fadeIn(""), axios.post("/member/investor/update/basic", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("기본정보 수정이 완료되었습니다."), e.loadInvestState()) : noti.open(t.data.rMsg)
                                })
                            },
                            updateIvsType: function() {
                                var e = this;
                                if (this.request.memIvsDoc = "", ("MIT002" == this.request.memIvsType || "MIT003" == this.request.memIvsType) && !this.ivsFileExist) return void noti.open("회원유형을 적격투자자나 전문투자자로 변경하시려면 <br/> 자격요건에 따른 서류를 제출하셔야합니다.");
                                $(".page-loader-more").fadeIn(""), axios.post("/member/investor/update/type", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("회원유형 변경 신청이 완료되었습니다."), e.loadInvestState()) : noti.open(t.data.rMsg)
                                })
                            },
                            updateRealNameDoc: function() {
                                var e = this;
                                if (0 == this.request.memIvsRnmFile.fileData.length && "" == this.request.memIvsRnmFile.fileName) return void noti.open("실명확인증표는 실명확인용 필수서류입니다.");
                                this.request.memIvsRnmDoc = "", $(".page-loader-more").fadeIn(""), axios.post("/member/investor/update/real-name-doc", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("실명확인용 정보 수정 신청이 완료되었습니다."), e.loadInvestState()) : noti.open(t.data.rMsg)
                                })
                            },
                            updateRel: function() {
                                var e = this;
                                if (1 == this.request.relConfirm) {
                                    if (this.request.memIvsRelStatus = "MIR002", "" == this.request.memIvsRelComNo || null == this.request.memIvsRelComNo) return void noti.open("투자할 기업의 사업자등록번호를 입력해주세요.");
                                    if (0 == this.request.memIvsRelFile.fileData.length && "" == this.request.memIvsRelFile.fileName) return void noti.open("연고자 증빙서류를 업로드해주세요.");
                                    this.request.memIvsRelFile.fileData.length > 0 && (this.request.memIvsRelDoc = ""), ("MIR004" == this.request.memIvsRelStatus && 0 != this.request.memIvsRelFile.fileData.length || "MIR001" == this.request.memIvsRelStatus) && (this.request.memIvsRelStatus = "MIR002")
                                } else this.request.memIvsRelStatus = "MIR001", this.request.memIvsRelComNo = "", this.request.memIvsRelFile = {
                                    fileData: "",
                                    fileName: "",
                                    state: !0
                                };
                                $(".page-loader-more").fadeIn(""), axios.post("/member/investor/update/rel", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("연고자 정보 수정이 신청되었습니다."), e.loadInvestState()) : noti.open(t.data.rMsg)
                                })
                            },
                            showRejectedModal: function(e) {
                                this.rejectedContent = 1 === e ? this.request.memIvsRnmReturn : 2 === e ? this.request.memIvsReturn : this.request.memIvsRelReturn, $("#aRejectedModal").modal("show")
                            },
                            changeMemIvsType: function(e) {
                                if ("MIT002" == this.memIvsOriginalType && "MIC002" == this.request.memIvsState)
                                    if (1 === e) {
                                        this.memIvsFilesDisabled = !0, this.request.memIvsFiles = [];
                                        for (var t = 0; t < this.memIvsOriginalFiles.length; t++) this.request.memIvsFiles.push(this.memIvsOriginalFiles[t]), this.request.memIvsFiles[t].state = !0;
                                        this.userTypeDocCount = this.userTypeDocOriginalCount, this.viewAddButtonCount = this.viewAddButtonOriginalCount
                                    } else {
                                        var n = {
                                            fileData: "",
                                            fileName: "",
                                            state: !0
                                        };
                                        this.request.memIvsFiles = [], this.request.memIvsFiles.push(n), this.memIvsFilesDisabled = !1
                                    }
                            },
                            checkRegiNo: function(e, t) {
                                var n = this;
                                if (!this.regiConfirm) {
                                    if (!this.request.memIvsRegiName) return void noti.open("실명을 입력해주세요.");
                                    if ("" == this.certiInfo.birth) return void noti.open("주민등록번호 앞자리를 입력해주세요.");
                                    if ("" == this.request.memIvsRegiCd) return void noti.open("주민등록번호 뒷자리를 입력해주세요.");
                                    var e = this.certiInfo.birth,
                                        t = this.request.memIvsRegiCd;
                                    if (parseInt(t.substring(0, 1)) < 5) {
                                        for (var a = new Array, i = new Array, s = 0; s < e.length; s++) a[s] = e.charAt(s);
                                        for (var s = 0; s < t.length; s++) i[s] = t.charAt(s);
                                        for (var o = 0, s = 0; s < e.length; s++) o += a[s] * (2 + s);
                                        for (var s = 0; s < t.length - 1; s++) o += s >= 2 ? i[s] * s : i[s] * (8 + s);
                                        if ((11 - o % 11) % 10 != i[6]) return void noti.open("올바르지 않은 주민등록번호를 입력하셨습니다. 올바른 주민등록번호를 입력해주세요 :)")
                                    }
                                    var r = {
                                        memIvsRegiCode: e + t,
                                        memIvsRegiName: this.request.memIvsRegiName
                                    };
                                    $(".page-loader-more").fadeIn(""), axios.post("/data/member/regi-check", r).then(function(e) {
                                        $(".page-loader-more").fadeOut("");
                                        var t = e.data;
                                        "0000" == t.rCode ? (n.regiConfirm = !0, noti.open("주민등록번호 인증이 완료되었습니다.")) : (n.regiConfirm = !1, noti.open(t.rMsg))
                                    })
                                }
                            },
                            backToInfoPage: function() {
                                this.$emit("change-register-ivs-info", !1)
                            }
                        },
                        components: {
                            dropifyInput: n(2).default.component(),
                            fileInput: n(4).default.component(),
                            securSelect: n(1).default.component(),
                            bankSelect: n(1).default.component(),
                            investModal: n(5).default.component(),
                            RejectedModal: n(6).default.component(),
                            numberInput: n(0).default.component(),
                            authModal: n(3).default.component(),
                            "vue-recaptcha": VueRecaptcha
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div class="mt60 xs-mt30 mb80 mypage-myaccount-layout">\n                \x3c!-- 사진영역--\x3e\n                <div class="dropify-wrapper-80 mypage-myaccount-photo">\n                    <dropify-input accept="image/*" v-model="request.memShotImgFile" default-message="" :default-img="userImage"></dropify-input>\n                </div>\n\n                \x3c!-- 컨텐츠 영역 --\x3e\n                <div class="mypage-form xs-mt30">\n\n                    <div class="mb20 mypage-title">투자 회원 {{registerTitle}}하기 (법인회원)</div>\n\n                    \x3c!-- 법인명 --\x3e\n                    <div class="mypage-rabel mb5">법인명</div>\n                    <input type="text" v-model.trim="request.memName" class="form-control mp-input1" maxlength="20" placeholder="" readonly="readonly" />\n                    \x3c!-- //법인명 --\x3e\n\n                    \x3c!-- 사업자등록번호 --\x3e\n                    <div class="mypage-rabel mb5">사업자등록번호</div>\n                    <input type="text" v-model="request.memIvsComNo" class="form-control mp-input1" maxlength="10" placeholder="" readonly="readonly" />\n                    \x3c!-- //사업자등록번호 --\x3e\n\n                    \x3c!-- 법인등록번호 --\x3e\n                    <div class="mypage-rabel mb5">법인등록번호</div>\n                    <number-input type="tel" class="form-control mp-input1" placeholder="" maxlength="13" :num="request.memIvsCorNo" v-model="request.memIvsCorNo" :disabled="investor == \'Y\'"/></number-input>\n                    \x3c!-- //법인등록번호 --\x3e\n\n                    \x3c!-- 대표자명 --\x3e\n                    <div class="mypage-rabel mb5">대표자명</div>\n                    <input type="text" v-model.trim="request.memIvsCeo" class="form-control mp-input1" maxlength="20" placeholder="" :disabled="investor == \'Y\'"/>\n                    \x3c!-- //대표자명 --\x3e\n\n                    \x3c!-- 종목 --\x3e\n                    <div class="mypage-rabel mb5">업종</div>\n                    <input type="text" v-model="request.memIvsStockType" class="form-control mp-input1" maxlength="20" placeholder="" />\n                    \x3c!-- //종목 --\x3e\n\n                    \x3c!-- 전화번호 --\x3e\n                    <div class="mypage-rabel mb5">전화번호</div>\n                    <number-input type="tel" class="form-control mp-input1" placeholder="" :num="request.memIvsTellNo" v-model="request.memIvsTellNo"/></number-input>\n                    \x3c!-- //전화번호 --\x3e\n\n                     \x3c!-- 이메일 --\x3e\n                    <div class="mypage-rabel mb5">이메일</div>\n                    <input type="email" v-model="request.memIvsResEmail" class="form-control mp-input1" maxlength="100" placeholder="" />\n                    \x3c!-- //이메일 --\x3e\n\n                    \x3c!-- 우편번호 --\x3e\n                    <div for="zip_code" class="mypage-rabel mb5">우편번호</div>\n                    <div class="common-flex-end">\n                        <input type="tel" class="form-control mp-input1 mypage-zip-layout1" v-on:click="postOpen" v-model="postNum" name="zip_code" id="zip_code" placeholder="" readonly="readonly"/>\n                        <div class="mypage-btn-search" v-on:click="postOpen"></div>\n                    </div>\n                    \x3c!-- //우편번호 --\x3e\n\n                    \x3c!-- 주소 --\x3e\n                    <div class="mypage-rabel mb5">주소</div>\n                    <input type="text" class="form-control mp-input1" v-on:click="postOpen" v-model="address1" name="address1" placeholder="주소를 검색해주세요." readonly="readonly" />\n                    <input type="text" class="form-control mp-input1" v-model="request.memIvsAddr2" placeholder="상세 주소를 입력해주세요." />\n                    \x3c!-- //주소 --\x3e\n\n                    \x3c!-- 기본정보 수정 --\x3e\n                    <div class="mypage-setting-btn mt20" v-on:click="updateBasicInfo()" v-if="investor == \'Y\'">설정 저장</div>\n                    \x3c!-- //기본정보 수정 --\x3e\n\n\n                    \x3c!-- 법인 담당자 정보 --\x3e\n                    <div class="mb20 mt50 mypage-title">법인 담당자 정보</div>\n                    \n                    \x3c!-- 본인인증 \n                    <div class="mypage-rabel mb5">본인인증</div>\n                    <div class="mypage-setting-btn" v-on:click="auth()" :class="{\'not-allowed-btn\' : investor==\'Y\' }">본인인증받기</div>\n                     --\x3e\n\n                    \x3c!-- 담당자명 --\x3e\n                    <div class="mypage-rabel mb5 mt10">담당자명</div>\n                    <input type="text" v-model.trim="certiInfo.memName" class="form-control mp-input1" maxlength="20" placeholder="" :disabled="status.memCiConfirm == \'Y\'"/>\n                    \x3c!-- //담당자명 --\x3e\n\n\n                    \x3c!-- 인증 을 안했을 경우,--\x3e\n                    <template v-if="status.memCiConfirm == \'N\'">\n\n                        <div class="option_group option_group_none mt20">\n                            <div class="option2_radio">\n                                <label for="option1_radio6" class="radio-inline mypage-radio-custom-1">\n                                    <input type="radio" name="option2_radio_1" id="option1_radio6" value="1" v-model="authType"/><span class="webfont">휴대폰본인인증</span>\n                                </label>\n                                <label for="option1_radio7" class="radio-inline mypage-radio-custom-1">\n                                    <input type="radio" name="option2_radio_1" id="option1_radio7" value="2" v-model="authType"/><span class="webfont">카드본인인증</span>\n                                </label>\n                            </div>\n                        </div>\n\n                        \x3c!-- 휴대폰 본인인증 화면 --\x3e\n                        <template v-if="authType == 1">\n\n                            \x3c!-- 주민등록번호 --\x3e\n                            <div for="member_jumin1" class="mypage-rabel mt10 mb5">주민등록번호</div>\n                            <div class="common-flex-between mypage_jumin">\n                                <number-input type="tel" class="form-control mp-input1" placeholder="" maxlength="6" :num="param.memBirth" v-model="param.memBirth" /></number-input>\n                                <div class="ivs-pro-dash"></div>\n                                <number-input type="tel" class="form-control mp-input1 textLeft" placeholder="" maxlength="1" :num="param.memSex" v-model="param.memSex" /></number-input>\n                                <div class="dot-postion">\n                                    <span class="ivs-dot"></span>\n                                    <span class="ivs-dot"></span>\n                                    <span class="ivs-dot"></span>\n                                    <span class="ivs-dot"></span>\n                                    <span class="ivs-dot"></span>\n                                    <span class="ivs-dot"></span>\n                                </div>\n                            </div>\n                            \x3c!-- //주민등록번호 --\x3e\n\n                            <label class="mypage-rabel">통신사</label>\n                            <select class="ivs-select-button ivs-select-arrow" v-model="selectCom">\n                                <option value="" disabled selected>통신사를 선택해주세요</option>\n                                <option v-for="item in mobileCom" :value="item.value">{{item.text}}</option>\n                            </select>\n\n                            \x3c!-- 휴대폰번호 --\x3e\n                            <div class="mypage-rabel mt10 mb5">휴대폰번호</div>\n                            <div class="displayFlex">\n                                <number-input type="tel" class="form-control mp-input1" placeholder="\'-\' 없이 핸드폰 번호를 입력해주세요." maxlength="11" :num="certiInfo.memTelNo" v-model="certiInfo.memTelNo" :disabled="status.memCiConfirm == \'Y\'"/></number-input>\n                                <a class="mp-requestbtn" v-on:click="sendPhoneAuth" v-if="status.memCiConfirm == \'N\'">{{requestWord}}</a>\n                            </div>\n                            \x3c!-- //휴대폰번호 --\x3e\n\n                            <template v-if="sendAuthNumber">\n                                <div class="mypage-rabel">인증번호 입력</div>\n                                <div class="displayFlex">\n                                    <number-input type="tel" class="form-control mp-input1 mb0" placeholder="" maxlength="8" :num="param1.memAuthNo" v-model="param1.memAuthNo" :disabled="timeOut"/></number-input>\n                                    <div class="mp-requestbtn">{{ time }}</div>\n                                </div>\n                                <span class="crowdy-color-blue font12">통신사의 사정에 따라 문자 수신이 다소 늦어질 수 있습니다.</span>\n                                <vue-recaptcha sitekey="6LdbvpkUAAAAABuHxlZkN_IJTEPYeG5CrRjq371_" @verify="onCaptchaVerified" class="mt15 xs-mt5 ivs-vue-cap"></vue-recaptcha>\n\n                                <label for="dataCheck" class="checkbox-inline-1 ivs-check-bottom" v-for="(item,index) in agree" :style="{\'margin-top\' : -13*index + \'px\'}" >\n                                    <input type="checkbox" name="dataCheck" v-model="item.check"/><span class="label scaleSmall"></span><span class="ivs-check-custom" > {{item.text}} &nbsp;</span>\n                                    <a href="javascript:void(0)" class="blue-800 ivs-check-custom" data-toggle="modal" data-target="#authModal" v-on:click="modalChange(index)">전문보기</a>\n                                </label>\n\n                                <auth-modal :agreeIdx="modalSelect" :selectCom="selectCom"></auth-modal>\n\n                                <div class="mypage-setting-btn" v-on:click="authCheck">인증 확인</div>\n                            </template>\n                            <br/>\n                        </template>\n\n                         \x3c!-- 카드 본인인증 화면 --\x3e\n                        <template v-if="authType == 2">\n                            <div style="margin-bottom:10px; background-color:#efefef; border:1px solid #000; text-align:center;">\n                                <h5>나이스 카드 본인 인증이 <br /> 잠시 중단되었습니다.<br />\n                                빠른 시일 내에 복구하도록 하겠습니다.</h5>\n                            </div>\n                            \x3c!--\n                            < !-- 휴대폰 번호 -- >\n                            <div for="member_mobile" class="mypage-rabel mb5 mt20">전화번호</div>\n                            <div class="displayFlex">\n                                <number-input type="tel" class="form-control mp-input1" placeholder="\'-\' 없이 핸드폰 번호를 입력해주세요." maxlength="11" :num="mobileRequest.mobileNo" v-model="mobileRequest.mobileNo" :disabled="authMobileConfirm"/></number-input>\n                                <a class="mp-requestbtn" v-on:click="mobileCardAuth" >{{requestWord}}</a>\n                            </div>\n                            < !-- //휴대폰 번호 -- >\n\n                            <template v-if="sendAuthNumber && !authMobileConfirm">\n                                <div class="mypage-rabel">인증번호 입력</div>\n                                <div class="displayFlex">\n                                    <number-input type="tel" class="form-control mp-input1 mb0" placeholder="" maxlength="8" :num="mobileRequest.authNo" v-model="mobileRequest.authNo" :disabled="timeOut"/></number-input>\n                                    <div class="mp-requestbtn">{{ time }}</div>\n                                </div>\n                                <span class="crowdy-color-blue font12">통신사의 사정에 따라 문자 수신이 다소 늦어질 수 있습니다.</span>    \n                                <div class="mypage-setting-btn mt30 mb30" v-on:click="mobileCardResult">인증 확인</div>\n                            </template>\n\n                            <div class="mypage-setting-btn mt20" v-on:click="authCard" v-if="authMobileConfirm">카드 확인</div>\n                            <br/>\n                            --\x3e\n                        </template>\n\n                    </template>\n\n\n                    \x3c!-- 인증을 했을 경우 --\x3e\n                    <template v-if="status.memCiConfirm == \'Y\'">\n                        <div for="member_mobile" class="mypage-rabel mb5 mt10">전화번호</div>\n                        <number-input type="tel" class="form-control mp-input1" placeholder="\'-\' 없이 핸드폰 번호를 입력해주세요." maxlength="11" :num="certiInfo.memTelNo" v-model="certiInfo.memTelNo" disabled/></number-input>\n                    </template>\n\n\n                    \x3c!-- //법인 담당자 정보 --\x3e\n\n                    \x3c!-- 회원유형 --\x3e\n                    <div class="mypage-title mt50">회원유형</div>\n                    \n                    <div class="mypage-rabel mb5 mt20">회원유형 선택</div>\n                    <div class="option_group option_group_none">\n                        <div class="option1_radio">\n                            <label for="option1_radio1" class="radio-inline mypage-radio-custom">\n                                <input type="radio" name="option1_radio" id="option1_radio1" value="MIT001" v-model="request.memIvsType" :disabled="micType1Disabled"/><span class="webfont">일반투자자</span>\n                            </label>\n                            <label for="option1_radio2" class="radio-inline mypage-radio-custom">\n                                <input type="radio" name="option1_radio" id="option1_radio2" value="MIT002" v-model="request.memIvsType" v-on:click="changeMemIvsType(1)" :disabled="micType2Disabled"/><span class="webfont">적격투자자</span>\n                            </label>\n                            <label for="option1_radio3" class="radio-inline mypage-radio-custom">\n                                <input type="radio" name="option1_radio" id="option1_radio3" value="MIT003" v-model="request.memIvsType" v-on:click="changeMemIvsType(2)" :disabled="micType3Disabled"/><span class="webfont">전문투자자</span>\n                            </label>\n                        </div>\n                    </div>\n\n                    \x3c!-- 일반투자자 --\x3e\n                    <div id="option1_contents_radio1" class="otab1_contents" v-if="request.memIvsType == \'MIT001\'"></div>\n                    \x3c!-- //일반투자자 --\x3e\n\n                    \x3c!-- 소득요건 등 적격투자자 or 전문투자자--\x3e\n                    <div id="option1_contents_radio2" v-if="request.memIvsType == \'MIT002\' || request.memIvsType == \'MIT003\'">\n                        <div class="mypage-rabel mt10">증빙서류</div>\n\n                        <div class="vod-holder input-append" v-for="(item, index) in request.memIvsFiles" v-if="request.memIvsFiles[index].state == true">\n                            <div class="mypage-file-layout input-group input-group-file">\n                                <input type="text" class="form-control mb5 mypage-doc-width" :class="{\'error\' : errors.has(\'memIvsFiles[files]\')}" v-model="request.memIvsFiles[index].fileName" placeholder="파일을 업로드해주시기 바랍니다." readonly="readonly" />\n                                <span class="input-group-btn common-default-flex"">\n                                    <span class="btn btn-outline btn-file mr5">\n                                        <i class="fa fa-upload" aria-hidden="true"></i>\n                                        <input type="file" name="" multiple="" />\n                                        <file-input v-model="request.memIvsFiles[index]" data-vv-name="memIvsFiles" v-validate="\'required\'" :disabled="memIvsFilesDisabled" v-on:error="error"></file-input>\n                                    </span>\n                                    <span class="files-add vod-add mr5" v-on:click="fileAdd" v-if="((index + 1 == request.memIvsFiles.length  || index == viewAddButtonCount) && userTypeDocCount != 5) && !memIvsFilesDisabled">+</span>\n                                    <span class="files-add img-delete vod-delete" v-on:click="fileDelete(index)" v-if="userTypeDocCount != 1 && !memIvsFilesDisabled && !(index + 1 == request.memIvsFiles.length)">-</span>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    \x3c!-- //소득요건 등 적격투자자 or 전문투자자 --\x3e\n\n                    \x3c!-- 회원유형 : 투자 설명 --\x3e\n                    <div class="mt20">  \n                        <div class="mypage-setting-desc mb15 red-800" v-if="request.memIvsState == \'MIC003\'">\n                            인증이 반려 되었습니다. 반려사유를 살펴보고 다시 제출해주세요. <br/>\n                            <a href="javascript:void(0)" class="btn-link grey-600 pl0 pr0 ml10" v-on:click="showRejectedModal(2)">반려사유 보기 <i class="fa fa-angle-right ml5" aria-hidden="true"></i></a>\n                        </div>\n                        <div class="mypage-setting-desc">\n                            투자자 유형에 따라 투자한도가 달라질 수 있습니다. 투자자 유형을 변경하려면, 소득요건 등 적격투자자 또는 전문투자자의 경우에 따라 자격요건에 따른 서류를 제출하신 후 인증을 받으셔야 합니다.<br />\n                            <a href="javascript:void(0)" class="blue-800" data-toggle="modal" data-target="#investModal">투자자별 자격 요건 안내 <i class="fa fa-angle-right ml5" aria-hidden="true"></i></a>\n                        </div>\n                        <div class="mypage-setting-desc mt20">\n                            등록을 완료하시면 <a href="/crowdy/term?menu=3" class="blue-800">서비스 이용약관</a> 및 <a href="/crowdy/term?menu=4" class="blue-800">개인정보취급방침</a>에 동의하시는 것으로 간주합니다.\n                        </div>\n                    </div>\n\n                    \x3c!-- 회원유형 수정 --\x3e\n                    <div class="mypage-setting-btn mt20" v-on:click="updateIvsType()" v-if="(investor == \'Y\' && request.memIvsState == \'MIC003\') || (memIvsOriginalType == \'MIT002\' && request.memIvsType == \'MIT003\') || memIvsOriginalType == \'MIT001\'">설정 저장</div>\n                    \x3c!-- //회원유형 수정 --\x3e\n\n                    \x3c!-- 실명확인용 서류 --\x3e\n                    <div class="mb20 mt50 mypage-title">실명확인용 서류</div>\n\n                    \x3c!-- 사업자등록증 --\x3e\n                    <div class="mypage-rabel mb5">사업자등록증*</div>\n                    <div class="input-group input-group-file common-default-flex">\n                        <input type="text" class="form-control mypage-search-width" v-model="request.memIvsCorFile.fileName" placeholder="" readonly="readonly" />\n                        <span class="input-group-btn egnolerValue">\n                            <span class="btn btn-outline btn-file">\n                                <i class="fa fa-upload" aria-hidden="true"></i>\n                                <file-input v-model="request.memIvsCorFile" data-vv-name="memIvsCorFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                            </span>\n                        </span>\n                    </div>\n                    \x3c!-- //사업자등록증 --\x3e\n                        \n                    \x3c!-- 법인등기부등본 --\x3e\n                    <div class="mypage-rabel mb5">법인등기부등본*</div>\n                    <div class="input-group input-group-file common-default-flex">\n                        <input type="text" class="form-control mypage-search-width" v-model="request.memIvsRnmCorFile.fileName" placeholder="" readonly="readonly" />\n                        <span class="input-group-btn egnolerValue">\n                            <span class="btn btn-outline btn-file">\n                                <i class="fa fa-upload" aria-hidden="true"></i>\n                                <file-input v-model="request.memIvsRnmCorFile" data-vv-name="memIvsRnmCorFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                            </span>\n                        </span>\n                    </div>\n                    \x3c!-- //법인등기부등본 --\x3e\n\n                    \x3c!-- 법인인감증명서 --\x3e\n                    <div class="mypage-rabel mb5">법인인감증명서*</div>\n                    <div class="input-group input-group-file common-default-flex">\n                        <input type="text" class="form-control mypage-search-width" v-model="request.memIvsCorSealFile.fileName" placeholder="" readonly="readonly" />\n                        <span class="input-group-btn egnolerValue">\n                            <span class="btn btn-outline btn-file">\n                                <i class="fa fa-upload" aria-hidden="true"></i>\n                                <file-input v-model="request.memIvsCorSealFile" data-vv-name="memIvsCorSealFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                            </span>\n                        </span>\n                    </div>\n                    \x3c!-- //법인인감증명서 --\x3e\n\n                    \x3c!-- 실명확인증표 --\x3e\n                    <div class="mypage-rabel mb5">실명확인증표*</div>\n                    <div class="input-group input-group-file common-default-flex">\n                        <input type="text" class="form-control mypage-search-width" v-model="request.memIvsRnmFile.fileName" placeholder="대표자 혹은 대리인의 신분증" readonly="readonly" />\n                        <span class="input-group-btn egnolerValue">\n                            <span class="btn btn-outline btn-file">\n                                <i class="fa fa-upload" aria-hidden="true"></i>\n                                <file-input v-model="request.memIvsRnmFile" data-vv-name="memIvsRnmFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                            </span>\n                        </span>\n                    </div>\n                    \x3c!-- //실명확인증표 --\x3e\n\n                    \x3c!-- 실명확인증표(위임장) --\x3e\n                    <div class="input-group input-group-file common-default-flex">\n                        <input type="text" class="form-control mypage-search-width" v-model="request.memIvsRnmAttorneyFile.fileName" placeholder="대리인 신분증 첨부시 위임장 첨부" readonly="readonly" />\n                        <span class="input-group-btn egnolerValue">\n                            <span class="btn btn-outline btn-file">\n                                <i class="fa fa-upload" aria-hidden="true"></i>\n                                <file-input v-model="request.memIvsRnmAttorneyFile" data-vv-name="memIvsRnmAttorneyFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                            </span>\n                        </span>\n                    </div>\n                    <a href="https://image-se.ycrowdy.com/file/%E1%84%8F%E1%85%B3%E1%84%85%E1%85%A1%E1%84%8B%E1%85%AE%E1%84%83%E1%85%B5%E1%84%8B%E1%85%B1%E1%84%8B%E1%85%B5%E1%86%B7%E1%84%8C%E1%85%A1%E1%86%BC%E1%84%8B%E1%85%A3%E1%86%BC%E1%84%89%E1%85%B5%E1%86%A8.hwp" class="btn-link grey-600 mypage-setting-link-custom">(위임장 샘플)</a>\n                    \x3c!-- //실명확인증표(위임장) --\x3e\n\n                    \x3c!--/// 법인계좌 --\x3e\n                    <div class="mypage-rabel mb5">법인계좌*</div>\n                    <div class="input-group input-group-file common-default-flex">\n                        <input type="text" class="form-control mypage-search-width" v-model="request.memIvsBankFile.fileName" placeholder="" readonly="readonly" />\n                        <span class="input-group-btn egnolerValue">\n                            <span class="btn btn-outline btn-file">\n                                <i class="fa fa-upload" aria-hidden="true"></i>\n                                <file-input v-model="request.memIvsBankFile" data-vv-name="memIvsBankFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                            </span>\n                        </span>\n                    </div>\n                    \x3c!-- //법인계좌 --\x3e\n\n                    \x3c!-- 사용인감계(선택) --\x3e\n                    <div class="mypage-rabel mb5">사용인감계 <span class="red-800">(선택사항)</span></div>\n                    <div class="input-group input-group-file common-default-flex">\n                        <input type="text" class="form-control mypage-search-width" v-model="request.memIvsCorAttorneyFile.fileName" placeholder="" readonly="readonly" />\n                        <span class="input-group-btn egnolerValue">\n                            <span class="btn btn-outline btn-file">\n                                <i class="fa fa-upload" aria-hidden="true"></i>\n                                <file-input v-model="request.memIvsCorAttorneyFile" data-vv-name="memIvsCorAttorneyFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                            </span>\n                        </span>\n                    </div>\n                    <a href="https://image-se.ycrowdy.com/file/%E1%84%8F%E1%85%B3%E1%84%85%E1%85%A1%E1%84%8B%E1%85%AE%E1%84%83%E1%85%B5%E1%84%89%E1%85%A1%E1%84%8B%E1%85%AD%E1%86%BC%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%80%E1%85%A1%E1%86%B7%E1%84%80%E1%85%A8(%E1%84%87%E1%85%A5%E1%86%B8%E1%84%8B%E1%85%B5%E1%86%AB)_180102.hwp" class="btn-link grey-600 mypage-setting-link-custom">(사용인감계 샘플)</a>\n                    \x3c!-- //사용인감계(선택) --\x3e\n\n                    <div class="mypage-setting-desc mb15 red-800" v-if="request.memIvsRnmDocStatus == \'MIRT04\'">\n                        인증이 반려 되었습니다. 반려사유를 살펴보고 다시 제출해주세요. <br/>\n                        <a href="javascript:void(0)" class="btn-link grey-600 pl0 pr0 ml10" v-on:click="showRejectedModal(1)">반려사유 보기 <i class="fa fa-angle-right ml5" aria-hidden="true"></i></a>\n                    </div>\n                    \x3c!-- //실명확인용 서류 --\x3e    \n\n                    \x3c!-- 실명확인용 서류 수정 --\x3e\n                    <div class="mypage-setting-btn mt20" v-on:click="updateRealNameDoc()" v-if="investor == \'Y\' && request.memIvsRnmDocStatus == \'MIRT04\'">설정 저장</div>\n                    \x3c!-- //실명확인용 서류 수정 --\x3e\n\n\n                    \x3c!-- 연고자여부 --\x3e\n                    <div class="mypage-rabel mb5">연고자여부</div>\n                    <div class="option_group option_group_none">\n                        <div class="option1_radio">\n                            <label for="option1_radio4" class="radio-inline mypage-radio-custom-1">\n                                <input type="radio" name="option1_radio_1" id="option1_radio4" value="2" v-model="request.relConfirm" v-on:click="changeRelStatus" :disabled="relDisabled"/><span class="webfont">연고자 아닙니다</span>\n                            </label>\n                            <label for="option1_radio5" class="radio-inline mypage-radio-custom-1">\n                                <input type="radio" name="option1_radio_1" id="option1_radio5" value="1" v-model="request.relConfirm" v-on:click="changeRelStatus" :disabled="relDisabled"/><span class="webfont">연고자 맞습니다</span>\n                            </label>\n                        </div>\n                    </div>\n                    <div class="mypage-setting-desc mt10">\n                        연고자는 투자하고자하는 기업의 기존 관계자, 주주에 해당 할 때만 선택하실 수 있습니다. 특정 기업의 연고자가 되면, \n                        해당 기업에 한해 무제한으로 투자가 가능합니다. 해당 기업의 주주 명부 혹은 재직증명서를 제출하신 후 인증을 받으셔야 합니다.\n                    </div>\n\n                    <template v-if="request.relConfirm == 1">\n                        \x3c!-- 연고자 증빙서류 --\x3e\n                        <div class="mypage-rabel mb5 mt20">증빙서류</div>\n                        <div class="input-group input-group-file common-flex-center">\n                            <input type="text" class="form-control mypage-search-width" :class="{\'error\' : errors.has(\'memIvsRelFile\')}" v-model="request.memIvsRelFile.fileName" placeholder="파일을 업로드해주시기 바랍니다." readonly="readonly"/>\n                            <span class="input-group-btn" style="top: -12px;">\n                                <span class="btn btn-outline btn-file">\n                                    <i class="fa fa-upload" aria-hidden="true"></i>\n                                    <file-input v-model="request.memIvsRelFile" data-vv-name="memIvsRelFile" v-validate="\'required\'" :disabled="relDisabled" v-on:error="error"></file-input>\n                                </span>\n                            </span>\n                            \x3c!--<label class="error" v-if="errors.has(\'memIvsRelFile\')" v-text="errors.first(\'memIvsRelFile\')"></label>--\x3e\n                        </div>\n\n                        \x3c!-- 사업자등록번호 --\x3e\n                        <div class="mypage-rabel mt10 mb5">사업자등록번호</div>\n                        <number-input type="tel" class="form-control" :num="request.memIvsRelComNo" v-model="request.memIvsRelComNo" maxlength="10" placeholder="" :disabled="relDisabled"/></number-input>\n                        \x3c!-- //사업자등록번호 --\x3e\n\n                        <div class="mypage-setting-desc mb15 red-800" v-if="request.memIvsRelStatus == \'MIR004\'">\n                            인증이 반려 되었습니다. 반려사유를 살펴보고 다시 제출해주세요. <br/>\n                            <a href="javascript:void(0)" class="btn-link grey-600 pl0 pr0 ml10" v-on:click="showRejectedModal(3)">반려사유 보기 <i class="fa fa-angle-right ml5" aria-hidden="true"></i></a>\n                        </div>\n                        \x3c!-- //연고자 증빙서류 --\x3e\n                    </template>\n\n                    \x3c!-- 연고자 수정 --\x3e\n                    <div class="mypage-setting-btn mt20" v-on:click="updateRel()" v-if="(investor == \'Y\' && (request.memIvsRelStatus == \'MIR001\' || request.memIvsRelStatus == \'MIR004\')) || relRegistered == false">설정 저장</div>\n                    \x3c!-- // 연고자 수정 --\x3e\n\n\n                    \x3c!-- 투자 회원 이용약관 동의 --\x3e\n                    <div v-if="investor == \'N\'" class="mt20">\n                        <label class="chk_container mypage-setting-desc">투자회원 <a class="blue-800" href="/crowdy/term?menu=3" target="_blank"><strong>이용약관</strong></a>에 동의합니다.\n                            <input type="checkbox" v-model="checkTerms1">\n                            <span class="checkmark"></span>\n                        </label>\n                    </div>\n\n                    <div v-if="investor == \'N\'" class="mt10">\n                        <label class="chk_container mypage-setting-desc">투자회원 <a class="blue-800" href="/crowdy/term?menu=5" target="_blank"><strong>개인정보 취급방침</strong></a>에 동의합니다.\n                            <input type="checkbox" v-model="checkTerms2">\n                            <span class="checkmark"></span>\n                        </label>\n                    </div>\n                    \x3c!-- 투자 회원 이용약관 동의 --\x3e\n\n                    <div class="mt20 common-default-flex" v-if="investor == \'N\'">\n                        <button type="button" class="mypage-setting-btn mypage-setting-btn-cancle">취소</button>\n                        <button type="button" class="mypage-setting-btn" v-on:click="applyData()">등록</button>\n                    </div>\n\n                    <invest-modal :mode="2"></invest-modal>\n                    <rejected-modal :rejectedReason="rejectedContent"></rejected-modal>\n\n                    <form name="form_chk" method="post">\n                        <input type="hidden" name="m" value="checkplusSerivce">                     \x3c!-- 필수 데이타로, 누락하시면 안됩니다. --\x3e\n                        <input type="hidden" name="EncodeData" id="encodeData" value="">            \x3c!-- 위에서 업체정보를 암호화 한 데이타입니다. --\x3e\n\n                        <input type="hidden" name="param_r1" value="accountSetting.authResult">\n                        <input type="hidden" name="param_r2" :value="mobileRequest.mobileNo">\n                        <input type="hidden" name="param_r3" :value="request.memCode">\n                    </form>\n                </div>\n            </div>\n            ',
                        props: ["status", "certiInfo"],
                        data: function() {
                            return {
                                dataConfirm: !1,
                                mobileCom: [{
                                    text: "SKT",
                                    value: "1"
                                }, {
                                    text: "KT",
                                    value: "2"
                                }, {
                                    text: "LG U+",
                                    value: "3"
                                }, {
                                    text: "알뜰폰SKT",
                                    value: "5"
                                }, {
                                    text: "알뜰폰KT",
                                    value: "6"
                                }, {
                                    text: "알뜰폰LG",
                                    value: "7"
                                }],
                                selectCom: "",
                                agree: [],
                                request: {
                                    memCode: userInfo.memCode,
                                    memType: userInfo.type,
                                    memName: userInfo.name,
                                    memEmail: userInfo.email,
                                    memIvsAddr1: "",
                                    memIvsAddr2: "",
                                    memIvsPostNum: "",
                                    resName: "",
                                    memShotImg: userInfo.image,
                                    authChange: !1,
                                    memIvsComNo: "",
                                    memIvsCompanyName: userInfo.name,
                                    memIvsCorNo: "",
                                    memIvsCeo: "",
                                    memIvsStockType: "",
                                    memIvsTellNo: "",
                                    memIvsResName: "",
                                    memIvsResEmail: "",
                                    memIvsDoc: "",
                                    memIvsFiles: [{
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    }],
                                    memIvsCorDoc: "",
                                    memIvsCorFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsRnmCorDoc: "",
                                    memIvsRnmCorFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsCorSeal: "",
                                    memIvsCorSealFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsRnmDoc: "",
                                    memIvsRnmDocStatus: "",
                                    memIvsRnmFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    relConfirm: "2",
                                    memIvsRelDoc: "",
                                    memIvsRelFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsRnmAttorney: "",
                                    memIvsRnmAttorneyFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsBankImg: "",
                                    memIvsBankFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsCorAttorney: "",
                                    memIvsCorAttorneyFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsRelComNo: "",
                                    memIvsRelStatus: "MIR001",
                                    memIvsRegiName: "",
                                    memIvsRegiHpNo: "",
                                    memIvsType: "MIT001",
                                    memIvsSecurCode: "1",
                                    memIvsSecurNo: "",
                                    memIvsBankCode: "001",
                                    memIvsBankNo: "",
                                    memIvsState: "",
                                    memIvsReturn: "",
                                    memIvsRnmReturn: "",
                                    memIvsRelReturn: "",
                                    memIvsSex: "",
                                    memIvsBirth: "",
                                    memIvsInChar: ""
                                },
                                address: {
                                    postNum: "",
                                    address1: ""
                                },
                                securCodeOptions: [],
                                bankCodeOptions: [],
                                confirm: {
                                    bank: !1,
                                    community: !1,
                                    fund: !1,
                                    secur: !1
                                },
                                relDisabled: !1,
                                relRegistered: !0,
                                authType: 1,
                                investor: this.status.investor,
                                userTypeDocCount: 0,
                                viewAddButtonCount: -1,
                                rejectedContent: "",
                                micType1Disabled: !1,
                                micType2Disabled: !1,
                                micType3Disabled: !1,
                                memIvsFilesDisabled: !1,
                                memIvsRnmDocDisabled: !1,
                                memIvsOriginalType: "",
                                memIvsOriginalFiles: [],
                                userTypeDocOriginalCount: 0,
                                viewAddButtonOriginalCount: -1,
                                checkAuthTried: !1,
                                checkTerms1: !1,
                                checkTerms2: !1,
                                os: "",
                                param: {
                                    memCode: userInfo.memCode,
                                    memName: "",
                                    memTelNo: "",
                                    memSex: "",
                                    memBirth: "",
                                    memTelCompany: "",
                                    memNameType: "1"
                                },
                                param1: {
                                    memCode: userInfo.memCode,
                                    memTelNo: "",
                                    memAuthNo: "",
                                    recaptchaToken: ""
                                },
                                mobileRequest: {
                                    mobileNo: "",
                                    reqSeq: "",
                                    authNo: ""
                                },
                                sendAuthNumber: !1,
                                time: "5:00",
                                timerStart: !1,
                                timeOut: !1,
                                isCntdownRestart: !1,
                                timer: {},
                                requestWord: "인증요청",
                                modalSelect: 0,
                                authMobileConfirm: !1
                            }
                        },
                        created: function() {
                            this.getBankCodeList(), this.getStockCodeList(), this.loadInvestState(), this.loadBizNum(), window.accountSetting = this, 0 == this.request.memIvsFiles.length && this.request.memIvsFiles.push(""), this.deviceCheck()
                        },
                        mounted: function() {
                            $(".switch-hb").bootstrapSwitch()
                        },
                        watch: {
                            selectCom: function() {
                                "1" == this.selectCom || "5" == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : "2" == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : "3" == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : "6" == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }, {
                                    text: "[KT 알뜰폰] 개인정보 제3자 제공 동의",
                                    check: !1
                                }] : "7" == this.selectCom && (this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+ 알뜰폰] 개인정보 제3자 제공 동의 ",
                                    check: !1
                                }])
                            },
                            authType: function() {
                                this.menuReset()
                            }
                        },
                        computed: {
                            registerTitle: function() {
                                return "Y" == this.investor ? "수정" : "등록"
                            },
                            postNum: function() {
                                return this.request.memIvsPostNum = this.address.postNum, this.address.postNum
                            },
                            address1: function() {
                                return this.request.memIvsAddr1 = this.address.address1, this.address.address1
                            },
                            userName: function() {
                                return userInfo.name
                            },
                            userEmail: function() {
                                return userInfo.email
                            },
                            userImage: function() {
                                return userInfo.image
                            },
                            ivsFileExist: function() {
                                for (var e = 0; e < this.request.memIvsFiles.length; e++)
                                    if (1 == this.request.memIvsFiles[e].state && "" != this.request.memIvsFiles[e].fileName) return !0;
                                return !1
                            }
                        },
                        methods: {
                            loadInvestState: function() {
                                this.request.memIvsState = this.status.memIvsState, "Y" == this.investor ? this.load() : (this.userTypeDocCount++, this.viewAddButtonCount++, this.$nextTick(function() {
                                    $(".option_group .radio-inline input, .option_group .checkbox-inline input").checkboxradio(), $(".option1_radio, .option2_radio, .option1_checkbox").controlgroup()
                                }))
                            },
                            loadBizNum: function() {
                                var e = this;
                                axios.post("/data/member/info", this.request).then(function(t) {
                                    e.request.memIvsComNo = t.data.rData.bizNum
                                })
                            },
                            load: function() {
                                var e = this;
                                axios.post("/data/member/investor/info", this.request).then(function(t) {
                                    if (e.request.memIvsAddr1 = t.data.rData.memIvsAddr1, e.request.memIvsAddr2 = t.data.rData.memIvsAddr2, e.request.memIvsPostNum = t.data.rData.memIvsPostNum, e.address.postNum = t.data.rData.memIvsPostNum, e.address.address1 = t.data.rData.memIvsAddr1, e.request.memIvsComNo = t.data.rData.memIvsComNo, e.request.memIvsCorNo = t.data.rData.memIvsCorNo, e.request.memIvsCeo = t.data.rData.memIvsCeo, e.request.memIvsStockType = t.data.rData.memIvsStockType, e.request.memIvsTellNo = t.data.rData.memIvsTellNo, e.request.memIvsSecurNo = t.data.rData.memIvsSecurNo, t.data.rData.memIvsSecurCode.length > 0 && (e.request.memIvsSecurCode = t.data.rData.memIvsSecurCode), e.request.memIvsResName = t.data.rData.memIvsResName, e.request.memIvsResEmail = t.data.rData.memIvsResEmail, e.request.memIvsRegiHpNo = t.data.rData.memIvsRegiHpNo, e.request.memIvsType = t.data.rData.memIvsType, e.request.memIvsState = t.data.rData.memIvsState, e.request.memIvsFiles = t.data.rData.memIvsFiles, e.request.memIvsCorFile.fileName = t.data.rData.memIvsCorDocName, e.request.memIvsRnmCorFile.fileName = t.data.rData.memIvsRnmCorDocName, e.request.memIvsCorSealFile.fileName = t.data.rData.memIvsCorSealName, e.request.memIvsRnmFile.fileName = t.data.rData.memIvsRnmDocName, e.request.memIvsRnmAttorneyFile.fileName = t.data.rData.memIvsRnmAttorneyName, e.request.memIvsBankFile.fileName = t.data.rData.memIvsBankImgName, e.request.memIvsCorAttorneyFile.fileName = t.data.rData.memIvsCorAttorneyName, e.request.memIvsRelStatus = t.data.rData.memIvsRelStatus, e.request.memIvsRelComNo = t.data.rData.memIvsRelComNo, e.request.memIvsRelFile.fileName = t.data.rData.memIvsRelDocName, e.request.memIvsReturn = t.data.rData.memIvsReturn, e.request.memIvsRnmReturn = t.data.rData.memIvsRnmReturn, e.request.memIvsRelReturn = t.data.rData.memIvsRelReturn, e.request.memIvsRnmDocStatus = t.data.rData.memIvsRnmDocStatus, e.memIvsOriginalType = t.data.rData.memIvsType, "MIT002" == e.request.memIvsType && "MIC003" != e.request.memIvsState)
                                        if (e.micType1Disabled = !0, "MIC002" == e.request.memIvsState) {
                                            e.micType3Disabled = !1;
                                            for (var n = 0; n < e.request.memIvsFiles.length; n++) e.memIvsOriginalFiles.push(e.request.memIvsFiles[n])
                                        } else e.micType3Disabled = !0;
                                    else "MIT003" == e.request.memIvsType && "MIC003" != e.request.memIvsState && (e.micType1Disabled = !0, e.micType2Disabled = !0);
                                    "MIC003" == e.request.memIvsState ? e.request.memIvsFiles = [{
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    }] : "MIT001" != e.request.memIvsType && (e.memIvsFilesDisabled = !0), "MIRT01" == e.request.memIvsRnmDocStatus || "MIRT04" == e.request.memIvsRnmDocStatus ? (e.request.memIvsCorFile.fileName = "", e.request.memIvsRnmCorFile.fileName = "", e.request.memIvsCorSealFile.fileName = "", e.request.memIvsRnmFile.fileName = "", e.request.memIvsRnmAttorneyFile.fileName = "", e.request.memIvsBankFile.fileName = "", e.request.memIvsCorAttorneyFile.fileName = "", e.memIvsRnmDocDisabled = !1) : e.memIvsRnmDocDisabled = !0, "MIR001" != e.request.memIvsRelStatus ? (e.request.relConfirm = "1", "MIR002" == e.request.memIvsRelStatus || "MIR003" == e.request.memIvsRelStatus ? (e.relDisabled = !0, e.relRegistered = !0) : (e.relRegistered = !1, e.relDisabled = !1, e.request.memIvsRelFile.fileName = "")) : (e.relRegistered = !1, e.relDisabled = !1);
                                    for (var n = 0; n < e.request.memIvsFiles.length; n++) e.request.memIvsFiles[n].state && (e.userTypeDocCount++, e.viewAddButtonCount++);
                                    if (0 == e.request.memIvsFiles.length) {
                                        var a = {
                                            fileData: "",
                                            fileName: "",
                                            state: !0
                                        };
                                        e.userTypeDocCount < 5 && (e.userTypeDocCount++, e.viewAddButtonCount++, e.request.memIvsFiles.push(a))
                                    }
                                    e.userTypeDocOriginalCount = e.userTypeDocCount, e.viewAddButtonOriginalCount = e.viewAddButtonCount, e.$nextTick(function() {
                                        $(".option_group .radio-inline input, .option_group .checkbox-inline input").checkboxradio(), $(".option1_radio, .option2_radio, .option1_checkbox").controlgroup()
                                    })
                                })
                            },
                            subMenuChange: function(e) {
                                this.type = e
                            },
                            postOpen: function() {
                                post.open(this)
                            },
                            deviceCheck: function() {
                                isMobile.apple.device ? this.os = "M" : isMobile.android.device ? this.os = "M" : this.os = "W"
                            },
                            menuReset: function() {
                                this.mobileRequest.authNo = "", this.mobileRequest.mobileNo = "", this.requestWord = "인증요청", this.sendAuthNumber = !1, this.timeOut = !1, this.timerStart = !1, this.time = "5:00", clearTimeout(this.timer)
                            },
                            mobileCardAuth: function() {
                                var e = this;
                                if (!this.authMobileConfirm) {
                                    if ("" == this.mobileRequest.mobileNo) return void noti.open("휴대폰 번호를 입력해 주세요.");
                                    clearTimeout(e.timer), axios.post("/auth/mobile", this.mobileRequest).then(function(t) {
                                        noti.open("인증번호를 요청하였습니다."), e.mobileRequest.reqSeq = t.data, e.requestWord = "재요청", e.sendAuthNumber = !0, e.timeOut = !1, e.timerStart = !0, e.countdown(e.countdownTimeOut)
                                    })
                                }
                            },
                            mobileCardResult: function() {
                                var e = this;
                                if ("" == this.mobileRequest.authNo) return void noti.open("인증번호를 입력해 주세요.");
                                axios.post("/auth/mobile/result", this.mobileRequest).then(function(t) {
                                    if (clearTimeout(e.timer), e.timerStart = !1, !t.data) return void noti.open("인증번호가 유효하지 않습니다.");
                                    e.requestWord = "인증완료", e.authMobileConfirm = !0
                                })
                            },
                            authCard: function() {
                                axios.post("/auth/nice/C").then(function(e) {
                                    document.getElementById("encodeData").value = e.data.rData.data, window.open("", "popupChk", "width=500, height=800, top=100, left=100, fullscreen=no, menubar=no, status=no, toolbar=no, titlebar=yes, location=no, scrollbar=no"), document.form_chk.action = "https://nice.checkplus.co.kr/CheckPlusSafeModel/checkplus.cb", document.form_chk.target = "popupChk", document.form_chk.submit()
                                })
                            },
                            authResult: function(e) {
                                e ? (this.$emit("set-ci-confirm-flag", !0), noti.open("본인인증이 완료되었습니다. <br/> 남은 사항들을 입력해주세요.")) : noti.open("본인인증에 실패했습니다 <br/> 다시시도해주세요.")
                            },
                            changeRelStatus: function() {
                                2 == this.request.relConfirm ? (this.request.memIvsRelStatus = "MIR001", this.request.memIvsRelFile = {
                                    fileData: "",
                                    fileName: "",
                                    state: !0
                                }, this.request.memIvsRelComNo = "", this.request.memIvsRelDocName = "", this.request.relConfirm = "2") : (this.request.memIvsRelStatus = "MIR002", this.request.relConfirm = "1")
                            },
                            error: function(e) {
                                noti.open("업로드되는 파일 사이즈는 10MB보다 작아야합니다.")
                            },
                            fileAdd: function() {
                                var e = {
                                    fileData: "",
                                    fileName: "",
                                    state: !0
                                };
                                this.userTypeDocCount < 5 && (this.userTypeDocCount++, this.viewAddButtonCount++, this.request.memIvsFiles.push(e))
                            },
                            fileDelete: function(e) {
                                this.request.memIvsFiles[e].state = !1, this.userTypeDocCount > 1 && this.userTypeDocCount--;
                                for (var t = 0; t < this.request.memIvsFiles.length; t++) 1 == this.request.memIvsFiles[t].state && (this.viewAddButtonCount = t)
                            },
                            getStockCodeList: function() {
                                var e = this;
                                axios.post("/data/crowdy/code/invest", {
                                    gcode: "MEM_IVS_SECUR_CODE"
                                }).then(function(t) {
                                    var n = t.data;
                                    if ("0000" == n.rCode) {
                                        for (var a = 0; a < n.rData.length; a++) {
                                            var i = {
                                                id: n.rData[a].commonCode,
                                                text: n.rData[a].commonInfo
                                            };
                                            e.securCodeOptions.push(i)
                                        }
                                        e.confirm.secur = !0
                                    } else noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            getBankCodeList: function() {
                                var e = this;
                                axios.post("/data/crowdy/code/invest", {
                                    gcode: "IRMI_STOCK_BANK"
                                }).then(function(t) {
                                    var n = t.data;
                                    if ("0000" == n.rCode) {
                                        for (var a = 0; a < n.rData.length; a++) {
                                            var i = {
                                                id: n.rData[a].commonCode,
                                                text: n.rData[a].commonInfo
                                            };
                                            e.bankCodeOptions.push(i)
                                        }
                                        e.confirm.bank = !0
                                    } else noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            applyData: function() {
                                if ("" == this.certiInfo.memTelNo) return void noti.open("휴대폰 번호를 입력해주세요.");
                                if ("N" == this.status.memCiConfirm) return void noti.open("휴대폰 인증이나 신용카드 인증을 완료해주십시오.");
                                if (0 == this.checkTerms1 || 0 == this.checkTerms2) return void noti.open("투자 회원 등록을 위해 약관 동의가 필요합니다.");
                                if (0 == this.request.memIvsAddr2.length) return void noti.open("주소를 입력해주세요.");
                                if (0 == this.request.memIvsCorNo.length) return void noti.open("법인등록번호를 입력해주세요.");
                                if (("MIT002" == this.request.memIvsType || "MIT003" == this.request.memIvsType) && !this.ivsFileExist) return void noti.open("회원유형을 적격투자자나 전문투자자로 변경하시려면 <br/> 자격요건에 따른 서류를 제출하셔야합니다.");
                                if (0 == this.request.memIvsCorFile.fileData.length) return void noti.open("사업자등록증은 실명 확인용 필수서류입니다.");
                                if (0 == this.request.memIvsRnmCorFile.fileData.length) return void noti.open("법인등기부등본은 실명 확인용 필수서류입니다.");
                                if (0 == this.request.memIvsCorSealFile.fileData.length) return void noti.open("법인인감증명서는 실명 확인용 필수서류입니다.");
                                if (0 == this.request.memIvsRnmFile.fileData.length && "" == this.request.memIvsRnmFile.fileName) return void noti.open("실명확인증표는 실명 확인용 필수서류입니다.");
                                if (0 == this.request.memIvsBankFile.fileData.length && "" == this.request.memIvsBankFile.fileName) return void noti.open("법인계좌는 필수서류입니다.");
                                for (var e = 0; e < this.request.memIvsFiles.length; e++) this.request.memIvsFiles[e].state && 0 == this.request.memIvsFiles[e].fileName.length && (this.request.memIvsFiles[e].state = !1);
                                if (1 == this.request.relConfirm) {
                                    if (this.request.memIvsRelStatus = "MIR002", 0 == this.request.memIvsRelFile.fileData.length && "" == this.request.memIvsRelFile.fileName) return void noti.open("연고자 증빙서류는 연고자 확인용 필수서류입니다.");
                                    if ("" == this.request.memIvsRelComNo.trim()) return void noti.open("연고자 확인을 위해 사업자 등록번호를 입력해주세요.")
                                }
                                this.request.memIvsRegiHpNo = this.certiInfo.memTelNo, this.request.memIvsSex = this.certiInfo.memSex, this.request.memIvsBirth = this.certiInfo.memBirth, this.request.memIvsResName = this.certiInfo.memName, $(".page-loader-more").fadeIn(""), axios.post("/member/investor/insert", this.request).then(function(e) {
                                    $(".page-loader-more").fadeOut(""), "0000" == e.data.rCode ? (window.dataLayer = window.dataLayer || [], window.dataLayer.push({
                                        event: "InvestorComplete"
                                    }), noti.open("투자회원 등록 신청이 완료되었습니다.", function() {
                                        window.open("/", "_self")
                                    })) : noti.open(e.data.rMsg)
                                })
                            },
                            updateBasicInfo: function() {
                                var e = this;
                                if (this.request.authChange = !1, 0 == this.request.memIvsAddr2.length) return void noti.open("주소를 입력해주세요.");
                                $(".page-loader-more").fadeIn(""), axios.post("/member/investor/update/basic", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("기본정보 수정이 완료되었습니다."), e.loadInvestState()) : noti.open(t.dat.rMsg)
                                })
                            },
                            updateResInfo: function() {
                                var e = this;
                                0 == this.checkAuthTried && (this.request.authChange = !1), $(".page-loader-more").fadeIn(""), axios.post("/member/investor/update/representative", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("담당자 정보 변경이 완료되었습니다."), e.loadInvestState()) : noti.open(t.data.rMsg)
                                })
                            },
                            updateIvsType: function() {
                                var e = this;
                                if (this.request.memIvsDoc = "", ("MIT002" == this.request.memIvsType || "MIT003" == this.request.memIvsType) && !this.ivsFileExist) return void noti.open("회원유형을 적격투자자나 전문투자자로 변경하시려면 <br/> 자격요건에 따른 서류를 제출하셔야합니다.");
                                $(".page-loader-more").fadeIn(""), axios.post("/member/investor/update/type", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("회원유형 변경 신청이 완료되었습니다."), e.loadInvestState()) : noti.open(t.data.rMsg)
                                })
                            },
                            updateRealNameDoc: function() {
                                var e = this;
                                return 0 == this.request.memIvsCorFile.fileData.length ? void noti.open("사업자등록증은 실명 확인용 필수서류입니다.") : 0 == this.request.memIvsRnmCorFile.fileData.length ? void noti.open("법인등기부등본은 실명 확인용 필수서류입니다.") : 0 == this.request.memIvsCorSealFile.fileData.length ? void noti.open("법인인감증명서는 실명 확인용 필수서류입니다.") : 0 == this.request.memIvsRnmFile.fileData.length ? void noti.open("실명확인용증표는 실명 확인용 필수서류입니다.") : 0 == this.request.memIvsRnmFile.fileData.length && "" == this.request.memIvsRnmFile.fileName ? void noti.open("실명확인증표는 필수서류입니다. <br/> 다시 업로드해주세요. <br/> 업로드가 불가능한 경우 크라우디에 문의 부탁드립니다. ") : 0 == this.request.memIvsBankFile.fileData.length && "" == this.request.memIvsBankFile.fileName ? void noti.open("법인계좌는 필수서류입니다.<br />다시 업로드해주세요.<br />업로드가 불가능한 경우 크라우디에 문의 부탁드립니다.") : (this.request.memIvsRnmDoc = "", $(".page-loader-more").fadeIn(""), void axios.post("/member/investor/update/real-name-doc", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("실명확인용 정보 수정 신청이 완료되었습니다."), e.loadInvestState()) : noti.open(t.data.rMsg)
                                }))
                            },
                            updateRel: function() {
                                var e = this;
                                if (1 == this.request.relConfirm) {
                                    if (this.request.memIvsRelStatus = "MIR002", "" == this.request.memIvsRelComNo || null == this.request.memIvsRelComNo) return void noti.open("투자할 기업의 사업자등록번호를 입력해주세요.");
                                    if (0 == this.request.memIvsRelFile.fileData.length && "" == this.request.memIvsRelFile.fileName) return void noti.open("연고자 증빙서류를 업로드해주세요.");
                                    this.request.memIvsRelFile.fileData.length > 0 && (this.request.memIvsRelDoc = ""), ("MIR004" == this.request.memIvsRelStatus && 0 != this.request.memIvsRelFile.fileData.length || "MIR001" == this.request.memIvsRelStatus) && (this.request.memIvsRelStatus = "MIR002")
                                } else this.request.memIvsRelStatus = "MIR001", this.request.memIvsRelComNo = "", this.request.memIvsRelFile = {
                                    fileData: "",
                                    fileName: "",
                                    state: !0
                                };
                                $(".page-loader-more").fadeIn(""), axios.post("/member/investor/update/rel", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("연고자 정보 수정이 신청되었습니다."), e.loadInvestState()) : noti.open(t.data.rMsg)
                                })
                            },
                            showRejectedModal: function(e) {
                                this.rejectedContent = 1 === e ? this.request.memIvsRnmReturn : 2 === e ? this.request.memIvsReturn : this.request.memIvsRelReturn, $("#aRejectedModal").modal("show")
                            },
                            changeMemIvsType: function(e) {
                                if ("MIT002" == this.memIvsOriginalType && "MIC002" == this.request.memIvsState)
                                    if (1 === e) {
                                        this.memIvsFilesDisabled = !0, this.request.memIvsFiles = [];
                                        for (var t = 0; t < this.memIvsOriginalFiles.length; t++) this.request.memIvsFiles.push(this.memIvsOriginalFiles[t]), this.request.memIvsFiles[t].state = !0;
                                        this.userTypeDocCount = this.userTypeDocOriginalCount, this.viewAddButtonCount = this.viewAddButtonOriginalCount
                                    } else {
                                        var n = {
                                            fileData: "",
                                            fileName: "",
                                            state: !0
                                        };
                                        this.request.memIvsFiles = [], this.request.memIvsFiles.push(n), this.memIvsFilesDisabled = !1
                                    }
                            },
                            sendPhoneAuth: function() {
                                var e = this;
                                return e.param.memTelCompany = e.selectCom, e.param.memTelNo = e.certiInfo.memTelNo, e.param.memName = e.certiInfo.memName, "" == e.param.memName ? void noti.open("이름을 입력해주세요.") : "" == e.param.memBirth ? void noti.open("주민번호 앞자리를 입력해주세요.") : "" == e.param.memSex ? void noti.open("주민번호 뒷자리를 입력해주세요.") : "" == e.selectCom ? void noti.open("통신사를 선택해주세요") : "" == e.param.memTelNo ? void noti.open("휴대폰 번호를 입력해주세요.") : void axios.post("/data/member/certi-call", this.param).then(function(t) {
                                    var n = t.data;
                                    "0000" == n.rCode ? (e.requestWord = "재요청", e.sendAuthNumber = !0, e.timeOut = !1, e.timerStart = !0, e.countdown(e.countdownTimeOut)) : noti.open(n.rMsg)
                                })
                            },
                            authCheck: function() {
                                var e = this;
                                if (!e.sendAuthNumber) return void noti.open("본인인증을 완료해주세요.");
                                if ("" == e.param1.memAuthNo) return void noti.open("인증번호 입력을 해주세요.");
                                for (var t = 0; t < e.agree.length; t++)
                                    if (!e.agree[t].check) return void noti.open(e.agree[t].text + "는 필수입니다.");
                                e.param1.memTelNo = e.param.memTelNo, $(".page-loader-more").fadeIn(""), axios.post("/data/member/certi-check", this.param1).then(function(t) {
                                    var n = t.data;
                                    "0000" == n.rCode ? ($(".page-loader-more").fadeOut(""), e.$emit("set-ci-confirm-flag", !0), e.sendAuthNumber = !1) : ($(".page-loader-more").fadeOut(""), noti.open(n.rMsg))
                                })
                            },
                            onCaptchaVerified: function(e) {
                                this.param1.recaptchaToken = e
                            },
                            modalChange: function(e) {
                                this.modalSelect = e
                            },
                            countdown: function(e) {
                                function t(e) {
                                    return e <= 9 ? "0" + e : e
                                }

                                function n() {
                                    c.isCntdownRestart && (c.time = "", c.isCntdownRestart = !1, clearTimeout(c.timer), l = 4, d = 59, a = +new Date + 1e3 * (60 * l + d) + 500), o = a - +new Date, o < 1e3 ? e() : (r = new Date(o), i = r.getUTCHours(), s = r.getUTCMinutes(), c.time = (i ? i + ":" + t(s) : s) + ":" + t(r.getUTCSeconds()), c.timer = setTimeout(n, r.getUTCMilliseconds() + 500))
                                }
                                var a, i, s, o, r, l = 4,
                                    d = 59,
                                    c = this;
                                a = +new Date + 1e3 * (60 * l + d) + 500, n()
                            },
                            countdownTimeOut: function() {
                                this.timeOut = !0, this.timerStart = !1
                            }
                        },
                        components: {
                            dropifyInput: n(2).default.component(),
                            fileInput: n(4).default.component(),
                            securSelect: n(1).default.component(),
                            bankSelect: n(1).default.component(),
                            investModal: n(5).default.component(),
                            RejectedModal: n(6).default.component(),
                            numberInput: n(0).default.component(),
                            authModal: n(3).default.component(),
                            "vue-recaptcha": VueRecaptcha
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t, n) {
        return t in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e
    }

    function i(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        o = function() {
            function e() {
                i(this, e)
            }
            return s(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div class="mt60 xs-mt30 mb80 mypage-myaccount-layout">\n                \x3c!-- 사진영역--\x3e\n                <div class="dropify-wrapper-80 mypage-myaccount-photo">\n                    <dropify-input accept="image/*" v-model="request.memShotImgFile" default-message="" :default-img="userImage"></dropify-input>\n                </div>\n\n                \x3c!-- 컨텐츠 영역 --\x3e\n                <div class="mypage-form xs-mt30">\n                    \n                    <div class="mb20 mypage-title">투자 회원 {{registerTitle}}하기 (조합회원)</div>\n\n                    \x3c!-- 조합명 --\x3e\n                    <div class="mypage-rabel mb5">조합명</div>\n                    <input type="text" class="form-control mp-input1" maxlength="20" v-model="request.memName" placeholder="조합명 입력" readonly="readonly"/>\n                    \x3c!-- //조합명 --\x3e\n\n                    \x3c!-- 조합고유번호 --\x3e\n                    <div class="mypage-rabel mb5">조합고유번호</div>\n                    <input type="text" v-model="request.memIvsComNo" class="form-control mp-input1" maxlength="10" placeholder="" readonly="readonly" />\n                    \x3c!-- //조합고유번호 --\x3e\n\n                    \x3c!-- 전화번호 --\x3e\n                    <div class="mypage-rabel mb5">전화번호</div>\n                    <number-input type="tel" class="form-control mp-input1" placeholder="" :num="request.memIvsTellNo" v-model="request.memIvsTellNo"/></number-input>\n                    \x3c!-- //전화번호 --\x3e\n\n                    \x3c!-- 이메일 --\x3e\n                    <div class="mypage-rabel mb5 mt10">이메일</div>\n                    <input type="email" class="form-control mp-input1" maxlength="100" v-model="request.memIvsResEmail" placeholder=""/>\n                    \x3c!-- //이메일 --\x3e\n\n                    \x3c!-- 우편번호 --\x3e\n                    <div for="zip_code" class="mypage-rabel mb5">우편번호</div>\n                    <div class="common-flex-end">\n                        <input type="tel" class="form-control mp-input1 mypage-zip-layout1" v-on:click="postOpen" v-model="postNum" name="zip_code" id="zip_code" placeholder="" readonly="readonly"/>\n                        <div class="mypage-btn-search" v-on:click="postOpen"></div>\n                    </div>\n                    \x3c!-- //우편번호 --\x3e\n\n                    \x3c!-- 주소 --\x3e\n                    <div class="mypage-rabel mb5">주소</div>\n                    <input type="text" class="form-control mp-input1" v-on:click="postOpen" v-model="address1" name="address1" placeholder="주소를 검색해주세요." readonly="readonly" />\n                    <input type="text" class="form-control mp-input1" v-model="request.memIvsAddr2" placeholder="상세 주소를 입력해주세요." />\n                    \x3c!-- //주소 --\x3e\n\n                    \x3c!-- 기본정보 수정 --\x3e\n                    <div class="mypage-setting-btn mt20" v-on:click="updateBasicInfo()" v-if="investor == \'Y\'">설정 저장</div>\n                    \x3c!-- //기본정보 수정 --\x3e\n\n\n                    <div class="mypage-title mt50 mb20">조합 담당자 정보</div>\n\n                    \x3c!-- 본인인증 \n                    <div class="mypage-rabel mb5">본인인증</div>\n                    <div class="mypage-setting-btn" v-on:click="auth()" :class="{\'not-allowed-btn\' : investor==\'Y\' }">본인인증 하기</div>\n                    --\x3e\n\n                    \x3c!-- 담당자명 --\x3e\n                    <div class="mypage-rabel mb5 mt10">담당자명</div>\n                    <input type="text" v-model="certiInfo.memName" class="form-control mp-input1" maxlength="20" placeholder="" :disabled="status.memCiConfirm == \'Y\'"/>\n                    \x3c!-- //담당자명 --\x3e\n\n\n                    \x3c!-- 인증 을 안했을 경우,--\x3e\n                    <template v-if="status.memCiConfirm == \'N\'">\n\n                        <div class="option_group option_group_none mt20">\n                            <div class="option2_radio">\n                                <label for="option1_radio6" class="radio-inline mypage-radio-custom-1">\n                                    <input type="radio" name="option2_radio_1" id="option1_radio6" value="1" v-model="authType" /><span class="webfont">휴대폰본인인증</span>\n                                </label>\n                                <label for="option1_radio7" class="radio-inline mypage-radio-custom-1">\n                                    <input type="radio" name="option2_radio_1" id="option1_radio7" value="2" v-model="authType" /><span class="webfont">카드본인인증</span>\n                                </label>\n                            </div>\n                        </div>\n\n                        \x3c!-- 휴대폰 본인인증 화면 --\x3e\n                        <template v-if="authType == 1">\n\n                            \x3c!-- 주민등록번호 --\x3e\n                            <div for="member_jumin1" class="mypage-rabel mt10 mb5">주민등록번호</div>\n                            <div class="common-flex-between mypage_jumin">\n                                <number-input type="tel" class="form-control mp-input1" placeholder="" maxlength="6" :num="param.memBirth" v-model="param.memBirth" /></number-input>\n                                <div class="ivs-pro-dash"></div>\n                                <number-input type="tel" class="form-control mp-input1 textLeft" placeholder="" maxlength="1" :num="param.memSex" v-model="param.memSex" /></number-input>\n                                <div class="dot-postion">\n                                    <span class="ivs-dot"></span>\n                                    <span class="ivs-dot"></span>\n                                    <span class="ivs-dot"></span>\n                                    <span class="ivs-dot"></span>\n                                    <span class="ivs-dot"></span>\n                                    <span class="ivs-dot"></span>\n                                </div>\n                            </div>\n                            \x3c!-- //주민등록번호 --\x3e\n\n                            <label class="mypage-rabel">통신사</label>\n                            <select class="ivs-select-button ivs-select-arrow" v-model="selectCom">\n                                <option value="" disabled selected>통신사를 선택해주세요</option>\n                                <option v-for="item in mobileCom" :value="item.value">{{item.text}}</option>\n                            </select>\n\n                            \x3c!-- 휴대폰번호 --\x3e\n                            <div class="mypage-rabel mt10 mb5">휴대폰번호</div>\n                            <div class="displayFlex">\n                                <number-input type="tel" class="form-control mp-input1" placeholder="\'-\' 없이 핸드폰 번호를 입력해주세요." maxlength="11" :num="certiInfo.memTelNo" v-model="certiInfo.memTelNo" :disabled="status.memCiConfirm == \'Y\'"/></number-input>\n                                <a class="mp-requestbtn" v-on:click="sendPhoneAuth" v-if="status.memCiConfirm == \'N\'">{{requestWord}}</a>\n                            </div>\n                            \x3c!-- //휴대폰번호 --\x3e\n\n                            <template v-if="sendAuthNumber">\n                                <div class="mypage-rabel">인증번호 입력</div>\n                                <div class="displayFlex">\n                                    <number-input type="tel" class="form-control mp-input1 mb0" placeholder="" maxlength="8" :num="param1.memAuthNo" v-model="param1.memAuthNo" :disabled="timeOut"/></number-input>\n                                    <div class="mp-requestbtn">{{ time }}</div>\n                                </div>\n                                <span class="crowdy-color-blue font12">통신사의 사정에 따라 문자 수신이 다소 늦어질 수 있습니다.</span>\n                                <vue-recaptcha sitekey="6LdbvpkUAAAAABuHxlZkN_IJTEPYeG5CrRjq371_" @verify="onCaptchaVerified" class="mt15 xs-mt5 ivs-vue-cap"></vue-recaptcha>\n\n                                <label for="dataCheck" class="checkbox-inline-1 ivs-check-bottom" v-for="(item,index) in agree" :style="{\'margin-top\' : -13*index + \'px\'}" >\n                                    <input type="checkbox" name="dataCheck" v-model="item.check"/><span class="label scaleSmall"></span><span class="ivs-check-custom" > {{item.text}} &nbsp;</span>\n                                    <a href="javascript:void(0)" class="blue-800 ivs-check-custom" data-toggle="modal" data-target="#authModal" v-on:click="modalChange(index)">전문보기</a>\n                                </label>\n\n                                <auth-modal :agreeIdx="modalSelect" :selectCom="selectCom"></auth-modal>\n\n                                <div class="mypage-setting-btn" v-on:click="authCheck">인증 확인</div>\n                            </template>\n                            <br/>\n                        </template>\n\n                         \x3c!-- 카드 본인인증 화면 --\x3e\n                        <template v-if="authType == 2">\n                            <div style="margin-bottom:10px; background-color:#efefef; border:1px solid #000; text-align:center;">\n                                <h5>나이스 카드 본인 인증이 <br /> 잠시 중단되었습니다.<br />\n                                빠른 시일 내에 복구하도록 하겠습니다.</h5>\n                            </div>\n                            \x3c!--\n                            < !-- 휴대폰 번호 -- >\n                            <div for="member_mobile" class="mypage-rabel mb5 mt20">전화번호</div>\n                            <div class="displayFlex">\n                                <number-input type="tel" class="form-control mp-input1" placeholder="\'-\' 없이 핸드폰 번호를 입력해주세요." maxlength="11" :num="mobileRequest.mobileNo" v-model="mobileRequest.mobileNo" :disabled="authMobileConfirm"/></number-input>\n                                <a class="mp-requestbtn" v-on:click="mobileCardAuth" >{{requestWord}}</a>\n                            </div>\n                            < !-- //휴대폰 번호 -- >\n\n                            <template v-if="sendAuthNumber && !authMobileConfirm">\n                                <div class="mypage-rabel">인증번호 입력</div>\n                                <div class="displayFlex">\n                                    <number-input type="tel" class="form-control mp-input1 mb0" placeholder="" maxlength="8" :num="mobileRequest.authNo" v-model="mobileRequest.authNo" :disabled="timeOut"/></number-input>\n                                    <div class="mp-requestbtn">{{ time }}</div>\n                                </div>\n                                <span class="crowdy-color-blue font12">통신사의 사정에 따라 문자 수신이 다소 늦어질 수 있습니다.</span>\n                                <div class="mypage-setting-btn mt30 mb30" v-on:click="mobileCardResult">인증 확인</div>\n                            </template>\n\n                            <div class="mypage-setting-btn mt20" v-on:click="authCard" v-if="authMobileConfirm">카드 확인</div>\n                            <br/>\n                            --\x3e\n                        </template>\n\n                    </template>\n\n\n                    \x3c!-- 인증을 했을 경우 --\x3e\n                    <template v-if="status.memCiConfirm == \'Y\'">\n                        <div for="member_mobile" class="mypage-rabel mb5 mt10">전화번호</div>\n                        <number-input type="tel" class="form-control mp-input1" placeholder="\'-\' 없이 핸드폰 번호를 입력해주세요." maxlength="11" :num="certiInfo.memTelNo" v-model="certiInfo.memTelNo" disabled/></number-input>\n                    </template>\n\n\n\n                    \x3c!-- //조합 담당자 정보 --\x3e\n\n                    \x3c!-- 회원유형 --\x3e\n                    <div class="mypage-title mt50">회원유형</div>\n                    \n                    <div class="mypage-rabel mb5 mt20">회원유형 선택</div>\n                    <div class="option_group option_group_none">\n                        <div class="option1_radio">\n                            <label for="option1_radio1" class="radio-inline">\n                                <input type="radio" name="option1_radio" id="option1_radio1" value="option1_radio1" checked="checked" /><span class="webfont">전문투자자</span>\n                            </label>\n                        </div>\n                    </div>\n\n                    \x3c!-- 실명확인용 서류 --\x3e\n                    <div class="mb20 mt50 mypage-title">실명확인용 서류</div>\n\n                    \x3c!-- 조합고유번호증 --\x3e\n                    <div class="mypage-rabel mb5">조합고유번호증*</div>\n                    <div class="input-group input-group-file">\n                        <input type="text" class="form-control" v-model="request.memIvsCorFile.fileName" placeholder="" readonly="readonly" />\n                        <span class="input-group-btn pb10">\n                            <span class="btn btn-outline btn-file">\n                                <i class="fa fa-upload" aria-hidden="true"></i>\n                                <file-input v-model="request.memIvsCorFile" data-vv-name="memIvsCorFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                            </span>\n                        </span>\n                    </div>\n                    \x3c!-- //조합고유번호증 --\x3e\n\n                    \x3c!-- 통장사본 --\x3e\n                    <div class="mypage-rabel mb5">통장사본*</div>\n\n                    <div class="input-group input-group-file">\n                        <input type="text" class="form-control" v-model="request.memIvsBankFile.fileName" placeholder="청약금 출금 통장" readonly="readonly" />\n                        <span class="input-group-btn pb10">\n                            <span class="btn btn-outline btn-file">\n                                <i class="fa fa-upload" aria-hidden="true"></i>\n                                <file-input v-model="request.memIvsBankFile" data-vv-name="memIvsBankFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                            </span>\n                        </span>\n                    </div>\n\n                    \x3c!-- 실명확인증표 --\x3e\n                    <div class="mypage-rabel mb5">실명확인증표*</div>\n                    <div class="input-group input-group-file">\n                        <input type="text" class="form-control" v-model="request.memIvsRnmFile.fileName" placeholder="대표자 혹은 대리인의 신분증" readonly="readonly" />\n                        <span class="input-group-btn pb10">\n                            <span class="btn btn-outline btn-file">\n                                <i class="fa fa-upload" aria-hidden="true"></i>\n                                <file-input v-model="request.memIvsRnmFile" data-vv-name="memIvsRnmFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                            </span>\n                        </span>\n                    </div>\n                    \x3c!-- //실명확인증표 --\x3e\n\n                    \x3c!-- 실명확인증표(위임장) --\x3e\n                    <div class="input-group input-group-file">\n                        <input type="text" class="form-control" v-model="request.memIvsRnmAttorneyFile.fileName" placeholder="대리인 신분증 첨부시 위임장 첨부" readonly="readonly" />\n                        <span class="input-group-btn pb10">\n                            <span class="btn btn-outline btn-file">\n                                <i class="fa fa-upload" aria-hidden="true"></i>\n                                <file-input v-model="request.memIvsRnmAttorneyFile" data-vv-name="memIvsRnmAttorneyFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                            </span>\n                        </span>\n                    </div>\n                    <a href="https://image-se.ycrowdy.com/file/%E1%84%8F%E1%85%B3%E1%84%85%E1%85%A1%E1%84%8B%E1%85%AE%E1%84%83%E1%85%B5%E1%84%8B%E1%85%B1%E1%84%8B%E1%85%B5%E1%86%B7%E1%84%8C%E1%85%A1%E1%86%BC%E1%84%8B%E1%85%A3%E1%86%BC%E1%84%89%E1%85%B5%E1%86%A8.hwp" class="btn-link grey-600 mypage-setting-link-custom">(위임장 샘플)</a>\n                    \x3c!-- //실명확인증표(위임장) --\x3e\n                     \n                    \x3c!-- 사용인감계(선택) --\x3e\n                    <div class="mypage-rabel mb5">사용인감계 <span class="red-800">(선택사항)</span></div>\n                    <div class="input-group input-group-file">\n                        <input type="text" class="form-control" v-model="request.memIvsCorAttorneyFile.fileName" placeholder="" readonly="readonly" />\n                        <span class="input-group-btn pb10">\n                            <span class="btn btn-outline btn-file">\n                                <i class="fa fa-upload" aria-hidden="true"></i>\n                                <file-input v-model="request.memIvsCorAttorneyFile" data-vv-name="memIvsCorAttorneyFile" v-validate="\'required\'" :disabled="memIvsRnmDocDisabled" v-on:error="error"></file-input>\n                            </span>\n                        </span>\n                    </div>\n                    <a href="https://image-se.ycrowdy.com/file/%E1%84%8F%E1%85%B3%E1%84%85%E1%85%A1%E1%84%8B%E1%85%AE%E1%84%83%E1%85%B5%E1%84%89%E1%85%A1%E1%84%8B%E1%85%AD%E1%86%BC%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%80%E1%85%A1%E1%86%B7%E1%84%80%E1%85%A8(%E1%84%90%E1%85%AE%E1%84%8C%E1%85%A1%E1%84%8C%E1%85%A9%E1%84%92%E1%85%A1%E1%86%B8)_180102.hwp" class="btn-link grey-600 mypage-setting-link-custom">(사용인감계 샘플)</a>\n                    \x3c!-- //사용인감계(선택) --\x3e      \n\n                    <div class="mypage-setting-desc mb15 red-800" v-if="request.memIvsRnmDocStatus == \'MIRT04\'">\n                        인증이 반려 되었습니다. 반려사유를 살펴보고 다시 제출해주세요. <br/>\n                        <a href="javascript:void(0)" class="btn-link grey-600 pl0 pr0 ml10" v-on:click="showRejectedModal(1)">반려사유 보기 <i class="fa fa-angle-right ml5" aria-hidden="true"></i></a>\n                    </div>\n\n                    <div class="mypage-setting-desc">\n                        실명확인 서류가 승인되지 않을 경우, 배정탈락의 사유가 될 수 있습니다.\n                    </div>\n                    \n                    \x3c!-- 실명확인용 서류 수정 --\x3e\n                    <div class="mypage-setting-btn mt20" v-on:click="updateRealNameDoc()" v-if="investor == \'Y\' && request.memIvsRnmDocStatus == \'MIRT04\'">설정 저장</div>\n                    \x3c!-- //실명확인용 서류 수정 --\x3e\n\n                    \x3c!-- 투자 회원 이용약관 동의 --\x3e\n                    <div v-if="investor == \'N\'" class="mt20">\n                        <label class="chk_container mypage-setting-desc">투자회원 <a class="blue-800" href="/crowdy/term?menu=3" target="_blank"><strong>이용약관</strong></a>에 동의합니다.\n                            <input type="checkbox" v-model="checkTerms1">\n                            <span class="checkmark"></span>\n                        </label>\n                    </div>\n\n                    <div v-if="investor == \'N\'" class="mt10">\n                        <label class="chk_container mypage-setting-desc">투자회원 <a class="blue-800" href="/crowdy/term?menu=5" target="_blank"><strong>개인정보 취급방침</strong></a>에 동의합니다.\n                            <input type="checkbox" v-model="checkTerms2">\n                            <span class="checkmark"></span>\n                        </label>\n                    </div>\n                    \x3c!-- 투자 회원 이용약관 동의 --\x3e\n\n                    <div class="mt20 common-default-flex" v-if="investor == \'N\'">\n                        <button type="button" class="mypage-setting-btn mypage-setting-btn-cancle">취소</button>\n                        <button type="button" class="mypage-setting-btn" v-on:click="applyData()">등록</button>\n                    </div>\n\n                    <rejected-modal :rejectedReason="rejectedContent"></rejected-modal>\n\n                    <form name="form_chk" method="post">\n                        <input type="hidden" name="m" value="checkplusSerivce">                     \x3c!-- 필수 데이타로, 누락하시면 안됩니다. --\x3e\n                        <input type="hidden" name="EncodeData" id="encodeData" value="">            \x3c!-- 위에서 업체정보를 암호화 한 데이타입니다. --\x3e\n\n                        <input type="hidden" name="param_r1" value="accountSetting.authResult">\n                        <input type="hidden" name="param_r2" :value="mobileRequest.mobileNo">\n                        <input type="hidden" name="param_r3" :value="request.memCode">\n                    </form>\n                </div>\n            </div>\n            ',
                        props: ["status", "certiInfo"],
                        data: function() {
                            var e;
                            return e = {
                                dataConfirm: !1,
                                mobileCom: [{
                                    text: "SKT",
                                    value: "1"
                                }, {
                                    text: "KT",
                                    value: "2"
                                }, {
                                    text: "LG U+",
                                    value: "3"
                                }, {
                                    text: "알뜰폰SKT",
                                    value: "5"
                                }, {
                                    text: "알뜰폰KT",
                                    value: "6"
                                }, {
                                    text: "알뜰폰LG",
                                    value: "7"
                                }],
                                selectCom: "",
                                agree: [],
                                request: {
                                    memCode: userInfo.memCode,
                                    memName: userInfo.name,
                                    memType: userInfo.type,
                                    memIvsAddr1: "",
                                    memIvsAddr2: "",
                                    memIvsPostNum: "",
                                    memShotImg: userInfo.image,
                                    authChange: !1,
                                    memIvsComNo: "",
                                    memIvsCompanyName: userInfo.name,
                                    memIvsCorNo: "",
                                    memIvsStockType: "",
                                    memIvsTellNo: "",
                                    memIvsResName: "",
                                    memIvsResEmail: "",
                                    memIvsRnmDoc: "",
                                    memIvsRnmDocStatus: "",
                                    memIvsRnmFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsCorDoc: "",
                                    memIvsCorFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsBankImg: "",
                                    memIvsBankFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsRnmAttorney: "",
                                    memIvsRnmAttorneyFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsCorAttorney: "",
                                    memIvsCorAttorneyFile: {
                                        fileData: "",
                                        fileName: "",
                                        state: !0
                                    },
                                    memIvsRegiHpNo: "",
                                    memIvsType: "MIT001",
                                    memIvsSecurCode: "1",
                                    memIvsSecurNo: "",
                                    memIvsBankCode: "001",
                                    memIvsBankNo: "",
                                    memIvsState: "",
                                    memIvsRnmReturn: "",
                                    memIvsSex: "",
                                    memIvsBirth: "",
                                    memIvsInChar: "",
                                    memIvsRelStatus: "MIR001"
                                },
                                address: {
                                    postNum: "",
                                    address1: ""
                                },
                                isCntdownRestart: !1,
                                bankCodeOptions: [],
                                securCodeOptions: [],
                                confirm: {
                                    bank: !1,
                                    community: !1,
                                    fund: !1,
                                    secur: !1
                                },
                                authType: 1,
                                investor: this.status.investor,
                                rejectedContent: "",
                                memIvsRnmDocDisabled: !1,
                                checkAuthTried: !1,
                                checkTerms1: !1,
                                checkTerms2: !1,
                                os: "",
                                param: {
                                    memCode: userInfo.memCode,
                                    memName: "",
                                    memTelNo: "",
                                    memSex: "",
                                    memBirth: "",
                                    memTelCompany: "",
                                    memNameType: "1"
                                },
                                param1: {
                                    memCode: userInfo.memCode,
                                    memTelNo: "",
                                    memAuthNo: "",
                                    recaptchaToken: ""
                                },
                                mobileRequest: {
                                    mobileNo: "",
                                    reqSeq: "",
                                    authNo: ""
                                },
                                sendAuthNumber: !1,
                                time: "5:00",
                                timerStart: !1,
                                timeOut: !1
                            }, a(e, "isCntdownRestart", !1), a(e, "timer", {}), a(e, "requestWord", "인증요청"), a(e, "modalSelect", 0), a(e, "authMobileConfirm", !1), e
                        },
                        created: function() {
                            this.getBankCodeList(), this.getStockCodeList(), this.loadInvestState(), this.loadBizNum(), window.accountSetting = this, this.deviceCheck()
                        },
                        watch: {
                            selectCom: function() {
                                "1" == this.selectCom || "5" == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : "2" == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : "3" == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : "6" == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }, {
                                    text: "[KT 알뜰폰] 개인정보 제3자 제공 동의",
                                    check: !1
                                }] : "7" == this.selectCom && (this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+] 본인확인서비스 이용약관 동의 ",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+ 알뜰폰] 개인정보 제3자 제공 동의 ",
                                    check: !1
                                }])
                            },
                            authType: function() {
                                this.menuReset()
                            }
                        },
                        mounted: function() {
                            $(".switch-hb").bootstrapSwitch()
                        },
                        computed: {
                            registerTitle: function() {
                                return "Y" == this.investor ? "수정" : "등록"
                            },
                            postNum: function() {
                                return this.request.memIvsPostNum = this.address.postNum, this.address.postNum
                            },
                            address1: function() {
                                return this.request.memIvsAddr1 = this.address.address1, this.address.address1
                            },
                            userName: function() {
                                return userInfo.name
                            },
                            userEmail: function() {
                                return userInfo.email
                            },
                            userImage: function() {
                                return userInfo.image
                            }
                        },
                        methods: {
                            loadInvestState: function() {
                                this.request.memIvsState = this.status.memIvsState, "Y" == this.investor ? this.load() : this.$nextTick(function() {
                                    $(".option_group .radio-inline input, .option_group .checkbox-inline input").checkboxradio(), $(".option1_radio, .option2_radio, .option1_checkbox").controlgroup()
                                })
                            },
                            loadBizNum: function() {
                                var e = this;
                                axios.post("/data/member/info", this.request).then(function(t) {
                                    e.request.memIvsComNo = t.data.rData.bizNum
                                })
                            },
                            load: function() {
                                var e = this;
                                axios.post("/data/member/investor/info", this.request).then(function(t) {
                                    e.request.memIvsAddr1 = t.data.rData.memIvsAddr1, e.request.memIvsAddr2 = t.data.rData.memIvsAddr2, e.request.memIvsPostNum = t.data.rData.memIvsPostNum, e.address.postNum = t.data.rData.memIvsPostNum, e.address.address1 = t.data.rData.memIvsAddr1, e.request.memIvsResName = t.data.rData.memIvsResName, e.request.memIvsResEmail = t.data.rData.memIvsResEmail, e.request.memIvsRegiHpNo = t.data.rData.memIvsRegiHpNo, e.request.memIvsTellNo = t.data.rData.memIvsTellNo, e.request.memIvsSecurNo = t.data.rData.memIvsSecurNo, t.data.rData.memIvsSecurCode.length > 0 && (e.request.memIvsSecurCode = t.data.rData.memIvsSecurCode), e.request.memIvsCorFile.fileName = t.data.rData.memIvsCorDocName, e.request.memIvsBankFile.fileName = t.data.rData.memIvsBankImgName, e.request.memIvsRnmFile.fileName = t.data.rData.memIvsRnmDocName, e.request.memIvsRnmAttorneyFile.fileName = t.data.rData.memIvsRnmAttorneyName, e.request.memIvsCorAttorneyFile.fileName = t.data.rData.memIvsCorAttorneyName, e.request.memIvsRnmReturn = t.data.rData.memIvsRnmReturn, e.request.memIvsRnmDocStatus = t.data.rData.memIvsRnmDocStatus, "MIRT01" == e.request.memIvsRnmDocStatus || "MIRT04" == e.request.memIvsRnmDocStatus ? (e.request.memIvsCorFile.fileName = "", e.request.memIvsBankFile.fileName = "", e.request.memIvsRnmFile.fileName = "", e.request.memIvsRnmAttorneyFile.fileName = "", e.request.memIvsCorAttorneyFile.fileName = "", e.memIvsRnmDocDisabled = !1) : e.memIvsRnmDocDisabled = !0, e.$nextTick(function() {
                                        $(".option_group .radio-inline input, .option_group .checkbox-inline input").checkboxradio(), $(".option1_radio, .option2_radio, .option1_checkbox").controlgroup()
                                    })
                                })
                            },
                            subMenuChange: function(e) {
                                this.type = e
                            },
                            postOpen: function() {
                                post.open(this)
                            },
                            deviceCheck: function() {
                                isMobile.apple.device ? this.os = "M" : isMobile.android.device ? this.os = "M" : this.os = "W"
                            },
                            menuReset: function() {
                                this.mobileRequest.authNo = "", this.mobileRequest.mobileNo = "", this.requestWord = "인증요청", this.sendAuthNumber = !1, this.timeOut = !1, this.timerStart = !1, this.time = "5:00", clearTimeout(this.timer)
                            },
                            mobileCardAuth: function() {
                                var e = this;
                                if (!this.authMobileConfirm) {
                                    if ("" == this.mobileRequest.mobileNo) return void noti.open("휴대폰 번호를 입력해 주세요.");
                                    clearTimeout(e.timer), axios.post("/auth/mobile", this.mobileRequest).then(function(t) {
                                        noti.open("인증번호를 요청하였습니다."), e.mobileRequest.reqSeq = t.data, e.requestWord = "재요청", e.sendAuthNumber = !0, e.timeOut = !1, e.timerStart = !0, e.countdown(e.countdownTimeOut)
                                    })
                                }
                            },
                            mobileCardResult: function() {
                                var e = this;
                                if ("" == this.mobileRequest.authNo) return void noti.open("인증번호를 입력해 주세요.");
                                axios.post("/auth/mobile/result", this.mobileRequest).then(function(t) {
                                    if (clearTimeout(e.timer), e.timerStart = !1, !t.data) return void noti.open("인증번호가 유효하지 않습니다.");
                                    e.requestWord = "인증완료", e.authMobileConfirm = !0
                                })
                            },
                            authCard: function() {
                                axios.post("/auth/nice/C").then(function(e) {
                                    document.getElementById("encodeData").value = e.data.rData.data, window.open("", "popupChk", "width=500, height=800, top=100, left=100, fullscreen=no, menubar=no, status=no, toolbar=no, titlebar=yes, location=no, scrollbar=no"), document.form_chk.action = "https://nice.checkplus.co.kr/CheckPlusSafeModel/checkplus.cb", document.form_chk.target = "popupChk", document.form_chk.submit()
                                })
                            },
                            authResult: function(e) {
                                e ? (this.$emit("set-ci-confirm-flag", !0), noti.open("본인인증이 완료되었습니다. <br/> 남은 사항들을 입력해주세요.")) : noti.open("본인인증에 실패했습니다 <br/> 다시시도해주세요.")
                            },
                            error: function(e) {
                                noti.open("업로드되는 파일 사이즈는 10MB보다 작아야합니다.")
                            },
                            getStockCodeList: function() {
                                var e = this;
                                axios.post("/data/crowdy/code/invest", {
                                    gcode: "MEM_IVS_SECUR_CODE"
                                }).then(function(t) {
                                    var n = t.data;
                                    if ("0000" == n.rCode) {
                                        for (var a = 0; a < n.rData.length; a++) {
                                            var i = {
                                                id: n.rData[a].commonCode,
                                                text: n.rData[a].commonInfo
                                            };
                                            e.securCodeOptions.push(i)
                                        }
                                        e.confirm.secur = !0
                                    } else noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            getBankCodeList: function() {
                                var e = this;
                                axios.post("/data/crowdy/code/invest", {
                                    gcode: "IRMI_STOCK_BANK"
                                }).then(function(t) {
                                    var n = t.data;
                                    if ("0000" == n.rCode) {
                                        for (var a = 0; a < n.rData.length; a++) {
                                            var i = {
                                                id: n.rData[a].commonCode,
                                                text: n.rData[a].commonInfo
                                            };
                                            e.bankCodeOptions.push(i)
                                        }
                                        e.confirm.bank = !0
                                    } else noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            applyData: function() {
                                return "N" == this.status.memCiConfirm ? void noti.open("휴대폰 인증이나 신용카드 인증을 완료해주십시오.") : 0 == this.checkTerms1 || 0 == this.checkTerms2 ? void noti.open("투자 회원 등록을 위해 약관 동의가 필요합니다.") : 0 == this.request.memIvsComNo.length ? void noti.open("조합등록번호를 입력해주세요.") : 0 == this.request.memIvsAddr2.length ? void noti.open("주소를 입력해주세요.") : 0 == this.request.memIvsCorFile.fileData.length && "" == this.request.memIvsCorFile.fileName ? void noti.open("조합고유번호증은 실명확인용 필수서류입니다.") : 0 == this.request.memIvsBankFile.fileData.length && "" == this.request.memIvsBankFile.fileName ? void noti.open("통장사본은 실명확인용 필수서류입니다.") : 0 == this.request.memIvsRnmFile.fileData.length && "" == this.request.memIvsRnmFile.fileName ? void noti.open("실명확인증표는 실명확인용 필수서류입니다.") : "MIT002" != this.request.memIvsType && "MIT003" != this.request.memIvsType || this.ivsFileExist ? (this.request.memIvsRegiHpNo = this.certiInfo.memTelNo, this.request.memIvsSex = this.certiInfo.memSex, this.request.memIvsBirth = this.certiInfo.memBirth, this.request.memIvsResName = this.certiInfo.memName, $(".page-loader-more").fadeIn(""), void axios.post("/member/investor/insert", this.request).then(function(e) {
                                    $(".page-loader-more").fadeOut(""), "0000" == e.data.rCode ? (window.dataLayer = window.dataLayer || [], window.dataLayer.push({
                                        event: "InvestorComplete"
                                    }), noti.open("투자회원 등록 신청이 완료되었습니다.", function() {
                                        window.open("/", "_self")
                                    })) : noti.open(e.data.rMsg)
                                })) : void noti.open("회원유형을 적격투자자나 전문투자자로 변경하시려면 <br/> 자격요건에 따른 서류를 제출하셔야합니다.")
                            },
                            updateBasicInfo: function() {
                                var e = this;
                                if (this.request.authChange = !1, 0 == this.request.memIvsAddr2.length) return void noti.open("주소를 입력해주세요.");
                                $(".page-loader-more").fadeIn(""), axios.post("/member/investor/update/basic", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("기본정보 수정이 완료되었습니다."), e.loadInvestState()) : noti.open(t.data.rMsg)
                                })
                            },
                            updateResInfo: function() {
                                var e = this;
                                0 == this.checkAuthTried && (this.request.authChange = !1), $(".page-loader-more").fadeIn(""), axios.post("/member/investor/update/representative", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("담당자 정보 변경이 완료되었습니다."), e.loadInvestState()) : noti.open(t.data.rMsg)
                                })
                            },
                            updateRealNameDoc: function() {
                                var e = this;
                                return 0 == this.request.memIvsCorFile.fileData.length ? void noti.open("조합고유번호증은 실명확인용 필수서류입니다.") : 0 == this.request.memIvsBankFile.fileData.length ? void noti.open("통장사본은 실명확인용 필수서류입니다.") : (this.request.memIvsRnmDoc = "", $(".page-loader-more").fadeIn(""), void axios.post("/member/investor/update/real-name-doc", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("실명확인용 정보 수정 신청이 완료되었습니다."), e.loadInvestState()) : noti.open(t.data.rMsg)
                                }))
                            },
                            showRejectedModal: function() {
                                this.rejectedContent = this.request.memIvsRnmReturn, $("#aRejectedModal").modal("show")
                            },
                            sendPhoneAuth: function() {
                                var e = this;
                                e.param.memTelCompany = e.selectCom, e.param.memTelNo = e.certiInfo.memTelNo, e.param.memName = e.certiInfo.memName, axios.post("/data/member/certi-call", this.param).then(function(t) {
                                    var n = t.data;
                                    "0000" == n.rCode ? (e.requestWord = "재요청", e.sendAuthNumber = !0, e.timeOut = !1, e.timerStart = !0, e.countdown(e.countdownTimeOut)) : noti.open(n.rMsg)
                                })
                            },
                            authCheck: function() {
                                var e = this;
                                if (!e.sendAuthNumber) return void noti.open("본인인증을 완료해주세요.");
                                if ("" == e.param1.memAuthNo) return void noti.open("인증번호 입력을 해주세요.");
                                for (var t = 0; t < e.agree.length; t++)
                                    if (!e.agree[t].check) return void noti.open(e.agree[t].text + "는 필수입니다.");
                                e.param1.memTelNo = e.param.memTelNo, $(".page-loader-more").fadeIn(""), axios.post("/data/member/certi-check", this.param1).then(function(t) {
                                    var n = t.data;
                                    "0000" == n.rCode ? ($(".page-loader-more").fadeOut(""), e.$emit("set-ci-confirm-flag", !0), e.sendAuthNumber = !1) : ($(".page-loader-more").fadeOut(""), noti.open(n.rMsg))
                                })
                            },
                            onCaptchaVerified: function(e) {
                                this.param1.recaptchaToken = e
                            },
                            modalChange: function(e) {
                                this.modalSelect = e
                            },
                            countdown: function(e) {
                                function t(e) {
                                    return e <= 9 ? "0" + e : e
                                }

                                function n() {
                                    c.isCntdownRestart && (c.time = "", c.isCntdownRestart = !1, clearTimeout(c.timer), l = 4, d = 59, a = +new Date + 1e3 * (60 * l + d) + 500), o = a - +new Date, o < 1e3 ? e() : (r = new Date(o), i = r.getUTCHours(), s = r.getUTCMinutes(), c.time = (i ? i + ":" + t(s) : s) + ":" + t(r.getUTCSeconds()), c.timer = setTimeout(n, r.getUTCMilliseconds() + 500))
                                }
                                var a, i, s, o, r, l = 4,
                                    d = 59,
                                    c = this;
                                a = +new Date + 1e3 * (60 * l + d) + 500, n()
                            },
                            countdownTimeOut: function() {
                                this.timeOut = !0, this.timerStart = !1
                            }
                        },
                        components: {
                            dropifyInput: n(2).default.component(),
                            fileInput: n(4).default.component(),
                            bankSelect: n(1).default.component(),
                            securSelect: n(1).default.component(),
                            RejectedModal: n(6).default.component(),
                            numberInput: n(0).default.component(),
                            authModal: n(3).default.component(),
                            "vue-recaptcha": VueRecaptcha
                        }
                    }
                }
            }]), e
        }();
    t.default = new o
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div class="mt60 xs-mt30 mb80 mypage-myaccount-layout">\n                \x3c!-- 사진영역--\x3e\n                <div class="dropify-wrapper-80 mypage-myaccount-photo">\n                    <dropify-input accept="image/*" v-model="request.memShotImgFile" default-message="" :default-img="userImage" @remove-img="removeImg"></dropify-input>\n                </div>\n\n                \x3c!-- 기본정보--\x3e\n                <div class="mypage-form xs-mt30">\n                \n                    <div class="mb20 mypage-title">기본정보 설정</div>\n\n                    \x3c!-- 이름 --\x3e\n                    <label for="member_name" class="mypage-rabel colorGray3">이름</label>\n                    <input type="text" class="form-control mp-input1" title="이름을 입력하세요." v-model.trim="request.memName" placeholder="이름을 입력"/>\n                    \x3c!-- //이름 --\x3e\n\n                    \x3c!-- 이메일 --\x3e\n                    <label for="member_email" class="mypage-rabel colorGray3">이메일</label>\n                    <input type="email" class="form-control mp-input1" v-model="userEmail" placeholder="" disabled/>\n                    \x3c!-- //이메일 --\x3e\n\n                    \x3c!-- 우편번호 --\x3e\n                    <label for="zip_code" class="mypage-rabel colorGray3">우편번호</label>\n                    <div class="common-flex-end">\n                        <input type="tel" class="form-control mp-input1 mypage-zip-layout1" v-on:click="postOpen" v-model="postNum" name="zip_code" id="zip_code" placeholder="" readonly="readonly"/>\n                        <div class="mypage-btn-search" v-on:click="postOpen"></div>\n                    </div>\n                    \x3c!-- //우편번호 --\x3e\n\n                    \x3c!-- 주소 --\x3e\n                    <label for="address1" class="mypage-rabel colorGray3">주소</label>\n                    <input type="text" class="form-control mp-input1" v-on:click="postOpen" v-model="address1" name="address1" id="address1" placeholder="주소를 검색해주세요." readonly="readonly" />\n                    <input type="text" class="form-control mp-input1" v-model="request.memSpsAddr2" name="address2" id="address2" placeholder="상세 주소를 입력해주세요." />\n                    \x3c!-- //주소 --\x3e\n\n                    <label class="chk_container">마케팅 정보 수신 동의\n                        <input type="checkbox" v-model="checkMarketingAgree" v-on:click="checkTerms">\n                        <span class="checkmark"></span>\n                    </label>\n\n                    <div class="mypage-setting-btn mt20 xs-mt30" v-on:click="changeAccountInfo(0)">설정 저장</div>\n\n                    <div class="mt60 xs-mt50 mb20 mypage-title">SNS 연동</div>\n\n                    <div class="sns_login_btn">\n                        <ul>\n                            <li class="nth-child1 ml0 mr10" v-on:click="facebookLink" :style="snsOauth.facebook? {\'opacity\':1.0} : {\'opacity\':0.3}"><a>페이스북</a></li> \n                            <li class="nth-child2 mr10" v-on:click="kakaoLink" :style="snsOauth.kakao? {\'opacity\':1.0} : {\'opacity\':0.3}"><a>카카오톡</a></li> \n                            <li class="nth-child3" v-on:click="naverLink" :style="snsOauth.naver? {\'opacity\':1.0} : {\'opacity\':0.3}"><a>네이버</a></li>\n                        </ul>\n                    </div>\n                    \n                    <div class="mt60 xs-mt50 mb20 mypage-title">본인인증</div>\n                    <div class="blue-800 mypage-margin-layout" v-if="status.memCiConfirm == \'Y\'">본인인증이 완료되었습니다.</div>\n\n                    <label class="mypage-rabel colorGray3">이름(실명)</label>\n                    <input id="txtName" v-model.trim="certiInfo.memName" type="text" class="form-control mp-input1" style="margin-bottom:10px;" placeholder="이름을 입력" :disabled="status.memCiConfirm == \'Y\' || readFlg" :readonly="readFlg" v-if="readConfirm" />\n                    <div id="txtName_err" class="inputError"></div>\n\n                    <template v-if="status.memCiConfirm == \'N\'">\n                        <div class="mypage-rabel colorGray3 mb5">주민등록번호</div>\n                        <div class="common-flex-between mypage-jumin">\n                            <number-input id="txtBirth" :num="param.memBirth" v-model="param.memBirth" type="tel" class="form-control mp-input1" style="margin-bottom:0px;" placeholder="앞자리6자리" maxlength="6" :disabled="readFlg" :readonly="readFlg" v-if="readConfirm" />\n                            <div class="ivs-pro-dash"></div>\n                            <number-input id="txtSex" :num="param.memSex" v-model="param.memSex" type="tel" class="form-control mp-input1 textLeft" style="margin-bottom:0px;" maxlength="1" :disabled="readFlg" :readonly="readFlg" v-if="readConfirm" />\n                            <div class="dot-postion">\n                                <span class="ivs-dot"></span>\n                                <span class="ivs-dot"></span>\n                                <span class="ivs-dot"></span>\n                                <span class="ivs-dot"></span>\n                                <span class="ivs-dot"></span>\n                                <span class="ivs-dot"></span>\n                            </div>\n                        </div>\n                        <div class="clearfix"></div>\n                        \x3c!-- /// birth_err, sex_err 높이 맞추려면 margin-top 있어야 함 --\x3e\n                        <div id="txtBirth_err" class="inputError" style="margin-top:9px;"></div>\n                        <div id="txtSex_err" class="inputError"></div>\n                        <label class="mypage-rabel colorGray3">통신사</label>\n                        <select id="selCom" v-model="selectCom" class="ivs-select-button ivs-select-arrow" :disabled="readFlg" :readonly="readFlg" v-if="readConfirm">\n                            <option v-for="item in mobileCom" :value="item.id">{{item.text}}</option>\n                        </select>\n                        <div id="selCom_err" class="selectError"></div>\n                    </template>\n                    <div class="mypage-rabel colorGray3 mb5 mt10">전화번호</div>\n                    <div class="displayFlex">\n                        <number-input id="txtTel" :num="certiInfo.memTelNo" v-model="certiInfo.memTelNo" type="tel" class="form-control mp-input1" placeholder="\'-\' 없이 핸드폰 번호를 입력해주세요." maxlength="11" :disabled="status.memCiConfirm == \'Y\' || readFlg" :readonly="readFlg" v-if="readConfirm" />\n                        <a class="mp-requestbtn" v-on:click="sendPhoneAuth" v-if="status.memCiConfirm == \'N\'">{{requestWord}}</a>\n                    </div>\n                    <div class="clearfix"></div>\n                    <div id="txtTel_err" class="inputError"></div>\n\n                    <template v-if="sendAuthNumber">\n                        <div class="mypage-rabel">인증번호 입력</div>\n                        <div class="displayFlex">\n                            <number-input id="txtAuthNo" :num="param1.memAuthNo" v-model="param1.memAuthNo" type="tel" class="form-control mp-input1 mb0" :disabled="!timeOutFlg" :readonly="!timeOutFlg" maxlength="8" />\n                            <div class="mp-requestbtn">{{timeStr}}</div>\n                        </div>\n                        <div class="clearfix"></div>\n                        <span class="crowdy-color-blue font12">통신사의 사정에 따라 문자 수신이 다소 늦어질 수 있습니다.</span>\n                        <div class="mt15 xs-mt15 ivs-vue-cap" id="certiRecaptcha"></div>\n\n                        <div style="margin:10px 0px;">\n                            <label v-for="(item, index) in agree" class="checkbox-inline-1 ivs-check-bottom">\n                                <input type="checkbox" v-model="item.check" />\n                                <span class="label scaleSmall"></span>\n                                <span class="ivs-check-custom">{{item.text}}\n                                <span style="float:right;">\n                                    <a class="blue-800 ivs-check-custom" data-toggle="modal" v-model="modalSelect" v-on:click="modalChange(index)">전문보기</a>\n                                </span>\n                            </label>\n                            <div class="clearfix"></div>\n                        </div>\n                        <auth-modal :agreeIdx="modalSelect" :selectCom="selectCom"></auth-modal>\n                        <div class="mypage-setting-btn" v-on:click="authCheck">인증 확인</div>\n                    </template>\n                    \n                    \x3c!--토큰 지갑 설정--\x3e\n                    \x3c!--\n                        <div class="mt60 xs-mt50 mypage-title">토큰 지갑 설정</div>\n                        <div class="font13 mt5 colorGray3">토큰 크라우드펀딩을 참여하기 위한 지갑 설정입니다.</div>\n\n                        <label for="coinbox" class="mypage-rabel mt15 colorGray3">지갑 주소</label>\n                        <input autocomplete="off" type="text" class="form-control mp-input1" v-model="walletParam.wallet" placeholder="지갑주소를 입력해주세요." />\n\n                        <div class="displayFlex justifyBetween">\n                            <div class="mypage-rabel colorGray3">지갑이 없으신가요?</div>\n                            <a class="mypage-rabel colorGray3 crowdy-color-blue" href="https://coinone.co.kr/th/tokensale" target="_blank">코인원으로 지갑 만들러 가기 &gt</a>\n                        </div>\n                        <div class="displayFlex justifyBetween mt5">\n                            <div class="mypage-rabel colorGray3">지갑을 어떻게 만드나요?</div>\n                            <a class="mypage-rabel colorGray3 crowdy-color-blue" href="https://www.ycrowdy.com/news/detail/67" target="_blank">지갑 만드는법 보기 &gt</a>\n                        </div>\n\n                        <div class="mypage-setting-btn mt20 xs-mt30" v-on:click="saveWallet">지갑 설정 저장</div>\n                    --\x3e\n                    \x3c!--//토큰 지갑 설정 --\x3e\n\n\n                    \x3c!-- 비밀번호 변경 --\x3e\n                    <div class="mt60 xs-mt50 mb20 mypage-title">비밀번호 변경</div>\n                    \n                    <label for="current_password" class="mypage-rabel">현재 비밀번호</label>\n\n                    <input autocomplete="new-password" type="password" class="form-control mp-input1" v-model="request.memPwd" placeholder=""/>\n\n                    <label for="new_password" class="mypage-rabel">새 비밀번호</label>\n                    <input type="password" class="form-control mp-input1" v-model="request.newMemPwd" title="8자 이상의 영문 대소문자, 숫자 특수문자를 사용하세요." placeholder="" />\n                \n                    <label for="new_password2" class="mypage-rabel">비밀번호 확인</label>\n                    <input type="password" class="form-control mp-input1" v-model="request.newMemPwdConfirm" placeholder="" />\n\n                    <div class="mypage-setting-btn mt20 xs-mt30" v-on:click="changePassword()">비밀번호 변경</div>\n                    \x3c!-- //비밀번호 변경 --\x3e\n\n                    \x3c!-- 회원탈퇴 --\x3e\n                    <div class="mt60 xs-mt45 mypage-title">회원탈퇴</div>\n                    <div class="mypage-desc mt15">\n                        \x3c!-- 회원탈퇴시 관련정보는 모두 5년간 분리보관되며, 5년후 영구적으로 삭제됩니다. --\x3e\n                        회원탈퇴 시 관련 정보는 개인정보보호 관련 약관에 의거하여 처리됩니다.\n                    </div>\n                    <div class="font15 colorRed1 mt20">유의사항</div>  \n                            \n                    <ul class="con-icon con-icon-small">\n                        <li>현재 프로젝트를 진행 중이거나, 프로젝트를 등록하여 진행한 이력이 있는 회원님은 리워드 프로젝트 종료 후 1년 그리고 투자 프로젝트 종료 후 3년 이내에는 회원 탈퇴가 불가합니다.</li>\n                        <li>현재 프로젝트를 펀딩 중인 회원의 경우도 펀딩 종료 후 1개월 이내에는 회원을 탈퇴할 수 없습니다.</li>\n                    </ul>\n                     \n                     <div class="mypage-setting-btn mt20 xs-mt30 gray-btn" v-on:click="confirmLeaveCrowdy">회원탈퇴 하기</div>   \n                    \x3c!-- //회원탈퇴 --\x3e\n\n                    <form name="form_chk" method="post">\n                        <input type="hidden" name="m" value="checkplusSerivce">                     \x3c!-- 필수 데이타로, 누락하시면 안됩니다. --\x3e\n                        <input type="hidden" name="EncodeData" id="encodeData" value="">     \x3c!-- 위에서 업체정보를 암호화 한 데이타입니다. --\x3e\n\n                        <input type="hidden" name="param_r1" value="accountSetting.authResult">\n                        <input type="hidden" name="param_r2" value="">\n                        <input type="hidden" name="param_r3" value="">\n                    </form>\n                </div>\n                \x3c!-- //기본정보--\x3e\n\n                <div id="leave-confirm-modal" class="modal fade" tabindex="-1" role="dialog" style="z-index: 9999;" data-backdrop="static" data-keyboard="false">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                크라우디를 탈퇴하시겠습니까?\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="pointerCursor" data-dismiss="modal">취소</a>\n                                    <a class="ml30 modalBlueBtn" v-on:click="leaveCrowdy">확인</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ',
                        props: ["naverOauth", "certiInfo", "status"],
                        data: function() {
                            return {
                                dataConfirm: !1,
                                oauthConfirm: !1,
                                mobileCom: [{
                                    id: "",
                                    text: "통신사를 선택하세요."
                                }, {
                                    id: 1,
                                    text: "SKT"
                                }, {
                                    id: 2,
                                    text: "KT"
                                }, {
                                    id: 3,
                                    text: "LG U+"
                                }, {
                                    id: 5,
                                    text: "알뜰폰SKT"
                                }, {
                                    id: 6,
                                    text: "알뜰폰KT"
                                }, {
                                    id: 7,
                                    text: "알뜰폰LG"
                                }],
                                selectCom: "",
                                agree: [],
                                request: {
                                    bizNum: "",
                                    memCode: userInfo.memCode,
                                    memType: userInfo.type,
                                    memName: userInfo.name,
                                    memEmail: userInfo.email,
                                    memPwd: "",
                                    newMemPwd: "",
                                    newMemPwdConfirm: "",
                                    memSpsAddr1: "",
                                    memSpsAddr2: "",
                                    memSpsPostNum: "",
                                    resName: "",
                                    memShotImg: userInfo.image,
                                    memShotImgFile: {},
                                    mobileNo: "",
                                    authChange: !1,
                                    marketingAgree: "N",
                                    memNameConfirm: "N"
                                },
                                param: {
                                    memCode: userInfo.memCode,
                                    memName: "",
                                    memTelNo: "",
                                    memSex: "",
                                    memBirth: "",
                                    memTelCompany: "",
                                    memNameType: "1"
                                },
                                param1: {
                                    memCode: userInfo.memCode,
                                    memTelNo: "",
                                    memAuthNo: "",
                                    recaptchaToken: ""
                                },
                                sendAuthNumber: !1,
                                address: {
                                    postNum: "",
                                    address1: ""
                                },
                                checkMarketingAgree: !1,
                                snsOauth: {
                                    naver: !1,
                                    facebook: !1,
                                    kakao: !1,
                                    naverIdx: "",
                                    kakaoIdx: "",
                                    facebookIdx: "",
                                    naverSnsId: "",
                                    kakaoSnsId: "",
                                    facebookSnsId: ""
                                },
                                snsOauthRequest: {
                                    memCode: userInfo.memCode,
                                    memSnsIdx: "",
                                    snsId: "",
                                    snsType: ""
                                },
                                snsInfo: {},
                                os: "",
                                timerStart: !1,
                                isCntdownRestart: !1,
                                timer: {},
                                requestWord: "인증요청",
                                modalSelect: 0,
                                sitekey: "6LdbvpkUAAAAABuHxlZkN_IJTEPYeG5CrRjq371_",
                                wigetId: "",
                                readConfirm: !0,
                                readFlg: !1,
                                timeStr: "5:00",
                                timeOutFlg: !1,
                                errId: ["txtName", "txtBirth", "txtSex", "selCom", "txtTel"],
                                maxMin: 4,
                                maxSec: 59
                            }
                        },
                        created: function() {
                            $(document).ready(function() {
                                $(".switch-hb").bootstrapSwitch()
                            }), this.dataClear(1), this.load(), this.getSnsInfo(), this.getSnsList(), this.naverOauth && this.checkNaverOauth(), window.accountSetting = this, this.deviceCheck()
                        },
                        watch: {
                            selectCom: function() {
                                1 == this.selectCom || 5 == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : 2 == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : 3 == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : 6 == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }, {
                                    text: "[KT 알뜰폰] 개인정보 제3자 제공 동의",
                                    check: !1
                                }] : 7 == this.selectCom && (this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+ 알뜰폰] 개인정보 제3자 제공 동의",
                                    check: !1
                                }])
                            }
                        },
                        computed: {
                            postNum: function() {
                                return this.request.memSpsPostNum = this.address.postNum, this.address.postNum
                            },
                            address1: function() {
                                return this.request.memSpsAddr1 = this.address.address1, this.address.address1
                            },
                            userName: function() {
                                return userInfo.name
                            },
                            userEmail: function() {
                                return userInfo.email
                            },
                            userImage: function() {
                                return userInfo.image
                            }
                        },
                        methods: {
                            dataClear: function(e) {
                                this.readConfirm = !1, 1 == e ? (this.readFlg = !1, this.selectCom = "", this.sendAuthNumber = !1, this.timeOutFlg = !1, this.requestWord = "인증요청", this.param1 = _.clone({
                                    memCode: userInfo.memCode,
                                    memTelNo: "",
                                    memAuthNo: "",
                                    recaptchaToken: ""
                                }), $("#txtName").focus()) : (2 == e ? (this.param1.memTelNo = "", this.param1.recaptchaToken = "") : this.param1 = _.clone({
                                    memCode: userInfo.memCode,
                                    memTelNo: "",
                                    memAuthNo: "",
                                    recaptchaToken: ""
                                }), grecaptcha.reset(this.wigetId)), this.readConfirm = !0
                            },
                            load: function() {
                                var e = this;
                                axios.post("/data/member/info", this.request).then(function(t) {
                                    e.request.bizNum = t.data.rData.bizNum, e.request.mobileNo = t.data.rData.mobileNo, e.request.memSpsAddr1 = t.data.rData.memSpsAddr1, e.request.memSpsAddr2 = t.data.rData.memSpsAddr2, e.request.memSpsPostNum = t.data.rData.memSpsPostNum, e.request.marketingAgree = t.data.rData.marketingAgree, e.request.memNameConfirm = t.data.rData.memNameConfirm, e.request.resName = t.data.rData.resName, e.address.postNum = t.data.rData.memSpsPostNum, e.address.address1 = t.data.rData.memSpsAddr1, "Y" == e.request.marketingAgree ? e.checkMarketingAgree = !0 : e.checkMarketingAgree = !1, "Y" == e.request.memNameConfirm ? e.isMobileAuth = !0 : e.isMobileAuth = !1, e.dataConfirm = !e.dataConfirm
                                })
                            },
                            kakaoLink: function() {
                                this.changeSnsOauth("kakao")
                            },
                            facebookLink: function() {
                                this.changeSnsOauth("facebook")
                            },
                            naverLink: function() {
                                this.changeSnsOauth("naver")
                            },
                            getSnsInfo: function() {
                                var e = this;
                                axios.post("/member/getSnsInfo", this.request).then(function(t) {
                                    "0000" == t.data.rCode ? e.snsInfo = t.data.rData : e.error = t.data.rMsg
                                })
                            },
                            resetSnsList: function() {
                                this.snsOauth = {
                                    naver: !1,
                                    kakao: !1,
                                    facebook: !1,
                                    naverIdx: "",
                                    kakaoIdx: "",
                                    facebookIdx: "",
                                    naverSnsId: "",
                                    kakaoSnsId: "",
                                    facebookSnsId: ""
                                }
                            },
                            getSnsList: function() {
                                var e = this;
                                this.resetSnsList(), axios.post("/data/member/sns-info", this.request).then(function(t) {
                                    var n = t.data;
                                    if ("0000" == n.rCode) {
                                        if (n.rData.count > 0)
                                            for (var a = n.rData.list, i = 0; i < n.rData.count; i++) "1" == a[i].snsType ? (e.snsOauth.facebook = !0, e.snsOauth.facebookIdx = a[i].memSnsIdx, e.snsOauth.facebookSnsId = a[i].snsId) : "3" == a[i].snsType ? (e.snsOauth.kakao = !0, e.snsOauth.kakaoIdx = a[i].memSnsIdx, e.snsOauth.kakaoSnsId = a[i].snsId) : "5" == a[i].snsType && (e.snsOauth.naver = !0, e.snsOauth.naverIdx = a[i].memSnsIdx, e.snsOauth.naverSnsId = a[i].snsId);
                                        e.oauthConfirm = !0
                                    } else noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            changeSnsOauth: function(e) {
                                var t = this;
                                if ("facebook" == e)
                                    if ("" == this.snsOauth.facebookIdx) {
                                        FB.login(function(e) {
                                            var n = e && e.status;
                                            "connected" === n ? t.getFacebookUserInfo(e) : "not_authorized" === n ? noti.open("페이스북 연동을 취소하셨거나 실패하였습니다.") : noti.open("페이스북 연동을 실패하였습니다.")
                                        }, {
                                            scope: "email, public_profile"
                                        })
                                    } else this.snsOauthRequest.snsId = this.snsOauth.facebookSnsId, this.snsOauthRequest.snsType = "5", this.snsOauthRequest.memSnsIdx = this.snsOauth.facebookIdx, this.updateSnsOauth();
                                else if ("naver" == e)
                                    if ("" == this.snsOauth.naverIdx) {
                                        var n = naverLogin.getUniqState();
                                        naverLogin.setDomain(t.snsInfo.naverAppDomain), naverLogin.setState(n), naverLogin.redirect_uri = "https://www.ycrowdy.com/mypage/main", window.open(naverLogin.getNaverIdLoginLink(), "_self")
                                    } else this.snsOauthRequest.snsId = this.snsOauth.naverSnsId, this.snsOauthRequest.snsType = "1", this.snsOauthRequest.memSnsIdx = this.snsOauth.naverIdx, this.updateSnsOauth();
                                else Kakao.Auth.login({
                                    success: function(e) {
                                        Kakao.API.request({
                                            url: "/v2/user/me",
                                            success: function(e) {
                                                t.snsOauthRequest.snsId = e.id, t.snsOauthRequest.snsType = "3", t.snsOauthRequest.memSnsIdx = t.snsOauth.kakaoIdx, t.updateSnsOauth()
                                            }
                                        })
                                    },
                                    fail: function(e) {
                                        noti.open("카카오 로그인에 실패하였습니다.")
                                    }
                                })
                            },
                            getFacebookUserInfo: function(e) {
                                var t = this;
                                FB.api("/me", {
                                    fields: "name, email, picture"
                                }, function(e) {
                                    t.snsOauthRequest.snsId = e.id, t.snsOauthRequest.snsType = "1", t.snsOauthRequest.memSnsIdx = "", t.checkSnsExist()
                                })
                            },
                            checkSnsExist: function() {
                                var e = this;
                                axios.post("/data/member/sns-check", this.snsOauthRequest).then(function(t) {
                                    if ("0000" != t.data.rCode) return noti.open("시스템 문제가 발생하였습니다. <br/> 다시 시도해주세요."), void e.getSnsList();
                                    var n = t.data.rData.memCode;
                                    if ("" == n || null == n) e.updateSnsOauth();
                                    else if (n == e.memCode) e.updateSnsOauth();
                                    else if (n != e.memCode) return noti.open("이미 다른 계정에 연동되어 있습니다. 이 계정으로 연동을 바꾸시겠어요?", e.updateSnsOauth, !0), void("1" == e.snsOauthRequest.snsType ? e.snsOauth.naver = !e.snsOauth.naver : e.snsOauth.facebook = !e.snsOauth.facebook)
                                })
                            },
                            updateSnsOauth: function() {
                                var e = this;
                                $(".page-loader-more").fadeIn(""), axios.post("/data/member/sns-update", this.snsOauthRequest).then(function(t) {
                                    return $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (noti.open("계정 연동이 변경처리되었습니다. "), void e.getSnsList()) : (noti.open("시스템 문제가 발생하였습니다. <br/> 다시 시도해주세요."), void e.getSnsList())
                                })
                            },
                            checkNaverOauth: function() {
                                var e = this;
                                window.loginInfo = e, naverLogin.get_naver_userprofile("loginInfo.naverSignInCallback()")
                            },
                            naverSignInCallback: function() {
                                var e = this;
                                e.snsOauthRequest.snsId = naverLogin.getProfileData("id"), e.snsOauthRequest.memSnsIdx = "", e.snsOauthRequest.snsType = "5", e.checkSnsExist()
                            },
                            postOpen: function() {
                                post.open(this)
                            },
                            errClear: function() {
                                for (var e = 0; e < this.errId.length; e++) "txt" == this.errId[e].substring(0, 3) && $("#" + this.errId[e]).removeClass("error"), $("#" + this.errId[e] + "_err").html("")
                            },
                            sendPhoneAuth: function() {
                                var e = this;
                                this.errClear();
                                var t = "",
                                    n = "";
                                if ("" == this.certiInfo.memTelNo && (t = "휴대폰 번호를 입력해주세요.", n = this.errId[4]), "" == this.selectCom && (t = "통신사를 선택해주세요.", n = this.errId[3]), "" == this.param.memSex && (t = "주민번호 뒷자리를 입력해주세요.", n = this.errId[2]), "" == this.param.memBirth && (t = "주민번호 앞자리를 입력해주세요.", n = this.errId[1]), "" == this.certiInfo.memName && (t = "이름을 입력해주세요.", n = this.errId[0]), "" != t) return "sel" == n.substring(0, 3) ? void $("#" + n + "_err").html(t) : ($("#" + n).addClass("error"), $("#" + n + "_err").html(t), void $("#" + n).focus());
                                $(".page-loader-more").fadeIn(""), this.readConfirm = !1, e.param.memTelCompany = e.selectCom, e.param.memTelNo = e.certiInfo.memTelNo, e.param.memName = e.certiInfo.memName, axios.post("/data/member/certi-call", this.param).then(function(t) {
                                    var n = t.data;
                                    e.readConfirm = !0, $(".page-loader-more").fadeOut(""), "0000" == n.rCode ? (e.requestWord = "재요청", e.readFlg = !0, e.sendAuthNumber = !0, e.timeOutFlg = !1, e.timerStart = !0, e.$nextTick(function() {
                                        e.setReCaptcha()
                                    }), e.setCountdown(!1)) : noti.open(n.rMsg)
                                })
                            },
                            setCountdown: function(e) {
                                var t = this;
                                clearTimeout(this.timer);
                                var n, a, i;
                                this.timer = setInterval(function() {
                                    if (e || (t.timeStr = "5:00", t.timeOutFlg = !0, t.timerStart = !1, e = !0, n = +new Date + 1e3 * (60 * t.maxMin + t.maxSec) + 500), (a = n - +new Date) < 1e3) return t.dataConfirm = !1, clearTimeout(t.timer), t.timeOutFlg = !1, t.readFlg = !0, t.dataConfirm = !0, t.param1.memAuthNo = "", t.timeStr = "00:00", void noti.open("인증 번호 입력 시간이 만료되었습니다.<br />다시 인증번호를 요청하세요.");
                                    i = new Date(a), t.timeStr = t.twoDigits(i.getUTCMinutes()) + ":" + t.twoDigits(i.getUTCSeconds())
                                }, 1e3)
                            },
                            twoDigits: function(e) {
                                return e <= 9 ? "0" + e : e
                            },
                            setReCaptcha: function() {
                                var e = this;
                                this.wigetId = grecaptcha.render(document.getElementById("certiRecaptcha"), {
                                    sitekey: e.sitekey
                                })
                            },
                            authCheck: function() {
                                var e = this;
                                if (!this.sendAuthNumber) return void noti.open("본인인증을 완료해주세요.");
                                if ("" == this.param1.memAuthNo) return void noti.open("인증번호를 입력해주세요.");
                                for (var t = 0; t < this.agree.length; t++)
                                    if (!this.agree[t].check) return void noti.open(this.agree[t].text + "는 필수입니다.");
                                this.param1.memTelNo = this.param.memTelNo, this.param1.recaptchaToken = grecaptcha.getResponse(this.wigetId), $(".page-loader-more").fadeIn(""), axios.post("/data/member/certi-check", this.param1).then(function(t) {
                                    var n = t.data;
                                    "0000" == n.rCode ? (clearTimeout(e.timer), $(".page-loader-more").fadeOut(""), e.$emit("set-ci-confirm-flag", !0), e.sendAuthNumber = !1) : ($(".page-loader-more").fadeOut(""), noti.open(n.rMsg), "2203" == n.rCode ? e.dataClear(2) : e.dataClear(3))
                                })
                            },
                            modalChange: function(e) {
                                this.modalSelect = e, $("#authModal").modal("show")
                            },
                            changeAccountInfo: function(e) {
                                var t = this;
                                $(".page-loader-more").fadeIn(""), axios.post("/member/update", this.request).then(function(n) {
                                    $(".page-loader-more").fadeOut(""), "0000" == n.data.rCode ? (userInfo.updateInfo(n.data.rData), t.request.memName = userInfo.name, t.request.memShotImg = userInfo.image, 0 == e ? noti.open("저장되었습니다.") : 1 == e && noti.open("본인인증이 완료되었습니다.")) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            changePassword: function() {
                                var e = this;
                                if (!/^.*(?=.{8,20})(?=.*[0-9])(?=.*[a-zA-Z]).*$/.test(e.request.newMemPwd)) return noti.open("숫자와 영문자 조합으로 8자리 이상을 사용해야 합니다."), !1;
                                e.request.newMemPwd == e.request.newMemPwdConfirm ? ($(".page-loader-more").fadeIn(""), axios.post("/data/member/password-update", this.request).then(function(t) {
                                    $(".page-loader-more").fadeOut("");
                                    var n = t.data;
                                    e.request.memPwd = "", e.request.newMemPwd = "", e.request.newMemPwdConfirm = "", "0000" == n.rCode ? noti.open("변경되었습니다.") : "2001" == n.rCode ? noti.open("현재 비밀번호를 잘못 입력하셨습니다.") : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })) : noti.open("새 비밀번호와 비밀번호 확인이 일치하지 않습니다.")
                            },
                            deviceCheck: function() {
                                isMobile.apple.device ? this.os = "M" : isMobile.android.device ? this.os = "M" : this.os = "W"
                            },
                            checkTerms: function() {
                                "Y" == this.request.marketingAgree ? this.request.marketingAgree = "N" : this.request.marketingAgree = "Y"
                            },
                            confirmLeaveCrowdy: function() {
                                $("#leave-confirm-modal").modal("show")
                            },
                            leaveCrowdy: function() {
                                $("#leave-confirm-modal").modal("hide"), axios.post("/data/member/leave", this.request).then(function(e) {
                                    "0000" == e.data.rCode ? noti.open("회원탈퇴가 정상적으로 처리되었습니다.", function() {
                                        window.open("/logout", "_self")
                                    }) : noti.open(e.data.rMsg)
                                })
                            },
                            removeImg: function() {
                                this.request.memShotImg = ""
                            }
                        },
                        components: {
                            dropifyInput: n(2).default.component(),
                            authModal: n(3).default.component(),
                            numberInput: n(0).default.component()
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t, n) {
        return t in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e
    }

    function i(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        o = function() {
            function e() {
                i(this, e)
            }
            return s(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div class="mt60 xs-mt30 mb80 mypage-myaccount-layout">\n                \x3c!-- 사진영역--\x3e\n                <div class="dropify-wrapper-80 mypage-myaccount-photo">\n                    <dropify-input accept="image/*" v-model="request.memShotImgFile" default-message="" :default-img="userImage"></dropify-input>\n                </div>\n\n                <div class="mypage-form xs-mt30">\n                    <div class="mb20 mypage-title">기본정보 설정</div>\n\n                    \x3c!-- 법인명 or 조합명 --\x3e\n                    <label for="companyName" class="mypage-rabel">{{userTypeLabel}}</label>\n                    <input v-if="userType == 2" type="text" class="form-control mp-input1" id="companyName" maxlength="20" v-model.trim="request.memName" title="법인명을 입력하세요." placeholder="법인명 입력" readonly="readonly"/>\n                    <input v-if="userType == 3" type="text" class="form-control mp-input1" id="companyName" maxlength="20" v-model.trim="request.memName" title="조합명을 입력하세요." placeholder="조합명 입력" readonly="readonly"/>\n                    \x3c!-- //법인명 or 조합명 --\x3e\n\n                    \x3c!-- 사업자등록번호 or 조합고유번호--\x3e\n                    <label for="companyNumber" class="mypage-rabel">{{userTypeNumberLabel}}</label>\n                    <input v-if="userType == 2" v-model="request.bizNum" type="text" class="form-control mp-input1" id="companyNumber" maxlength="10" title="사업자 등록번호를 입력해 주세요." placeholder="" value="301" readonly="readonly" />\n                    <input v-if="userType == 3" v-model="request.bizNum" type="text" class="form-control mp-input1" id="companyNumber" maxlength="10" title="조합 고유번호를 입력해 주세요." placeholder="" value="301" readonly="readonly" />\n                    \x3c!-- //사업자등록번호 or 조합고유번호 --\x3e\n\n                  \n                    \x3c!-- 이메일 --\x3e\n                    <label for="member_email" class="mypage-rabel">이메일</label>\n                    <input type="email" v-model="request.memEmail" class="form-control mp-input1" id="member_email" maxlength="100" title="이메일 양식을 확인 바랍니다." placeholder="" readonly="readonly"/>\n                    \x3c!-- //이메일 --\x3e\n\n                    \x3c!-- 전화번호 --\x3e\n                    <label for="member_mobile" class="mypage-rabel">전화번호</label>\n                    <input type="tel" class="form-control mp-input1" v-model="request.mobileNo" placeholder="" disabled/>\n                    \x3c!-- //전화번호 --\x3e\n\n                    \x3c!-- 우편번호 --\x3e\n                    <label for="zip_code" class="mypage-rabel">우편번호</label>\n                    <div class="common-flex-end">\n                        <input type="tel" class="form-control mp-input1 mypage-zip-layout1" v-on:click="postOpen" v-model="postNum" name="zip_code" id="zip_code" placeholder="" readonly="readonly"/>\n                        <div class="mypage-btn-search" v-on:click="postOpen"></div>\n                    </div>\n                    \x3c!-- //우편번호 --\x3e\n\n                    \x3c!-- 주소 --\x3e\n                    <label for="address1" class="mypage-rabel">주소</label>\n                    <input type="text" class="form-control mp-input1" v-on:click="postOpen" v-model="address1" name="address1" id="address1" placeholder="주소를 검색해주세요." readonly="readonly" />\n                    <input type="text" class="form-control mp-input1" v-model="request.memSpsAddr2" name="address2" id="address2" placeholder="상세 주소를 입력해주세요." />\n\n                    <label class="chk_container">크라우디의 소식과 다양한 안내를 받겠습니다.\n                        <input type="checkbox" v-model="checkMarketingAgree" v-on:click="checkTerms">\n                        <span class="checkmark"></span>\n                    </label>\n                    \x3c!-- //주소 --\x3e\n\n                    <div class="mypage-setting-btn mt20" v-on:click="changeAccountInfo(0)">설정 저장</div>\n\n\n                    <div class="mt60 xs-mt50 mb20 mypage-title">본인인증</div>\n                    <div class="blue-800 mypage-margin-layout" v-if="status.memCiConfirm == \'Y\'">본인인증이 완료되었습니다.</div>\n\n                    \n                    <label class="mypage-rabel colorGray3">담당자명</label>\n                    <input id="txtName" v-model.trim="certiInfo.memName" type="text" class="form-control mp-input1" style="margin-bottom:10px;" placeholder="이름을 입력" :disabled="status.memCiConfirm == \'Y\' || readFlg" :readonly="readFlg" v-if="readConfirm" />\n                    <div id="txtName_err" class="inputError"></div>\n\n                    <template v-if="status.memCiConfirm == \'N\'">\n                        <div class="mypage-rabel colorGray3 mb5">주민등록번호</div>\n                        <div class="common-flex-between mypage-jumin">\n                            <number-input id="txtBirth" :num="param.memBirth" v-model="param.memBirth" type="tel" class="form-control mp-input1" style="margin-bottom:0px;" placeholder="앞자리6자리" maxlength="6" :disabled="readFlg" :readonly="readFlg" v-if="readConfirm" />\n                            <div class="ivs-pro-dash"></div>\n                            <number-input id="txtSex" :num="param.memSex" v-model="param.memSex" type="tel" class="form-control mp-input1 textLeft" style="margin-bottom:0px;" maxlength="1" :disabled="readFlg" :readonly="readFlg" v-if="readConfirm" />\n                            <div class="dot-postion">\n                                <span class="ivs-dot"></span>\n                                <span class="ivs-dot"></span>\n                                <span class="ivs-dot"></span>\n                                <span class="ivs-dot"></span>\n                                <span class="ivs-dot"></span>\n                                <span class="ivs-dot"></span>\n                            </div>\n                        </div>\n                        <div class="clearfix"></div>\n                        \x3c!-- /// birth_err, sex_err 높이 맞추려면 margin-top 있어야 함 --\x3e\n                        <div id="txtBirth_err" class="inputError" style="margin-top:9px;"></div>\n                        <div id="txtSex_err" class="inputError"></div>\n                        <label class="mypage-rabel colorGray3">통신사</label>\n                        <select id="selCom" v-model="selectCom" class="ivs-select-button ivs-select-arrow" :disabled="readFlg" :readonly="readFlg" v-if="readConfirm">\n                            <option v-for="item in mobileCom" :value="item.id">{{item.text}}</option>\n                        </select>\n                        <div id="selCom_err" class="selectError"></div>\n                    </template>\n\n                    <div class="mypage-rabel colorGray3 mb5 mt10">전화번호</div>\n                    <div class="displayFlex">\n                        <number-input id="txtTel" :num="certiInfo.memTelNo" v-model="certiInfo.memTelNo" type="tel" class="form-control mp-input1" placeholder="\'-\' 없이 핸드폰 번호를 입력해주세요." maxlength="11" :disabled="status.memCiConfirm == \'Y\' || readFlg" :readonly="readFlg" v-if="readConfirm" />\n                        <a class="mp-requestbtn" v-on:click="sendPhoneAuth" v-if="status.memCiConfirm == \'N\'">{{requestWord}}</a>\n                    </div>\n                    <div class="clearfix"></div>\n                    <div id="txtTel_err" class="inputError"></div>\n\n                    <template v-if="sendAuthNumber">\n                        <div class="mypage-rabel">인증번호 입력</div>\n                        <div class="displayFlex">\n                            <number-input id="txtAuthNo" :num="param1.memAuthNo" v-model="param1.memAuthNo" type="tel" class="form-control mp-input1 mb0" :disabled="!timeOutFlg" :readonly="!timeOutFlg" maxlength="8" />\n                            <div class="mp-requestbtn">{{timeStr}}</div>\n                        </div>\n                        <div class="clearfix"></div>\n                        <span class="crowdy-color-blue font12">통신사의 사정에 따라 문자 수신이 다소 늦어질 수 있습니다.</span>\n                        <div class="mt15 xs-mt15 ivs-vue-cap" id="certiRecaptcha"></div>\n\n                        <div style="margin:10px 0px;">\n                            <label v-for="(item, index) in agree" class="checkbox-inline-1 ivs-check-bottom">\n                                <input type="checkbox" v-model="item.check" />\n                                <span class="label scaleSmall"></span>\n                                <span class="ivs-check-custom">{{item.text}}\n                                <span style="float:right;">\n                                    <a class="blue-800 ivs-check-custom" data-toggle="modal" v-model="modalSelect" v-on:click="modalChange(index)">전문보기</a>\n                                </span>\n                            </label>\n                            <div class="clearfix"></div>\n                        </div>\n                        <auth-modal :agreeIdx="modalSelect" :selectCom="selectCom"></auth-modal>\n                        <div class="mypage-setting-btn" v-on:click="authCheck">인증 확인</div>\n                    </template>\n\n                    \x3c!--토큰 지갑 설정 --\x3e\n                    \x3c!-- <div class="mt60 xs-mt50 mypage-title">토큰 지갑 설정</div>\n                    <div class="font13 mt5 colorGray3">토큰 크라우드펀딩을 참여하기 위한 지갑 설정입니다.</div>\n\n                    <label for="coinbox" class="mypage-rabel mt15 colorGray3">지갑 주소</label>\n                    <input autocomplete="off" type="text" class="form-control mp-input1" v-model="walletParam.wallet" placeholder="지갑주소를 입력해주세요." />\n\n                    <div class="displayFlex justifyBetween">\n                        <div class="mypage-rabel colorGray3">지갑이 없으신가요?</div>\n                        <a class="mypage-rabel colorGray3 crowdy-color-blue" href="https://coinone.co.kr/th/tokensale" target="_blank">코인원으로 지갑 만들러 가기 &gt</a>\n                    </div>\n                    <div class="displayFlex justifyBetween mt5">\n                        <div class="mypage-rabel colorGray3">지갑을 어떻게 만드나요?</div>\n                        <a class="mypage-rabel colorGray3 crowdy-color-blue" href="https://www.ycrowdy.com/news/detail/67" target="_blank">지갑 만드는법 보기 &gt</a>\n                    </div>\n\n                    <div class="mypage-setting-btn mt20 xs-mt30" v-on:click="saveWallet">지갑 설정 저장</div> --\x3e\n                    \x3c!--//토큰 지갑 설정 --\x3e\n\n\n                    \x3c!-- 비밀번호 변경 --\x3e\n                    <div class="mt60 mb20 mypage-title">비밀번호 변경</div>\n                \n                    <label for="current_password" class="mypage-rabel">현재 비밀번호</label>\n                    <input autocomplete="new-password" type="password" class="form-control mp-input1" v-model="request.memPwd" placeholder="" />\n                \n                    <label for="new_password" class="mypage-rabel">새 비밀번호</label>\n                    <input type="password" class="form-control mp-input1" v-model="request.newMemPwd" title="8자 이상의 영문 대소문자,  숫자 특수문자를 사용하세요." placeholder="" />\n                \n                    <label for="new_password2" class="mypage-rabel">비밀번호 확인</label>\n                    <input type="password" class="form-control mp-input1" v-model="request.newMemPwdConfirm" placeholder="" />\n               \n                    <div class="mypage-setting-btn mt20" v-on:click="changePassword()">비밀번호 변경</div>\n                    \x3c!-- //비밀번호 변경 --\x3e\n\n                    \n                    \x3c!-- 회원탈퇴 --\x3e\n                    <div class="mt60 mypage-title">회원탈퇴</div>\n                    <div class="mypage-desc mt15">\n                        회원탈퇴시 관련정보는 모두 5년간 분리보관되며, 5년후 영구적으로 삭제됩니다.\n                    </div>\n                    <div class="font15 colorRed1 mt15">유의사항</div>  \n                            \n                    <ul class="con-icon con-icon-small">\n                        <li>현재 프로젝트를 진행 중이거나, 프로젝트를 등록하여 진행한 이력이 있는 회원님은 리워드 프로젝트 종료 후 1년 그리고 투자 프로젝트 종료 후 3년 이내에는 회원 탈퇴가 불가합니다.</li>\n                        <li>현재 프로젝트를 펀딩 중인 회원의 경우도 펀딩 종료 후 1개월 이내에는 회원을 탈퇴할 수 없습니다.</li>\n                    </ul>\n                     \n\n                     <div class="mypage-setting-btn gray-btn mt20" v-on:click="confirmLeaveCrowdy">회원탈퇴 하기</div>   \n                        \x3c!-- //회원탈퇴 --\x3e\n                   \n                    <form name="form_chk" method="post">\n                        <input type="hidden" name="m" value="checkplusSerivce">                     \x3c!-- 필수 데이타로, 누락하시면 안됩니다. --\x3e\n                        <input type="hidden" name="EncodeData" id="encodeData" value="">     \x3c!-- 위에서 업체정보를 암호화 한 데이타입니다. --\x3e\n\n                        <input type="hidden" name="param_r1" value="accountSetting.authResult">\n                        <input type="hidden" name="param_r2" value="">\n                        <input type="hidden" name="param_r3" value="">\n                    </form>\n                </div>\n\n                <div id="leave-confirm-modal" class="modal fade" tabindex="-1" role="dialog" style="z-index: 9999;" data-backdrop="static" data-keyboard="false">\n                    <div class="modal-dialog modal-sm" role="document">\n                        <div class="modal-content">\n                            <div class="modal-body modal-order">\n                                크라우디를 탈퇴하시겠습니까?\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                    <a class="pointerCursor" data-dismiss="modal">취소</a>\n                                    <a class="ml30 modalBlueBtn" v-on:click="leaveCrowdy">확인</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ',
                        props: ["certiInfo", "status"],
                        data: function() {
                            var e;
                            return e = {
                                mobileCom: [{
                                    id: "",
                                    text: "통신사를 선택하세요."
                                }, {
                                    id: 1,
                                    text: "SKT"
                                }, {
                                    id: 2,
                                    text: "KT"
                                }, {
                                    id: 3,
                                    text: "LG U+"
                                }, {
                                    id: 5,
                                    text: "알뜰폰SKT"
                                }, {
                                    id: 6,
                                    text: "알뜰폰KT"
                                }, {
                                    id: 7,
                                    text: "알뜰폰LG"
                                }],
                                selectCom: "",
                                agree: [],
                                dataConfirm: !1,
                                request: {
                                    bizNum: "",
                                    memCode: userInfo.memCode,
                                    memType: userInfo.type,
                                    memName: userInfo.name,
                                    memEmail: userInfo.email,
                                    memPwd: "",
                                    newMemPwd: "",
                                    newMemPwdConfirm: "",
                                    memSpsAddr1: "",
                                    memSpsAddr2: "",
                                    memSpsPostNum: "",
                                    resName: "",
                                    memShotImg: userInfo.image,
                                    memShotImgFile: {},
                                    mobileNo: "",
                                    authChange: !1,
                                    marketingAgree: "N",
                                    memNameConfirm: "N"
                                },
                                address: {
                                    postNum: "",
                                    address1: ""
                                },
                                checkMarketingAgree: !1,
                                sendAuthNumber: !1,
                                param: {
                                    memCode: userInfo.memCode,
                                    memName: "",
                                    memTelNo: "",
                                    memSex: "",
                                    memBirth: "",
                                    memTelCompany: "",
                                    memNameType: "1"
                                },
                                param1: {
                                    memCode: userInfo.memCode,
                                    memTelNo: "",
                                    memAuthNo: "",
                                    recaptchaToken: ""
                                },
                                modalSelect: 0,
                                timer: {},
                                requestWord: "인증요청"
                            }, a(e, "modalSelect", 0), a(e, "sitekey", "6LdbvpkUAAAAABuHxlZkN_IJTEPYeG5CrRjq371_"), a(e, "wigetId", ""), a(e, "readConfirm", !0), a(e, "readFlg", !1), a(e, "timeStr", "5:00"), a(e, "timeOutFlg", !1), a(e, "errId", ["txtName", "txtBirth", "txtSex", "selCom", "txtTel"]), a(e, "maxMin", 4), a(e, "maxSec", 59), e
                        },
                        created: function() {
                            this.dataClear(1), this.load(), window.accountSetting = this
                        },
                        mounted: function() {
                            $(".switch-hb").bootstrapSwitch()
                        },
                        watch: {
                            selectCom: function() {
                                1 == this.selectCom || 5 == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[SK텔레콤, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : 2 == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : 3 == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }] : 6 == this.selectCom ? this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[KT, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }, {
                                    text: "[KT 알뜰폰] 개인정보 제3자 제공 동의",
                                    check: !1
                                }] : 7 == this.selectCom && (this.agree = [{
                                    text: "[NICE평가정보] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+] 본인확인서비스 이용약관 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 개인정보 이용동의",
                                    check: !1
                                }, {
                                    text: "[LGU+, NICE평가정보] 고유식별정보 처리 동의",
                                    check: !1
                                }, {
                                    text: "[LGU+ 알뜰폰] 개인정보 제3자 제공 동의",
                                    check: !1
                                }])
                            }
                        },
                        computed: {
                            userType: function() {
                                return userInfo.type
                            },
                            userTypeLabel: function() {
                                return 2 == userInfo.type ? "법인명" : 3 == userInfo.type ? "조합명" : void 0
                            },
                            userTypeNumberLabel: function() {
                                return 2 == userInfo.type ? "사업자등록번호" : 3 == userInfo.type ? "조합고유번호" : void 0
                            },
                            postNum: function() {
                                return this.request.memSpsPostNum = this.address.postNum, this.address.postNum
                            },
                            address1: function() {
                                return this.request.memSpsAddr1 = this.address.address1, this.address.address1
                            },
                            userName: function() {
                                return userInfo.name
                            },
                            userEmail: function() {
                                return userInfo.email
                            },
                            userImage: function() {
                                return userInfo.image
                            }
                        },
                        methods: {
                            dataClear: function(e) {
                                this.readConfirm = !1, 1 == e ? (this.readFlg = !1, this.selectCom = "", this.sendAuthNumber = !1, this.timeOutFlg = !1, this.requestWord = "인증요청", this.param1 = _.clone({
                                    memCode: userInfo.memCode,
                                    memTelNo: "",
                                    memAuthNo: "",
                                    recaptchaToken: ""
                                }), $("#txtName").focus()) : (2 == e ? (this.param1.memTelNo = "", this.param1.recaptchaToken = "") : this.param1 = _.clone({
                                    memCode: userInfo.memCode,
                                    memTelNo: "",
                                    memAuthNo: "",
                                    recaptchaToken: ""
                                }), grecaptcha.reset(this.wigetId)), this.readConfirm = !0
                            },
                            load: function() {
                                var e = this;
                                axios.post("/data/member/info", this.request).then(function(t) {
                                    e.request.bizNum = t.data.rData.bizNum, e.request.mobileNo = t.data.rData.mobileNo, e.request.memSpsAddr1 = t.data.rData.memSpsAddr1, e.request.memSpsAddr2 = t.data.rData.memSpsAddr2, e.request.memSpsPostNum = t.data.rData.memSpsPostNum, e.request.marketingAgree = t.data.rData.marketingAgree, e.request.memNameConfirm = t.data.rData.memNameConfirm, e.request.resName = t.data.rData.resName, e.address.postNum = t.data.rData.memSpsPostNum, e.address.address1 = t.data.rData.memSpsAddr1, "Y" == e.request.marketingAgree ? e.checkMarketingAgree = !0 : e.checkMarketingAgree = !1, "Y" == e.request.memNameConfirm ? e.isMobileAuth = !0 : e.isMobileAuth = !1, e.dataConfirm = !e.dataConfirm
                                })
                            },
                            postOpen: function() {
                                post.open(this)
                            },
                            changeAccountInfo: function(e) {
                                var t = this;
                                $(".page-loader-more").fadeIn(""), axios.post("/member/update", this.request).then(function(n) {
                                    $(".page-loader-more").fadeOut(""), "0000" == n.data.rCode ? (userInfo.updateInfo(n.data.rData), t.request.memName = userInfo.name, t.request.memShotImg = userInfo.image, 0 == e ? noti.open("저장되었습니다.") : 1 == e && noti.open("본인인증이 완료되었습니다.")) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            changePassword: function() {
                                var e = this;
                                if (!/^.*(?=.{8,20})(?=.*[0-9])(?=.*[a-zA-Z]).*$/.test(e.request.newMemPwd)) return noti.open("숫자와 영문자 조합으로 8자리 이상을 사용해야 합니다."), !1;
                                e.request.newMemPwd == e.request.newMemPwdConfirm ? ($(".page-loader-more").fadeIn(""), axios.post("/data/member/password-update", this.request).then(function(e) {
                                    $(".page-loader-more").fadeOut("");
                                    var t = e.data;
                                    "0000" == t.rCode ? noti.open("변경되었습니다.") : "2001" == t.rCode ? noti.open("현재 비밀번호를 잘못 입력하셨습니다.") : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })) : noti.open("새 비밀번호와 비밀번호 확인이 일치하지 않습니다.")
                            },
                            errClear: function() {
                                for (var e = 0; e < this.errId.length; e++) "txt" == this.errId[e].substring(0, 3) && $("#" + this.errId[e]).removeClass("error"), $("#" + this.errId[e] + "_err").html("")
                            },
                            sendPhoneAuth: function() {
                                var e = this;
                                this.errClear();
                                var t = "",
                                    n = "";
                                if ("" == this.certiInfo.memTelNo && (t = "휴대폰 번호를 입력해주세요.", n = this.errId[4]), "" == this.selectCom && (t = "통신사를 선택해주세요.", n = this.errId[3]), "" == this.param.memSex && (t = "주민번호 뒷자리를 입력해주세요.", n = this.errId[2]), "" == this.param.memBirth && (t = "주민번호 앞자리를 입력해주세요.", n = this.errId[1]), "" == this.certiInfo.memName && (t = "이름을 입력해주세요.", n = this.errId[0]), "" != t) return "sel" == n.substring(0, 3) ? void $("#" + n + "_err").html(t) : ($("#" + n).addClass("error"), $("#" + n + "_err").html(t), void $("#" + n).focus());
                                $(".page-loader-more").fadeIn(""), this.readConfirm = !1, e.param.memTelCompany = e.selectCom, e.param.memTelNo = e.certiInfo.memTelNo, e.param.memName = e.certiInfo.memName, axios.post("/data/member/certi-call", this.param).then(function(t) {
                                    var n = t.data;
                                    e.readConfirm = !0, $(".page-loader-more").fadeOut(""), "0000" == n.rCode ? (e.requestWord = "재요청", e.readFlg = !0, e.sendAuthNumber = !0, e.timeOutFlg = !1, e.timerStart = !0, e.$nextTick(function() {
                                        e.setReCaptcha()
                                    }), e.setCountdown(!1)) : noti.open(n.rMsg)
                                })
                            },
                            setCountdown: function(e) {
                                var t = this;
                                clearTimeout(this.timer);
                                var n, a, i;
                                this.timer = setInterval(function() {
                                    if (e || (t.timeStr = "5:00", t.timeOutFlg = !0, t.timerStart = !1, e = !0, n = +new Date + 1e3 * (60 * t.maxMin + t.maxSec) + 500), (a = n - +new Date) < 1e3) return t.dataConfirm = !1, clearTimeout(t.timer), t.timeOutFlg = !1, t.readFlg = !0, t.dataConfirm = !0, t.param1.memAuthNo = "", t.timeStr = "00:00", void noti.open("인증 번호 입력 시간이 만료되었습니다.<br />다시 인증번호를 요청하세요.");
                                    i = new Date(a), t.timeStr = t.twoDigits(i.getUTCMinutes()) + ":" + t.twoDigits(i.getUTCSeconds())
                                }, 1e3)
                            },
                            twoDigits: function(e) {
                                return e <= 9 ? "0" + e : e
                            },
                            setReCaptcha: function() {
                                var e = this;
                                this.wigetId = grecaptcha.render(document.getElementById("certiRecaptcha"), {
                                    sitekey: e.sitekey
                                })
                            },
                            authCheck: function() {
                                var e = this;
                                if (!this.sendAuthNumber) return void noti.open("본인인증을 완료해주세요.");
                                if ("" == this.param1.memAuthNo) return void noti.open("인증번호를 입력해주세요.");
                                for (var t = 0; t < this.agree.length; t++)
                                    if (!this.agree[t].check) return void noti.open(this.agree[t].text + "는 필수입니다.");
                                this.param1.memTelNo = this.param.memTelNo, this.param1.recaptchaToken = grecaptcha.getResponse(this.wigetId), $(".page-loader-more").fadeIn(""), axios.post("/data/member/certi-check", this.param1).then(function(t) {
                                    var n = t.data;
                                    "0000" == n.rCode ? (clearTimeout(e.timer), $(".page-loader-more").fadeOut(""), e.$emit("set-ci-confirm-flag", !0), e.sendAuthNumber = !1) : ($(".page-loader-more").fadeOut(""), noti.open(n.rMsg), "2203" == n.rCode ? e.dataClear(2) : e.dataClear(3))
                                })
                            },
                            modalChange: function(e) {
                                this.modalSelect = e, $("#authModal").modal("show")
                            },
                            checkTerms: function() {
                                "Y" == this.request.marketingAgree ? this.request.marketingAgree = "N" : this.request.marketingAgree = "Y"
                            },
                            confirmLeaveCrowdy: function() {
                                $("#leave-confirm-modal").modal("show")
                            },
                            leaveCrowdy: function() {
                                $("#leave-confirm-modal").modal("hide"), axios.post("/data/member/leave", this.request).then(function(e) {
                                    "0000" == e.data.rCode ? noti.open("회원탈퇴가 정상적으로 처리되었습니다.", function() {
                                        window.open("/logout", "_self")
                                    }) : noti.open(e.data.rMsg)
                                })
                            }
                        },
                        components: {
                            dropifyInput: n(2).default.component(),
                            authModal: n(3).default.component(),
                            numberInput: n(0).default.component()
                        }
                    }
                }
            }]), e
        }();
    t.default = new o
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div>\n                <payment-info :type="type"></payment-info>\n            </div>\n            ',
                        data: function() {
                            return {
                                type: 3
                            }
                        },
                        created: function() {},
                        components: {
                            paymentInfo: n(8).default.component()
                        },
                        methods: {}
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    "use strict";

    function a(e, t, n) {
        return t in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e
    }

    function i(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var s = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        o = function() {
            function e() {
                i(this, e)
            }
            return s(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div class="mt60 xs-mt30 mb80 mypage-myaccount-layout">\n                \x3c!-- 사진영역--\x3e\n                <div class="dropify-wrapper-80 mypage-myaccount-photo">\n                    <dropify-input accept="image/*" default-message="" :default-img="userImage"></dropify-input>\n                </div>\n                \x3c!-- //사진영역--\x3e\n\n                \x3c!-- 컨텐츠 영역 --\x3e\n                <div class="mypage-form xs-mt30">\n                    \n                    <div class="mypage-title">투자계좌 등록하기</div>\n\n                    \x3c!-- 증권계좌 --\x3e\n                    <div class="mypage-sub-title-1 mt35 xs-mt30">{{userName}}님의 증권계좌</div>\n\n                    <div class="mypage-rabel mt20 mb5">증권계좌</div>\n\n                    <div class="common-default-flex mypage-select-custom">\n                        <secur-select v-if="confirm.secur" :options="securCodeOptions" v-model="request.memIvsSecurCode" class="mr10 "></secur-select>\n                        <number-input type="tel" class="form-control" id="pay_secur_code" :num="request.memIvsSecurNo" v-model="request.memIvsSecurNo" placeholder=""></number-input>\n                    </div>\n\n                    <div class="mypage-setting-desc mt5">\n                        투자자 본인 명의의 증권 계좌로 주권이 교부 됩니다. <span class="blue-800">직접 주식거래가 가능한 증권계좌번호를 입력해주세요.</span> <span class="colorRed1">CMA계좌는 사용이 불가합니다.</span>\n                    </div>\n                    <div class="mypage-setting-desc mt20">\n                        <span class="blue-800">한국예탁결제원과 계약이 된 증권사의 계좌만 이용이 가능합니다.</span> 목록에 없는 증권사는 사용하실 수 없습니다. 증권계좌는 실시간으로 유효성 확인이 되지 않으며, 유효하지 않은 증권계좌 입력시 배정탈락의 사유가 될 수 있습니다.\n                    </div>\n                    \n                    <div class="mypage-setting-btn mt20" v-on:click="securAccountSave()">증권계좌 저장</div>\n                    \x3c!-- //증권계좌 --\x3e\n\n                    <div class="mypage-sub-title-1 mt50">{{userName}}님의 투자예치금 계좌</div>\n\n                    \x3c!-- 가상계좌 발급 후--\x3e\n                    <template v-if="virtualAccountConfirm==\'Y\'">                        \n                        \x3c!-- 계좌 정보 --\x3e\n                        <div class="mypage-setting-block-box1 mt20">\n                            <div class="common-flex-between">\n                                <div class="mypage-setting-virtual-text1 ml20">크라우디 {{userName}}</div>\n                                <div class="common-default-flex pointerCursor" v-on:click="reload">\n                                    <div class="reload-ico"></div>\n                                    <div class="font12 blue-800" style="margin:-4px 20px 0px 4px!important;">새로고침</div>\n                                </div>\n                            </div>\n                            <div class="common-default-flex">\n                                <div class="font13 pl40" style="width: 210px;line-height:30px;">\n                                    <div>신한은행</div>\n                                    <div>투자가능예치금</div>\n                                </div>\n                                <div class="font17 text-right pr15" style="width:100%;">\n                                    <div class="crowdy-font-bold mt5"> {{getAccountHypen(accountInfo.virtualAccount)}}</div>\n                                    <div class="blue-800" style="margin-top:-5px;"> {{ parseInt(accountInfo.restAmount).toLocaleString() }}원</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="mypage-setting-desc mt30">\n                            위의 계좌는 <span class="blue-800">크라우디의 투자 프로젝트를 위해 발급된 {{userName}}님의 투자 전용 계좌</span>입니다. \n                            투자금을 입금하시거나 이후 채권 프로젝트의 투자금을 정산 받으시는 용도로 사용됩니다.\n                        </div>\n\n                        <div class="mypage-setting-desc mt20">\n                            크라우디는 보이스피싱 등 전자금융 사기 피해 방지를 위하여 투자예치금의 지연 출금 정책을 시행하고 있습니다. \n                            투자 신청하지 않은 투자예치금 잔액은 최근 입금 72시간 경과 후부터 출금이 가능합니다.\n                        </div>\n                        \n                        <div class="mypage-setting-btn mt20" v-on:click="accountWithdraw">출금하기</div>\n                        \x3c!-- //계좌 정보 --\x3e\n\n                        \x3c!-- 예치금 거래 내역 조회 부분 --\x3e\n                        <div class="mypage-sub-title-1 mt50 xs-mt45">예치금 거래 내역</div>\n\n                        <div class="mypage-rabel mb5 mt20">조회기간</div>\n                        <div class="common-default-flex mypage-form mypage-date-width">\n                            <date-picker v-model="accountRequest.startDate" :date="accountRequest.startDate"></date-picker>\n                            <div class="mypage-hr-custom mr10 xs-mr0"><hr/></div>\n                            <date-picker v-model="accountRequest.endDate" :date="accountRequest.endDate"></date-picker>\n                            <div class="mypage-default-btn" v-on:click="searchList">조회</div>\n                        </div>\n\n                        <div class="option_group option_group_none">\n                            <div class="option1_radio">\n                                <label for="option1_radio1" class="radio-inline mypage-radio-custom-2">\n                                    <input type="radio" name="option1_radio" id="option1_radio1" value="1week" v-model="searchDay"/><span class="webfont">1주일</span>\n                                </label>\n                                <label for="option1_radio2" class="radio-inline mypage-radio-custom-2">\n                                    <input type="radio" name="option1_radio" id="option1_radio2" value="1month" v-model="searchDay"/><span class="webfont">1개월</span>\n                                </label>\n                                <label for="option1_radio3" class="radio-inline mypage-radio-custom-2">\n                                    <input type="radio" name="option1_radio" id="option1_radio3" value="3month" v-model="searchDay"/><span class="webfont">3개월</span>\n                                </label>\n                                <label for="option1_radio4" class="radio-inline mypage-radio-custom-2">\n                                    <input type="radio" name="option1_radio" id="option1_radio4" value="6month" v-model="searchDay"/><span class="webfont">6개월</span>\n                                </label>\n                            </div>\n                        </div>\n                        \x3c!-- //예치금 거래 내역 조회 부분 --\x3e\n\n                        \x3c!--거래내역이 있을 때--\x3e\n                        <template v-if="accountList.length > 0">\n                            <div v-for="(item, index) in accountList" class="mypage-virtual-listbox" :class="{mt5 : index == 0}">\n                                <div class="font14 mypage-list-layout1">{{item.wdate.substring(2,10)}}</div>\n                                <div class="mypage-list-layout2">\n                                    <div class="font14">{{getAccountText(item)}}</div>\n                                    <div class="mypage-virtual-text">{{item.vsBankCom}} {{item.vsPayName}}</div>\n                                </div>\n                                <template v-if="item.vsStatus == 1 || item.vsStatus == 2 || item.vsStatus == 4">\n                                     <div class="font15 mypage-list-layout3 colorRed1 textRight"> -{{ parseInt(item.vsAmount).toLocaleString() }}원</div>\n                                </template>\n\n                                <template v-if="item.vsStatus == 0 || item.vsStatus == 3">  \n                                     <div class="font15 mypage-list-layout3 crowdy-color-blue textRight">{{ parseInt(item.vsAmount).toLocaleString() }}원</div>\n                                </template>\n\n                            </div>\n                        </template>\n                        \x3c!--//거래내역이 있을 때--\x3e\n\n                        \x3c!-- 거래내역이 없을 때--\x3e\n                        <template v-if="accountList.length == 0">\n                            <div class="mypage-setting-desc mt20 common_block_box_1">\n                                거래내역이 없습니다. 조회버튼을 눌러 새로고침 해주세요.\n                            </div>\n                        </template>\n                        \x3c!-- //거래내역이 없을 때--\x3e\n                       \n                        <div class="mypage-setting-btn mt20" v-if="moreShow" v-on:click="more()">더보기</div>\n                        \x3c!-- //예치금 거래 내역 --\x3e\n                    </template>\n                    \x3c!-- //가상계좌 발급 후--\x3e\n\n\n                    \x3c!-- 가상계좌 발급 전--\x3e\n                    <template v-if="virtualAccountConfirm==\'N\'">\n                        <div class="mypage-setting-desc mt20">\n                            <b>예치금 계좌 발급 안내>\u2028 </b><br/>\n                            투자 프로젝트에 참여하기 위해서는 투자예치금 계좌를 발급 받아야 합니다. \n                            <span class="blue-800">투자예치금 계좌는 ‘{{userName}}’님의 전용 가상계좌이며, 입금된 예치금을 통해 투자를 진행</span>하실 수 있습니다.<br/>\n                            예치금은 금융투자업 규정 제4-114조에 따라 크라우디와 신한은행과의 별도 계약을 통해 \'투자자재산\'으로 부기됩니다.\n                        </div>\n\n                        \x3c!-- 기존 투자회원 (CI가 없는 회원) 은 추가 본인인증 --\x3e\n                        <template v-if="memCiConfirm==\'N\'">\n                            <div class="mypage-rabel mb5 mt15">본인인증</div>\n                            <div class="mypage-setting-btn" v-on:click="authMobile()">{{authTitle}}</div>\n                            <div class="blue-800 mb10" style="font-size:13px;">{{authResultText}}</div>\n\n                            \x3c!-- 카드인증 시 핸드폰 번호 문자 인증 추가 --\x3e\n                            <template v-if="isMobileAuthShown">\n                                <div for="member_mobile" class="mypage-rabel mb5">전화번호</div>\n                                <div class="common-flex-end">\n                                    <number-input type="tel" class="form-control" placeholder="" maxlength="11" :num="mobileRequest.mobileNo" v-model="mobileRequest.mobileNo" :disabled="telNumDisabled" :class="{\'mypage-tel-layout1\' : isMobileAuthShown == true }"/></number-input>\n                                    <a class="mypage-btn mypage-tel-layout2" v-on:click="smsCheck">{{mobileAuthRequestText}}</a>\n                                </div>\n\n                                \x3c!--  인증번호 확인 버튼 --\x3e\n                                <div class="common-flex-end" v-if="checkNumber">\n                                    <number-input type="tel" class="form-control mypage-tel-layout1 mb0" :num="mobileRequest.authNo" v-model="mobileRequest.authNo"/></number-input>\n                                    <a class="mypage-btn mypage-tel-layout2 mb0" v-on:click="mobileAuth">인증번호 확인</a>\n                                </div>\n                                <span class="crowdy-color-blue font12">통신사의 사정에 따라 문자 수신이 다소 늦어질 수 있습니다</span>\n                                <div class="common-flex-between">\n                                    <div>{{ time }}</div>  \n                                    <div>{{ resultText }}</div>\n                                </div>\n                            </template>\n                            \x3c!-- //카드인증 시 핸드폰 번호 문자 인증 추가 --\x3e\n                        </template>\n                        \x3c!-- //기존 투자회원 (CI가 없는 회원) 은 추가 본인인증 --\x3e\n\n                        <div class="mypage-setting-block-box">\n                            <label class="chk_container">\n                                투자예치금 계좌 발급 및 제3자 개인정보 제공 약관 동의 \n                                <a href="javascript:void(0)" data-toggle="modal" data-target="#virtualModal"><span class="blue-800 ml20">(자세히보기)</span></a>\n                                <input type="checkbox" v-model="checkTerms">\n                                <span class="checkmark"></span>\n                            </label> \n                        </div>\n\n                        <div class="mypage-setting-btn mt20" v-on:click="virtualAccountRegist()">발급 받기</div>\n\n                    </template>\n                    \x3c!-- //가상계좌 발급 전--\x3e\n                    \x3c!-- //가상계좌 --\x3e\n                </div>\n                \x3c!-- //컨텐츠 영역 --\x3e\n\n                \x3c!-- modal --\x3e\n                <div id="virtualModal" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">\n                    <div class="modal-dialog" role="document">\n                        <div class="modal-content">\n                            <div class="modal-header">\n                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                            </div>\n                            <div class="modal-body">\n                                <ul>\n                                    <li>\n                                        <strong class="grey-800"></strong>\n                                        <ul>\n                                            <li>\n                                                회원은 본 약관에 동의함으로써, 크라우디 투자 프로젝트에 참여할 수 있는 투자예치금 계좌를 발급 받게 됩니다. 투자예치금 계좌는 회원의 전용 가상계좌이며, 투자 프로젝트에 참여 하기 전, 청약을 원하는 금액을 해당 계좌에 입금해야 합니다.\n                                            </li>\n                                            <li>\n                                               회원이 투자 프로젝트에 청약을 완료하면, 청약증거금 상당의 금액이 투자예치금 계좌에서 공제되며, 해당 금액의 출금이 불가능합니다. 해당 금액은 청약한 투자프로젝트가 모집금액의 80% 달성에 실패할 경우, 프로젝트는 성공하였으나 배정 순위에서 탈락할 경우, 청약 기간 내에 청약 취소를 한 경우에는 회원의 투자예치금 계좌에 해당 금액이 복원되며, 본인 명의의 계좌로 출금이 가능합니다.\n                                            </li>\n                                            <li>\n                                               투자예치금의 출금을 위해서는 \'출금계좌등록\'의 프로세스를 통해 본인 명의의 계좌를 등록하여야 합니다. 출금계좌등록 전에는 투자예치금 계좌에 잔액이 남아있다고 하더라도 출금이 불가능합니다. 출금계좌등록 프로세스에는 입력한 계좌의 명의확인, 1원 이체 방식을 통한 소유확인 절차가 포함됩니다.\n                                            </li>\n                                            <li>\n                                                보이스피싱 등 전자금융 사기 피해 방지를 위하여 투자 신청하지 않은 투자예치금 잔액은 최근 입금 72시간 경과 후부터 출금이 가능합니다.\n                                            </li>\n                                            <li>\n                                               회원이 발급받는 투자예치금은 계좌는 (주)크라우디를 예금주로 하는 신한은행 계좌를 모계좌로 하며, 금융투자업 규정 제4-114조에 따라 투자자재산으로 부기 되어있습니다.\n                                            </li>\n                                            <li>\n                                               투자예치금 계좌 발급 및 관리를 위해 크라우디가 신한은행에 제공하는 정보는 아래와 같습니다. \n                                            </li>\n                                        </ul>\n                                    </li>\n                                    <li>\n                                        <div class="mt15"><strong class="grey-800">[개인회원]</strong></div>\n                                        <ul>\n                                            <li>\n                                                고객명, 생년월일, 휴대폰번호, 출금통장 계좌번호, 가상계좌번호, CI (본인확인기관에서 부여하는 개인식별정보)\n                                            </li>\n                                        </ul>\n                                    </li>\n                                    <li>\n                                        <div class="mt15"><strong class="grey-800">[법인/조합회원]</strong></div>\n                                        <ul>\n                                            <li>\n                                                법인/조합명, 사업자번호(조합번호), 대표이사명, 담당자 생년월일, 담당자 CI, 담당자 휴대폰번호, 출금통장 계좌번호, 가상계좌번호 \n                                            </li>\n                                        </ul>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div class="modal-footer">\n                                <div class="row not-space">\n                                   <a class="modalBlueBtn" data-dismiss="modal">확인</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \x3c!-- modal --\x3e\n\n                 <form name="form_chk" method="post">\n                    <input type="hidden" name="m" value="checkplusSerivce">                     \x3c!-- 필수 데이타로, 누락하시면 안됩니다. --\x3e\n                    <input type="hidden" name="EncodeData" id="encodeData" value="">            \x3c!-- 위에서 업체정보를 암호화 한 데이타입니다. --\x3e\n\n                    <input type="hidden" name="param_r1" value="accountSetting.authResult">\n                    <input type="hidden" name="param_r2" value="">\n                    <input type="hidden" name="param_r3" value="">\n                </form>\n            </div>\n            ',
                        props: ["virtualAccountConfirm", "memCiConfirm", "bankStatus"],
                        data: function() {
                            var e;
                            return e = {
                                checkTerms: !1,
                                moreShow: !1,
                                now: moment().format("YYYY-MM-DD"),
                                securCodeOptions: [],
                                confirm: {
                                    secur: !1
                                },
                                request: {
                                    memCode: userInfo.memCode,
                                    memIvsSecurNo: "",
                                    memIvsSecurCode: "1"
                                },
                                searchDay: "1week",
                                accountList: [],
                                accountRequest: {
                                    memCode: userInfo.memCode,
                                    seq: 0,
                                    startDate: moment(this.now).add(-7, "days").format("YYYY-MM-DD"),
                                    endDate: moment(this.now).format("YYYY-MM-DD"),
                                    accountInfoConfirm: "N",
                                    paging: {
                                        page: "1",
                                        count: "4"
                                    }
                                },
                                accountInfo: {
                                    virtualAccount: 0,
                                    addTotalAmount: 0,
                                    restAmount: 0,
                                    bankCode: 0,
                                    bankNo: 0,
                                    bankStatus: 0
                                },
                                authRequest: {
                                    memCode: userInfo.memCode
                                },
                                os: "",
                                authChange: !1,
                                authError: !1,
                                authResultText: "",
                                isMobileAuthShown: !1,
                                telNumDisabled: !0,
                                authType: 1,
                                mobileAuthRequestText: "인증번호 요청",
                                mobileAuthRequestCount: 0,
                                checkNumber: !1,
                                time: "5:00",
                                timerStart: !1,
                                timeOut: !1,
                                isCntdownRestart: !1,
                                timer: {},
                                resultText: ""
                            }, a(e, "telNumDisabled", !0), a(e, "regiCodeDisabled", !1), a(e, "isMobileAuthShown", !1), a(e, "mobileRequest", {
                                mobileNo: "",
                                reqSeq: "",
                                authNo: ""
                            }), a(e, "updateRequest", {
                                bizNum: "",
                                memCode: userInfo.memCode,
                                memType: userInfo.type,
                                memName: userInfo.name,
                                memEmail: userInfo.email,
                                resName: "",
                                memShotImg: userInfo.image,
                                memShotImgFile: {},
                                mobileNo: "",
                                authChange: !1,
                                marketingAgree: "N",
                                memNameConfirm: "N"
                            }), a(e, "userName", ""), e
                        },
                        created: function() {
                            this.investorInfo(), this.getSecurCodeList(), window.accountSetting = this, "Y" == this.virtualAccountConfirm && this.getVirtualAccountList("Y"), this.deviceCheck()
                        },
                        watch: {
                            searchDay: function(e) {
                                "1week" == e ? (this.accountRequest.endDate = moment(this.now).format("YYYY-MM-DD"), this.accountRequest.startDate = moment(this.now).add(-7, "days").format("YYYY-MM-DD")) : "1month" == e ? (this.accountRequest.endDate = moment(this.now).format("YYYY-MM-DD"), this.accountRequest.startDate = moment(this.now).add(-1, "month").format("YYYY-MM-DD")) : "3month" == e ? (this.accountRequest.endDate = moment(this.now).format("YYYY-MM-DD"), this.accountRequest.startDate = moment(this.now).add(-3, "month").format("YYYY-MM-DD")) : "6month" == e && (this.accountRequest.endDate = moment(this.now).format("YYYY-MM-DD"), this.accountRequest.startDate = moment(this.now).add(-6, "month").format("YYYY-MM-DD")), this.searchList()
                            },
                            virtualAccountConfirm: function() {
                                var e = this;
                                e.$nextTick(function() {
                                    $(".option_group .radio-inline input").checkboxradio(), $(".option1_radio").controlgroup()
                                }), e.searchDay = "1week"
                            }
                        },
                        computed: {
                            userImage: function() {
                                return userInfo.image
                            },
                            userType: function() {
                                return userInfo.type
                            },
                            authTitle: function() {
                                return this.authChange ? (this.authResultText = "본인인증이 완료 되었습니다.", "본인인증 재요청") : this.authError ? (this.authResultText = "본인인증을 다시 해주세요!", "본인인증 다시하기") : (this.authResultText = "가상계좌 발급을 위해서 본인인증을 해주세요.", "본인인증하기")
                            }
                        },
                        methods: {
                            investorInfo: function() {
                                var e = this;
                                axios.post("/data/member/investor/info", this.request).then(function(t) {
                                    t.data.rData.memIvsSecurCode.length > 0 && (e.request.memIvsSecurCode = t.data.rData.memIvsSecurCode), e.request.memIvsSecurNo = t.data.rData.memIvsSecurNo, 1 == e.userType ? e.userName = t.data.rData.memName : e.userName = userInfo.name, e.$nextTick(function() {
                                        $(".option_group .radio-inline input").checkboxradio(), $(".option1_radio").controlgroup()
                                    })
                                })
                            },
                            getSecurCodeList: function() {
                                var e = this;
                                axios.post("/data/crowdy/code/invest", {
                                    gcode: "MEM_IVS_SECUR_CODE"
                                }).then(function(t) {
                                    var n = t.data;
                                    if ("0000" == n.rCode) {
                                        for (var a = 0; a < n.rData.length; a++) {
                                            var i = {
                                                id: n.rData[a].commonCode,
                                                text: n.rData[a].commonInfo
                                            };
                                            e.securCodeOptions.push(i)
                                        }
                                        e.confirm.secur = !0
                                    } else noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            registerInfo: function() {},
                            securAccountSave: function() {
                                $(".page-loader-more").fadeIn(""), axios.post("/data/member/investor/update/secur", this.request).then(function(e) {
                                    $(".page-loader-more").fadeOut(""), "0000" == e.data.rCode ? noti.open("입력하신 계좌정보가 등록되었습니다.") : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            deviceCheck: function() {
                                isMobile.apple.device ? this.os = "M" : isMobile.android.device ? this.os = "M" : this.os = "W"
                            },
                            authMobile: function() {
                                if ("facebook" == window.browserName || "instagram" == window.browserName) return void noti.open("해당 브라우저는 인증을 사용할 수 없습니다.<br/>다른 브라우저를 이용해 주십시오.");
                                "" == this.os && (this.os = "M"), this.authChange = !1, this.isMobileAuthShown = !1, this.telNumDisabled = !0, this.authType = 1, this.checkNumber = !1, axios.post("/auth/nice/" + this.os).then(function(e) {
                                    document.getElementById("encodeData").value = e.data.rData.data;
                                    var t = window.open("", "popupChk", "width=500, height=800, top=100, left=100, fullscreen=no, menubar=no, status=no, toolbar=no, titlebar=yes, location=no, scrollbar=no");
                                    if (null == t || void 0 === t || 0 == t.outerWidth) return void noti.open("팝업 차단 기능이 설정되어있습니다. 차단 기능을 해제(팝업허용) 한 후 다시 이용해 주십시오.");
                                    document.form_chk.action = "https://nice.checkplus.co.kr/CheckPlusSafeModel/checkplus.cb", document.form_chk.target = "popupChk", document.form_chk.submit()
                                })
                            },
                            authResult: function(e) {
                                if (e) {
                                    var t = this;
                                    axios.post("/auth/info").then(function(e) {
                                        if ("1" == t.userType && t.userName != e.data.name) return t.authError = !0, void noti.open("기존 회원이름과 본인인증한 이름이 다릅니다.");
                                        "1" == t.userType ? t.updateRequest.memName = e.data.name : t.updateRequest.memName = t.userName, t.updateRequest.mobileNo = e.data.mobileNo, t.authChange = !0, t.authError = !1, "" != e.data.mobileNo && null != e.data.mobileNo || (t.authType = 2), 2 == t.authType ? (t.telNumDisabled = !1, t.isMobileAuthShown = !0, noti.open("본인인증이 완료되었습니다. <br/> 카드 인증을 한 경우 핸드폰 문자인증을 추가로 완료하셔야합니다.")) : t.changeAccountInfo()
                                    })
                                } else t.authError = !0, noti.open("본인인증에 실패했습니다. <br/> 다시 시도해주세요.")
                            },
                            changeAccountInfo: function() {
                                var e = this;
                                e.updateRequest.authChange = !0, $(".page-loader-more").fadeIn(""), axios.post("/member/update", this.updateRequest).then(function(t) {
                                    $(".page-loader-more").fadeOut(""), "0000" == t.data.rCode ? (userInfo.updateInfo(t.data.rData), e.chagneCiConfirm(), noti.open("본인인증이 완료되었습니다. <br/> [발급 받기] 버튼을 누르면 투자예치금계좌를 발급받을 수 있습니다.")) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            smsCheck: function() {
                                var e = this;
                                this.mobileAuthRequestText = "인증번호 재요청", this.mobileAuthRequestCount++, this.checkNumber = !0, this.mobileAuthRequestCount > 1 && (this.isCntdownRestart = !0), axios.post("/auth/mobile", this.mobileRequest).then(function(t) {
                                    e.mobileRequest.reqSeq = t.data, e.timerStart = !0, e.countdown(e.countdownTimeOut)
                                })
                            },
                            countdown: function(e) {
                                function t(e) {
                                    return e <= 9 ? "0" + e : e
                                }

                                function n() {
                                    c.isCntdownRestart && (c.time = "", c.isCntdownRestart = !1, clearTimeout(c.timer), l = 4, d = 59, a = +new Date + 1e3 * (60 * l + d) + 500), o = a - +new Date, o < 1e3 ? e() : (r = new Date(o), i = r.getUTCHours(), s = r.getUTCMinutes(), c.time = (i ? i + ":" + t(s) : s) + ":" + t(r.getUTCSeconds()), c.timer = setTimeout(n, r.getUTCMilliseconds() + 500))
                                }
                                var a, i, s, o, r, l = 4,
                                    d = 59,
                                    c = this;
                                a = +new Date + 1e3 * (60 * l + d) + 500, n()
                            },
                            countdownTimeOut: function() {
                                this.timeOut = !0, this.timerStart = !1
                            },
                            mobileAuth: function() {
                                var e = this;
                                axios.post("/auth/mobile/result", this.mobileRequest).then(function(t) {
                                    clearTimeout(e.timer), e.timerStart = !1, t.data ? (e.authCardMobileConfirm = !0, e.updateRequest.mobileNo = e.mobileRequest.mobileNo, e.changeAccountInfo()) : e.resultText = "인증번호가 유효하지 않습니다."
                                })
                            },
                            authUpdate: function() {
                                var e = this;
                                axios.post("/data/member/update-certi", this.authRequest).then(function(t) {
                                    if ("0000" != t.data.rCode) return void noti.open("본인인증에 실패했습니다 <br/> 다시 시도해주세요.");
                                    e.memCiConfirm = "Y", e.virtualAccountRegist()
                                })
                            },
                            chagneCiConfirm: function() {
                                this.memCiConfirm, this.$emit("set-ci-confirm-flag", !0)
                            },
                            virtualAccountRegist: function() {
                                var e = this;
                                return "N" == this.memCiConfirm ? void noti.open("본인인증을 완료하셔야 투자예치금 발급이 가능합니다.") : this.checkTerms ? void(1 == this.bankStatus ? ($(".page-loader-more").fadeIn(""), axios.post("/data/invest/virtual/account-make", {
                                    memCode: userInfo.memCode,
                                    virtualType: "1",
                                    virtualConfirm: "N"
                                }).then(function(t) {
                                    $(".page-loader-more").fadeOut("");
                                    var n = t.data;
                                    "0000" == n.rCode ? (noti.open(e.userName + "님의 투자예치금계좌가 발급 되었습니다. <br/> 해당 투자예치금계좌는 투자 전 " + e.userName + "님의 투자금이 대기하는 계좌로, 실제 청약을 위해선 투자를 원하시는 기업의 청약 페이지로 가셔서 '투자하기'를 진행하셔야 합니다. <br /> (크라우디 홈페이지 상단 '투자' -> '기업의 청약 프로젝트' -> '투자하기'를 모두 마치셔야 청약이 완료됩니다.)"), e.chagneVirtualAccountConfirm()) : noti.open(n.rMsg)
                                })) : window.open("/account/main?virtual=Y", "_self")) : void noti.open("약관 동의가 필요합니다.")
                            },
                            accountWithdraw: function() {
                                this.$emit("change-withdraw-flag", !0)
                            },
                            chagneVirtualAccountConfirm: function() {
                                this.$emit("set-virtual-account-flag", !0)
                            },
                            reload: function() {
                                this.getVirtualAccountInfo()
                            },
                            more: function() {
                                this.accountRequest.paging.page = _.toString(_.add(_.toNumber(this.accountRequest.paging.page), 1)), this.getVirtualAccountList("N")
                            },
                            searchList: function() {
                                this.accountRequest.paging.page = "1", this.accountRequest.paging.count = "4", this.accountList = _.cloneDeep([]), this.getVirtualAccountList("N")
                            },
                            getVirtualAccountInfo: function() {
                                var e = this;
                                $(".page-loader-more").fadeIn(""), axios.post("/data/invest/virtual/account-refresh", {
                                    memCode: userInfo.memCode,
                                    seq: 0
                                }).then(function(t) {
                                    $(".page-loader-more").fadeOut("");
                                    var n = t.data;
                                    "0000" == n.rCode ? e.accountInfo = n.rData : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            getVirtualAccountList: function(e) {
                                var t = this;
                                this.accountRequest.accountInfoConfirm = e, $(".page-loader-more").fadeIn(""), axios.post("/data/invest/virtual/withdraw-list", this.accountRequest).then(function(n) {
                                    $(".page-loader-more").fadeOut("");
                                    var a = n.data;
                                    "0000" == a.rCode ? (a.rData.list != [] && 0 != a.rData.length ? (t.accountList = _.concat(t.accountList, a.rData.list), a.rData.length > t.accountList.length ? t.moreShow = !0 : t.moreShow = !1) : t.moreShow = !1, "Y" == e && (t.accountInfo = a.rData.data)) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요."), t.$nextTick(function() {
                                        $(".option_group .radio-inline input").checkboxradio(), $(".option1_radio").controlgroup()
                                    })
                                })
                            },
                            getAccountText: function(e) {
                                if ("0" == e.vsStatus) return "예치금 입금";
                                if ("1" == e.vsStatus) return "예치금 출금";
                                if ("2" == e.vsStatus) return "청약";
                                if ("3" == e.vsStatus) {
                                    if ("1" == e.vsCancelType) return "청약취소";
                                    if ("2" == e.vsCancelType) return "배정탈락";
                                    if ("3" == e.vsCancelType) return "부분배정탈락";
                                    if ("4" == e.vsCancelType) return "프로젝트실패"
                                } else if ("4" == e.vsStatus) return "출금 수수료"
                            },
                            getAccountHypen: function(e) {
                                return e.toString().substring(0, 3) + "-" + e.toString().substring(3, 6) + "-" + e.toString().substring(6, e.toString().length)
                            }
                        },
                        components: {
                            investModal: n(5).default.component(),
                            dropifyInput: n(2).default.component(),
                            securSelect: n(1).default.component(),
                            numberInput: n(0).default.component(),
                            datePicker: n(19).default.component(),
                            virtualModal: n(22).default.component()
                        }
                    }
                }
            }]), e
        }();
    t.default = new o
}, function(e, t, n) {
    "use strict";

    function a(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    });
    var i = function() {
            function e(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
                }
            }
            return function(t, n, a) {
                return n && e(t.prototype, n), a && e(t, a), t
            }
        }(),
        s = function() {
            function e() {
                a(this, e)
            }
            return i(e, [{
                key: "component",
                value: function() {
                    return {
                        template: '\n            <div class="mt60 xs-mt30 mb80 mypage-myaccount-layout">\n                \x3c!-- 사진영역--\x3e\n                <div class="dropify-wrapper-80 mypage-myaccount-photo">\n                    <dropify-input accept="image/*" default-message="" :default-img="userImage"></dropify-input>\n                </div>\n                \x3c!-- //사진영역--\x3e\n\n                \x3c!-- 컨텐츠 영역 --\x3e\n                <div class="mypage-form xs-mt30">\n                    \n                    \x3c!-- 출금계좌가 있을 경우 --\x3e\n                    <template v-if="bankStatus == \'1\'">\n                        \n                        <div class="mypage-title">{{userName}}님의 출금계좌</div>\n\n                        <div class="mypage-setting-block-box1 mt35">\n                            <div class="common-flex-between">\n                                <div class="font15 crowdy-font-bold ml20">크라우디{{userName}}</div>\n                                <div class="mypage-setting-btn-small mr20 " v-on:click="accountProcess">변경하기</div>\n                            </div>\n                            <div class="common-default-flex mt10">\n                                <div class="font13 pl50" style="width:100%;">\n                                    <div style="line-height: 30px;">{{accountInfo.bankCom}}</div>\n                                    <div style="line-height: 30px;">출금가능금액</div>\n                                </div>\n                                <div class="font17 text-right pr20" style="width:100%;">\n                                    <div class="crowdy-font-bold">{{accountInfo.bankNo}}</div>\n                                    <div class="blue-800">{{parseInt(accountInfo.restAmount).toLocaleString()}}원</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="font18 mt45">출금하기</div>\n                        <div class="common-default-flex mt15">\n                            <number-input type="tel" :num="amount" class="form-control mypage-amount-width" placeholder="0" v-model="amount"/></number-input>\n                            <div class="mypage-default-btn-1" v-on:click="allAmount">전액</div>\n                        </div>\n                        <div class="mypage-setting-desc mt5"> \n                            - 출금 가능금액에 청약신청 중인 금액은 제외됩니다.<br/>\n                            - <span class="blue-800">출금은 한 달에 2회 무료</span>이며, 이후 이체수수료가 부과됩니다.<br />\n                            - 크라우디는 보이스피싱 등 전자금융 사기 피해 방지를 위하여 투자예치금의 지연 출금 정책을 시행하고 있습니다. <br/>\n                            - 투자 신청하지 않은 투자예치금 잔액은 최근 입금 72시간 경과 후부터 출금이 가능합니다.\n                        </div>\n\n                        <div class="mypage-setting-btn mt20" v-on:click="withdraw">출금하기</div>\n                    </template>\n                    \x3c!-- //출금계좌가 있을 경우 --\x3e\n\n\n                    \x3c!-- 출금계좌가 없을 경우 --\x3e\n                    <template v-if="bankStatus != \'1\'">\n                        \n                        <div class="mypage-title">출금계좌 등록안내</div>\n                        <div class="mypage-sub-title mt30">{{userName}}님의 출금계좌</div>\n                        <div class="font13 mt20">\n                            투자예치금을 출금하기 위해서 본인 명의의 은행계좌를 \n                            <span class="blue-800">등록해야 합니다. 등록하려는 계좌의 실명 및 소유확인을 위해서 <b>1원 이체를 통한 본인인증을 진행</b>합니다.</span>\n                        </div/>\n                        <div class="mypage-setting-btn mt20" v-on:click="accountProcess">출금계좌 등록하기</div>\n\n                    </template>\n                    \x3c!-- //출금계좌가 없을 경우 --\x3e\n\n                </div>\n                \x3c!-- //컨텐츠 영역 --\x3e\n            </div>\n            ',
                        props: ["bankStatus"],
                        data: function() {
                            return {
                                addFees: "N",
                                request: {
                                    memCode: userInfo.memCode,
                                    memIvsSecurNo: "",
                                    memIvsSecurCode: "1"
                                },
                                accountInfo: {
                                    virtualAccount: 0,
                                    addTotalAmount: 0,
                                    restAmount: 0,
                                    bankCode: 0,
                                    bankNo: 0,
                                    bankStatus: 0,
                                    withdrawCount: 0,
                                    limitCount: "2",
                                    fees: "1000"
                                },
                                amount: 0,
                                userName: userInfo.name
                            }
                        },
                        created: function() {
                            this.getMemberCertiInfo(), "1" == this.bankStatus && this.getVirtualAccountInfo(!1)
                        },
                        computed: {
                            userCode: function() {
                                return userInfo.code
                            },
                            userType: function() {
                                return userInfo.type
                            },
                            userImage: function() {
                                return userInfo.image
                            }
                        },
                        methods: {
                            getMemberCertiInfo: function() {
                                var e = this;
                                $(".page-loader-more").fadeIn(""), axios.post("/data/member/certi/info", this.request).then(function(t) {
                                    if ($(".page-loader-more").fadeOut(""), "0000" != t.data.rCode) return void noti.open(t.data.rMsg);
                                    var n = t.data.rData;
                                    "Y" == n.memCiConfirm && 1 == e.userType && (e.userName = n.memName)
                                })
                            },
                            getVirtualAccountInfo: function(e) {
                                var t = this;
                                $(".page-loader-more").fadeIn(""), axios.post("/data/invest/virtual/account-refresh", {
                                    memCode: userInfo.memCode,
                                    seq: 0
                                }).then(function(n) {
                                    $(".page-loader-more").fadeOut("");
                                    var a = n.data;
                                    "0000" == a.rCode ? (t.accountInfo = a.rData, e && t.notiShow()) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            notiShow: function() {
                                info.open("<div class='common-modal-title'>출금 요청</div><div class='font15 mt20 xs-mt10'>은행으로 출금을 요청하였습니다.<br/>은행 상황에 따라 시간이 다소 소요될 수 있습니다</div>", this.showAccountPage)
                            },
                            showAccountPage: function() {
                                this.$emit("change-withdraw-flag", !1)
                            },
                            accountProcess: function() {
                                window.open("/account/main", "_self")
                            },
                            withdraw: function() {
                                var e = "";
                                return parseInt(this.amount) > parseInt(this.accountInfo.restAmount) ? void noti.open("예치금보다 큰 금액은 출금이 불가능합니다.") : parseInt(this.amount) < 1e3 ? void noti.open("1000원 이하의 금액은 출금할 수 없습니다.") : (parseInt(this.accountInfo.withdrawCount) >= parseInt(this.accountInfo.limitCount) ? (e = "<div class='common-modal-title'>출금 요청</div><div class='font13'><span class='blue-800'>출금수수료 " + this.accountInfo.fees + "원</span>을 제외한 금액이 출금됩니다.</div><div class='common-default-flex mt15'><div class='font14'><div>출금계좌</div><div class='mt30'>출금금액</div></div><div class='pl15'><div class='font14'>" + this.userName + " &nbsp; | &nbsp;" + this.accountInfo.bankCom + "</div><div class='font15'>" + this.accountInfo.bankNo + "</div><div class='font18 blue-800 crowdy-font-bold'>" + parseInt(parseInt(this.amount) - parseInt(this.accountInfo.fees)).toLocaleString() + "원</div></div></div>", this.addFees = "Y") : (e = "<div class='common-modal-title'>출금 요청</div><div class='font13'>무료 출금 횟수 <span class='blue-800'>" + (parseInt(this.accountInfo.limitCount) - parseInt(this.accountInfo.withdrawCount)) + "회 남음</span></div><div class='common-default-flex mt15'><div class='font14'><div>출금계좌</div><div class='mt30'>출금금액</div></div><div class='pl15'><div class='font14'>" + this.userName + " &nbsp; | &nbsp;" + this.accountInfo.bankCom + "</div><div class='font15'>" + this.accountInfo.bankNo + "</div><div class='font18 blue-800 crowdy-font-bold'>" + parseInt(this.amount).toLocaleString() + "원</div></div></div>", this.addFees = "N"), void info.open(e, this.withdrawRequest, !0))
                            },
                            withdrawRequest: function() {
                                var e = this,
                                    t = "";
                                t = this.accountInfo.bankName.length > 3 ? this.accountInfo.bankName.substring(0, 3) : this.accountInfo.bankName, $(".page-loader-more").fadeIn(""), axios.post("/data/invest/virtual/withdraw", {
                                    memCode: userInfo.memCode,
                                    amount: this.amount,
                                    memo: "크라우디" + t,
                                    addFees: this.addFees
                                }).then(function(t) {
                                    $(".page-loader-more").fadeOut("");
                                    var n = t.data;
                                    "0000" == n.rCode ? e.getVirtualAccountInfo(!0) : "5006" == n.rCode ? noti.open(n.rMsg) : noti.open("시스템 문제가 발생하였습니다.<br/> 다시 시도해주세요.")
                                })
                            },
                            allAmount: function() {
                                this.amount = _.cloneDeep(this.accountInfo.restAmount)
                            }
                        },
                        components: {
                            dropifyInput: n(2).default.component(),
                            securSelect: n(1).default.component(),
                            numberInput: n(0).default.component()
                        }
                    }
                }
            }]), e
        }();
    t.default = new s
}, function(e, t, n) {
    e.exports = n(18)
}]);